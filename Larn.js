var Module=typeof Module!=="undefined"?Module:{};if(typeof window==="object"){Module["arguments"]=window.location.search.substr(1).trim().split("&");if(!Module["arguments"][0])Module["arguments"]=[]}var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=(function(status,toThrow){throw toThrow});Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process["on"]("unhandledRejection",abort);Module["quit"]=(function(status){process["exit"](status)});Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=(function(title){document.title=title})}else{}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":(function(x,y){return x%y}),"debugger":(function(){debugger})};var jsCallStartIndex=1;var functionPointers=new Array(0);function addFunction(func,sig){var base=0;for(var i=base;i<base+0;i++){if(!functionPointers[i]){functionPointers[i]=func;return jsCallStartIndex+i}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var Runtime={dynCall:dynCall};var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}var JSfuncs={"stackSave":(function(){stackSave()}),"stackRestore":(function(){stackRestore()}),"arrayToC":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};function ccall(ident,returnType,argTypes,args,opts){function convertReturnValue(ret){if(returnType==="string")return Pointer_stringify(ret);if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(typeof EmterpreterAsync==="object"&&EmterpreterAsync.state){return new Promise((function(resolve){EmterpreterAsync.restartFunc=func;EmterpreterAsync.asyncFinalizers.push((function(ret){if(stack!==0)stackRestore(stack);resolve(convertReturnValue(ret))}))}))}ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);if(opts&&opts.async)return Promise.resolve(ret);return ret}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!staticSealed)return staticAlloc(size);if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}if(!Module["reallocBuffer"])Module["reallocBuffer"]=(function(size){var ret;try{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module["reallocBuffer"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module["buffer"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnExit(cb){__ATEXIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile="Larn.wast";var wasmBinaryFile="Larn.wasm";var asmjsCodeFile="Larn.temp.asm.js";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={"global":null,"env":null,"asm2wasm":asm2wasmImports,"parent":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){err("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){err("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){err("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=Math;info["env"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output["instance"],output["module"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)}))}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource,(function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asmPreload"]=Module["asm"];var asmjsReallocBuffer=Module["reallocBuffer"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}});Module["reallocBuffer"]=(function(size){if(finalMethod==="asmjs"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod="";Module["asm"]=(function(global,env,providedBuffer){if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["__memory_base"]){env["__memory_base"]=Module["STATIC_BASE"]}if(!env["__table_base"]){env["__table_base"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,"no binaryen method succeeded.");return exports})}integrateWasmJS();var ASM_CONSTS=[(function(){FS.mkdir("/IDBFS");FS.mount(IDBFS,{},"/IDBFS");FS.syncfs(true,(function(err){if(err)console.log("Error while syncing from persistent state to memory",err)}))}),(function(){FS.syncfs((function(err){if(err)console.log("Error while syncing from memory to persistent state",err)}))}),(function(){return screen.width}),(function(){return screen.height}),(function($0){if(typeof Module["setWindowTitle"]!=="undefined"){Module["setWindowTitle"](Module["Pointer_stringify"]($0))}return 0}),(function($0,$1,$2){var w=$0;var h=$1;var pixels=$2;if(!Module["SDL2"])Module["SDL2"]={};var SDL2=Module["SDL2"];if(SDL2.ctxCanvas!==Module["canvas"]){SDL2.ctx=Module["createContext"](Module["canvas"],false,true);SDL2.ctxCanvas=Module["canvas"]}if(SDL2.w!==w||SDL2.h!==h||SDL2.imageCtx!==SDL2.ctx){SDL2.image=SDL2.ctx.createImageData(w,h);SDL2.w=w;SDL2.h=h;SDL2.imageCtx=SDL2.ctx}var data=SDL2.image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=255;src++;dst+=4}}else{if(SDL2.data32Data!==data){SDL2.data32=new Int32Array(data.buffer);SDL2.data8=new Uint8Array(data.buffer)}var data32=SDL2.data32;num=data32.length;data32.set(HEAP32.subarray(src,src+num));var data8=SDL2.data8;var i=3;var j=i+4*num;if(num%8==0){while(i<j){data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0}}else{while(i<j){data8[i]=255;i=i+4|0}}}SDL2.ctx.putImageData(SDL2.image,0,0);return 0}),(function($0,$1,$2,$3,$4){var w=$0;var h=$1;var hot_x=$2;var hot_y=$3;var pixels=$4;var canvas=document.createElement("canvas");canvas.width=w;canvas.height=h;var ctx=canvas.getContext("2d");var image=ctx.createImageData(w,h);var data=image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=val>>24&255;src++;dst+=4}}else{var data32=new Int32Array(data.buffer);num=data32.length;data32.set(HEAP32.subarray(src,src+num))}ctx.putImageData(image,0,0);var url=hot_x===0&&hot_y===0?"url("+canvas.toDataURL()+"), auto":"url("+canvas.toDataURL()+") "+hot_x+" "+hot_y+", auto";var urlBuf=_malloc(url.length+1);stringToUTF8(url,urlBuf,url.length+1);return urlBuf}),(function($0){if(Module["canvas"]){Module["canvas"].style["cursor"]=Module["Pointer_stringify"]($0)}return 0}),(function(){if(Module["canvas"]){Module["canvas"].style["cursor"]="none"}}),(function(){if(typeof AudioContext!=="undefined"){return 1}else if(typeof webkitAudioContext!=="undefined"){return 1}return 0}),(function(){if(typeof navigator.mediaDevices!=="undefined"&&typeof navigator.mediaDevices.getUserMedia!=="undefined"){return 1}else if(typeof navigator.webkitGetUserMedia!=="undefined"){return 1}return 0}),(function($0){if(typeof SDL2==="undefined"){SDL2={}}if(!$0){SDL2.audio={}}else{SDL2.capture={}}if(!SDL2.audioContext){if(typeof AudioContext!=="undefined"){SDL2.audioContext=new AudioContext}else if(typeof webkitAudioContext!=="undefined"){SDL2.audioContext=new webkitAudioContext}}return SDL2.audioContext===undefined?-1:0}),(function(){return SDL2.audioContext.sampleRate}),(function($0,$1,$2,$3){var have_microphone=(function(stream){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);SDL2.capture.silenceTimer=undefined}SDL2.capture.mediaStreamNode=SDL2.audioContext.createMediaStreamSource(stream);SDL2.capture.scriptProcessorNode=SDL2.audioContext.createScriptProcessor($1,$0,1);SDL2.capture.scriptProcessorNode.onaudioprocess=(function(audioProcessingEvent){if(SDL2===undefined||SDL2.capture===undefined){return}audioProcessingEvent.outputBuffer.getChannelData(0).fill(0);SDL2.capture.currentCaptureBuffer=audioProcessingEvent.inputBuffer;Runtime.dynCall("vi",$2,[$3])});SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode);SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination);SDL2.capture.stream=stream});var no_microphone=(function(error){});SDL2.capture.silenceBuffer=SDL2.audioContext.createBuffer($0,$1,SDL2.audioContext.sampleRate);SDL2.capture.silenceBuffer.getChannelData(0).fill(0);var silence_callback=(function(){SDL2.capture.currentCaptureBuffer=SDL2.capture.silenceBuffer;Runtime.dynCall("vi",$2,[$3])});SDL2.capture.silenceTimer=setTimeout(silence_callback,$1/SDL2.audioContext.sampleRate*1e3);if(navigator.mediaDevices!==undefined&&navigator.mediaDevices.getUserMedia!==undefined){navigator.mediaDevices.getUserMedia({audio:true,video:false}).then(have_microphone).catch(no_microphone)}else if(navigator.webkitGetUserMedia!==undefined){navigator.webkitGetUserMedia({audio:true,video:false},have_microphone,no_microphone)}}),(function($0,$1,$2,$3){SDL2.audio.scriptProcessorNode=SDL2.audioContext["createScriptProcessor"]($1,0,$0);SDL2.audio.scriptProcessorNode["onaudioprocess"]=(function(e){if(SDL2===undefined||SDL2.audio===undefined){return}SDL2.audio.currentOutputBuffer=e["outputBuffer"];Runtime.dynCall("vi",$2,[$3])});SDL2.audio.scriptProcessorNode["connect"](SDL2.audioContext["destination"])}),(function($0){if($0){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer)}if(SDL2.capture.stream!==undefined){var tracks=SDL2.capture.stream.getAudioTracks();for(var i=0;i<tracks.length;i++){SDL2.capture.stream.removeTrack(tracks[i])}SDL2.capture.stream=undefined}if(SDL2.capture.scriptProcessorNode!==undefined){SDL2.capture.scriptProcessorNode.onaudioprocess=(function(audioProcessingEvent){});SDL2.capture.scriptProcessorNode.disconnect();SDL2.capture.scriptProcessorNode=undefined}if(SDL2.capture.mediaStreamNode!==undefined){SDL2.capture.mediaStreamNode.disconnect();SDL2.capture.mediaStreamNode=undefined}if(SDL2.capture.silenceBuffer!==undefined){SDL2.capture.silenceBuffer=undefined}SDL2.capture=undefined}else{if(SDL2.audio.scriptProcessorNode!=undefined){SDL2.audio.scriptProcessorNode.disconnect();SDL2.audio.scriptProcessorNode=undefined}SDL2.audio=undefined}if(SDL2.audioContext!==undefined&&SDL2.audio===undefined&&SDL2.capture===undefined){SDL2.audioContext.close();SDL2.audioContext=undefined}}),(function($0,$1){var numChannels=SDL2.capture.currentCaptureBuffer.numberOfChannels;for(var c=0;c<numChannels;++c){var channelData=SDL2.capture.currentCaptureBuffer.getChannelData(c);if(channelData.length!=$1){throw"Web Audio capture buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}if(numChannels==1){for(var j=0;j<$1;++j){setValue($0+j*4,channelData[j],"float")}}else{for(var j=0;j<$1;++j){setValue($0+(j*numChannels+c)*4,channelData[j],"float")}}}}),(function($0,$1){var numChannels=SDL2.audio.currentOutputBuffer["numberOfChannels"];for(var c=0;c<numChannels;++c){var channelData=SDL2.audio.currentOutputBuffer["getChannelData"](c);if(channelData.length!=$1){throw"Web Audio output buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}for(var j=0;j<$1;++j){channelData[j]=HEAPF32[$0+(j*numChannels+c<<2)>>2]}}})];function _emscripten_asm_const_i(code){return ASM_CONSTS[code]()}function _emscripten_asm_const_iiiii(code,a0,a1,a2,a3){return ASM_CONSTS[code](a0,a1,a2,a3)}function _emscripten_asm_const_ii(code,a0){return ASM_CONSTS[code](a0)}function _emscripten_asm_const_iii(code,a0,a1){return ASM_CONSTS[code](a0,a1)}function _emscripten_asm_const_iiiiii(code,a0,a1,a2,a3,a4){return ASM_CONSTS[code](a0,a1,a2,a3,a4)}function _emscripten_asm_const_iiii(code,a0,a1,a2){return ASM_CONSTS[code](a0,a1,a2)}STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+719456;__ATINIT__.push({func:(function(){___emscripten_environ_constructor()})});var STATIC_BUMP=719456;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;var EMTSTACKTOP=getMemory(1048576);var eb=getMemory(86872);__ATPRERUN__.push((function(){HEAPU8.set([140,1,20,0,0,0,0,0,2,10,0,0,81,184,2,0,2,11,0,0,208,170,9,0,2,12,0,0,0,153,9,0,136,13,0,0,0,8,13,0,136,13,0,0,25,13,13,32,137,13,0,0,0,3,8,0,25,7,8,16,25,6,8,12,25,1,8,8,25,4,8,4,36,13,0,37,121,13,104,4,2,13,0,0,184,127,9,0,82,13,13,0,121,13,6,0,2,14,0,0,11,2,7,0,135,13,0,0,14,0,0,0,119,0,95,4,2,13,0,0,40,127,9,0,82,2,13,0,1,14,23,0,135,13,1,0,14,0,0,0,33,13,13,7,121,13,83,4,1,13,18,0,135,5,1,0,13,0,0,0,2,13,0,0,4,127,9,0,82,13,13,0,49,13,5,13,220,17,0,0,27,13,2,3,25,13,13,2,47,13,13,0,216,0,0,0,2,14,0,0,56,2,7,0,135,13,0,0,14,0,0,0,119,0,70,4,1,13,0,0,1,19,38,0,138,0,13,19,148,1,0,0,216,1,0,0,48,2,0,0,116,2,0,0,168,2,0,0,216,2,0,0,20,3,0,0,72,3,0,0,168,3,0,0,96,4,0,0,116,4,0,0,136,4,0,0,180,4,0,0,32,5,0,0,140,5,0,0,196,5,0,0,0,6,0,0,20,6,0,0,56,6,0,0,92,6,0,0,136,6,0,0,172,8,0,0,208,8,0,0,16,9,0,0,124,9,0,0,196,9,0,0,228,9,0,0,136,10,0,0,184,10,0,0,232,10,0,0,28,11,0,0,48,11,0,0,96,11,0,0,252,11,0,0,28,12,0,0,4,13,0,0,52,13,0,0,176,17,0,0,85,3,0,0,2,19,0,0,5,5,7,0,135,13,2,0,19,3,0,0,119,0,23,4,2,13,0,0,84,127,9,0,82,0,13,0,120,0,8,0,2,13,0,0,76,127,9,0,2,14,0,0,76,127,9,0,82,14,14,0,25,14,14,2,85,13,14,0,2,14,0,0,84,127,9,0,1,13,250,0,3,13,0,13,85,14,13,0,119,0,6,4,1,14,1,0,25,15,2,3,41,17,2,1,25,17,17,2,135,16,1,0,17,0,0,0,3,15,15,16,1,17,1,0,15,17,17,2,2,18,0,0,107,2,7,0,2,19,0,0,134,2,7,0,125,16,17,18,19,0,0,0,1,19,100,0,1,18,43,0,134,13,0,0,132,60,0,0,14,15,16,19,18,0,0,0,119,0,240,3,2,13,0,0,104,127,9,0,82,0,13,0,120,0,8,0,2,13,0,0,16,127,9,0,2,18,0,0,16,127,9,0,82,18,18,0,25,18,18,3,85,13,18,0,2,18,0,0,104,127,9,0,1,13,144,1,3,13,0,13,85,18,13,0,119,0,223,3,1,18,3,0,135,13,1,0,18,0,0,0,25,7,13,1,1,18,3,0,135,19,3,0,7,0,0,0,2,16,0,0,160,2,7,0,134,13,0,0,100,220,0,0,18,19,16,7,119,0,210,3,2,13,0,0,132,127,9,0,2,16,0,0,132,127,9,0,82,16,16,0,2,19,0,0,20,127,9,0,82,19,19,0,41,19,19,1,3,16,16,19,85,13,16,0,119,0,198,3,1,13,5,0,25,19,2,15,1,15,10,0,135,18,1,0,15,0,0,0,3,19,19,18,2,18,0,0,207,2,7,0,1,15,70,0,1,14,64,0,134,16,0,0,132,60,0,0,13,19,18,15,14,0,0,0,119,0,183,3,1,14,3,0,135,16,1,0,14,0,0,0,25,7,16,2,1,14,6,0,135,15,3,0,7,0,0,0,2,18,0,0,234,2,7,0,134,16,0,0,100,220,0,0,14,15,18,7,119,0,170,3,2,16,0,0,108,127,9,0,82,16,16,0,120,16,8,0,2,16,0,0,48,128,9,0,2,18,0,0,48,128,9,0,82,18,18,0,25,18,18,3,85,16,18,0,1,16,100,0,135,18,1,0,16,0,0,0,1,16,150,0,3,7,18,16,2,16,0,0,108,127,9,0,2,18,0,0,108,127,9,0,82,18,18,0,3,18,7,18,85,16,18,0,119,0,146,3,2,18,0,0,76,225,10,0,82,0,18,0,26,18,0,5,85,1,18,0,25,18,0,6,85,4,18,0,2,18,0,0,72,225,10,0,82,0,18,0,26,18,0,15,85,7,18,0,25,18,0,16,85,6,18,0,135,18,4,0,7,1,0,0,135,18,4,0,6,4,0,0,82,0,1,0,82,5,4,0,49,18,0,5,88,4,0,0,82,4,7,0,82,2,6,0,15,3,2,4,120,3,14,0,0,1,4,0,2,18,0,0,112,206,9,0,27,16,1,68,3,18,18,16,41,16,0,2,1,15,3,0,97,18,16,15,47,15,1,2,64,4,0,0,25,1,1,1,119,0,246,255,119,0,1,0,47,15,0,5,84,4,0,0,25,0,0,1,119,0,239,255,119,0,1,0,135,15,5,0,119,0,100,3,41,16,2,1,25,16,16,20,135,15,6,0,16,0,0,0,119,0,95,3,2,15,0,0,112,127,9,0,1,16,0,0,85,15,16,0,119,0,90,3,2,18,0,0,68,225,10,0,82,18,18,0,25,18,18,1,135,15,7,0,18,0,0,0,25,15,15,8,134,16,0,0,132,251,0,0,15,0,0,0,119,0,79,3,1,15,11,0,135,16,1,0,15,0,0,0,25,7,16,7,2,16,0,0,8,127,9,0,82,16,16,0,47,16,16,7,236,4,0,0,2,15,0,0,45,3,7,0,135,16,0,0,15,0,0,0,119,0,65,3,1,15,12,0,25,18,2,20,1,19,20,0,135,14,1,0,19,0,0,0,3,18,18,14,2,14,0,0,25,3,7,0,1,19,0,0,134,16,0,0,100,220,0,0,15,18,14,19,119,0,52,3,1,1,0,0,1,0,0,0,2,16,0,0,144,128,9,0,41,19,1,2,94,16,16,19,32,16,16,45,121,16,7,0,25,16,0,1,2,19,0,0,0,129,9,0,41,14,1,2,94,19,19,14,3,0,16,19,25,1,1,1,33,19,1,26,120,19,242,255,2,19,0,0,136,127,9,0,2,16,0,0,136,127,9,0,82,16,16,0,41,14,0,7,39,14,14,12,3,16,16,14,85,19,16,0,119,0,25,3,25,7,2,25,1,19,14,0,135,14,1,0,7,0,0,0,3,14,7,14,2,18,0,0,81,3,7,0,1,15,40,0,1,13,42,0,134,16,0,0,132,60,0,0,19,14,18,15,13,0,0,0,119,0,11,3,1,13,15,0,25,15,2,20,1,14,25,0,135,18,1,0,14,0,0,0,3,15,15,18,2,18,0,0,108,3,7,0,1,14,60,0,1,19,79,0,134,16,0,0,132,60,0,0,13,15,18,14,19,0,0,0,119,0,252,2,1,19,16,0,134,16,0,0,56,40,1,0,19,0,0,0,119,0,247,2,2,16,0,0,140,127,9,0,25,19,2,5,2,14,0,0,140,127,9,0,82,14,14,0,3,19,19,14,85,16,19,0,119,0,238,2,2,19,0,0,144,127,9,0,25,16,2,7,2,14,0,0,144,127,9,0,82,14,14,0,3,16,16,14,85,19,16,0,119,0,229,2,1,19,19,0,1,18,10,0,135,14,1,0,18,0,0,0,25,14,14,30,2,18,0,0,143,3,7,0,134,16,0,0,120,30,1,0,19,14,18,0,119,0,218,2,2,16,0,0,72,225,10,0,82,0,16,0,25,7,0,1,34,16,7,65,1,18,65,0,125,7,16,7,18,0,0,0,85,6,7,0,2,18,0,0,76,225,10,0,82,1,18,0,25,5,1,1,34,18,5,15,1,16,15,0,125,5,18,5,16,0,0,0,85,4,5,0,26,0,0,1,1,16,1,0,15,16,16,0,1,18,1,0,125,0,16,0,18,0,0,0,54,18,7,0,236,17,0,0,26,1,1,1,1,18,1,0,15,18,18,1,1,16,1,0,125,1,18,1,16,0,0,0,49,16,1,5,144,8,0,0,2,16,0,0,112,206,9,0,27,18,0,68,3,16,16,18,41,18,1,2,3,2,16,18,27,18,0,68,3,18,12,18,41,16,1,2,3,3,18,16,27,16,0,68,3,16,11,16,41,18,1,2,3,4,16,18,82,18,4,0,1,19,1,0,1,14,21,0,138,18,19,14,176,7,0,0,192,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,216,7,0,0,232,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,172,7,0,0,52,8,0,0,119,0,44,0,1,14,64,0,135,19,8,0,14,0,1,0,119,0,40,0,1,19,81,0,85,4,19,0,1,14,45,0,135,19,8,0,14,0,1,0,119,0,34,0,1,14,47,0,135,19,8,0,14,0,1,0,119,0,30,0,2,16,0,0,212,127,9,0,82,16,16,0,34,16,16,3,121,16,25,0,1,16,43,0,85,4,16,0,2,16,0,0,160,188,9,0,27,14,0,68,3,16,16,14,41,14,1,2,2,19,0,0,68,225,10,0,82,19,19,0,97,16,14,19,1,19,0,0,85,2,19,0,119,0,11,0,2,16,0,0,68,225,10,0,82,16,16,0,34,16,16,13,121,16,6,0,1,16,0,0,85,2,16,0,1,16,0,0,85,4,16,0,119,0,1,0,82,18,3,0,32,18,18,37,121,18,6,0,135,18,9,0,0,1,0,0,1,19,200,0,135,18,10,0,0,1,19,0,47,18,1,5,140,8,0,0,25,1,1,1,119,0,162,255,119,0,1,0,56,18,7,0,236,17,0,0,25,0,0,1,2,18,0,0,76,225,10,0,82,1,18,0,119,0,146,255,1,19,21,0,25,14,2,100,2,16,0,0,166,3,7,0,1,15,0,0,134,18,0,0,100,220,0,0,19,14,16,15,119,0,72,2,1,15,22,0,41,16,2,1,25,16,16,20,1,19,25,0,135,14,1,0,19,0,0,0,3,16,16,14,2,14,0,0,188,3,7,0,1,19,1,0,1,13,126,0,134,18,0,0,132,60,0,0,15,16,14,19,13,0,0,0,119,0,56,2,2,18,0,0,28,127,9,0,82,18,18,0,26,7,18,1,2,18,0,0,24,127,9,0,82,18,18,0,28,6,18,2,15,18,6,7,125,7,18,6,7,0,0,0,1,13,23,0,41,19,7,1,2,14,0,0,78,250,10,0,1,16,0,0,134,18,0,0,100,220,0,0,13,19,14,16,2,18,0,0,28,127,9,0,2,16,0,0,28,127,9,0,82,16,16,0,4,16,16,7,85,18,16,0,119,0,29,2,2,16,0,0,156,127,9,0,82,0,16,0,120,0,8,0,2,16,0,0,76,127,9,0,2,18,0,0,76,127,9,0,82,18,18,0,25,18,18,10,85,16,18,0,2,18,0,0,156,127,9,0,1,16,200,0,3,16,0,16,85,18,16,0,135,16,11,0,119,0,11,2,1,18,25,0,25,14,2,32,2,19,0,0,219,3,7,0,134,16,0,0,120,30,1,0,18,14,19,0,119,0,3,2,1,19,151,0,135,16,1,0,19,0,0,0,32,16,16,63,121,16,14,0,2,19,0,0,5,4,7,0,135,16,0,0,19,0,0,0,1,19,232,3,134,16,0,0,116,82,1,0,19,0,0,0,1,19,14,1,134,16,0,0,164,31,1,0,19,0,0,0,119,0,241,1,2,16,0,0,8,127,9,0,82,7,16,0,1,19,10,0,135,16,1,0,19,0,0,0,25,16,16,10,47,16,16,7,116,10,0,0,1,19,26,0,1,14,208,7,2,18,0,0,26,4,7,0,1,13,0,0,134,16,0,0,100,220,0,0,19,14,18,13,119,0,223,1,2,13,0,0,52,4,7,0,135,16,0,0,13,0,0,0,119,0,218,1,1,13,10,0,135,16,1,0,13,0,0,0,3,7,16,2,2,16,0,0,172,127,9,0,2,13,0,0,172,127,9,0,82,13,13,0,3,13,7,13,85,16,13,0,119,0,206,1,1,16,10,0,135,13,1,0,16,0,0,0,3,7,13,2,2,13,0,0,180,127,9,0,2,16,0,0,180,127,9,0,82,16,16,0,3,16,7,16,85,13,16,0,119,0,194,1,1,13,20,0,135,16,1,0,13,0,0,0,41,13,2,1,3,7,16,13,2,13,0,0,184,127,9,0,2,16,0,0,184,127,9,0,82,16,16,0,3,16,7,16,85,13,16,0,119,0,181,1,1,13,30,0,134,16,0,0,68,52,1,0,13,0,0,0,119,0,176,1,1,13,31,0,25,18,2,35,1,19,10,0,135,14,1,0,19,0,0,0,3,18,18,14,2,14,0,0,70,4,7,0,134,16,0,0,120,30,1,0,13,18,14,0,119,0,164,1,1,14,23,0,135,16,1,0,14,0,0,0,32,16,16,5,121,16,13,0,2,14,0,0,102,4,7,0,135,16,0,0,14,0,0,0,1,14,232,3,134,16,0,0,116,82,1,0,14,0,0,0,1,14,2,1,134,16,0,0,164,31,1,0,14,0,0,0,2,16,0,0,72,225,10,0,82,16,16,0,85,7,16,0,2,16,0,0,76,225,10,0,82,16,16,0,85,1,16,0,135,16,11,0,134,6,0,0,180,244,0,0,7,1,0,0,82,5,7,0,82,7,1,0,1,18,20,0,135,14,1,0,18,0,0,0,25,14,14,11,134,16,0,0,244,178,0,0,5,7,6,14,119,0,125,1,134,16,0,0,224,0,1,0,2,16,0,0,180,130,9,0,1,14,0,0,85,16,14,0,135,14,11,0,119,0,117,1,1,14,30,0,1,18,100,0,135,16,1,0,18,0,0,0,47,14,14,16,88,12,0,0,1,16,34,0,1,18,150,0,2,13,0,0,155,4,7,0,1,19,0,0,134,14,0,0,100,220,0,0,16,18,13,19,119,0,102,1,1,14,15,0,1,13,100,0,135,19,1,0,13,0,0,0,47,14,14,19,132,12,0,0,2,19,0,0,186,4,7,0,135,14,0,0,19,0,0,0,119,0,91,1,2,19,0,0,220,4,7,0,135,14,0,0,19,0,0,0,1,14,40,0,135,7,1,0,14,0,0,0,1,14,226,255,4,14,14,7,2,19,0,0,28,127,9,0,82,19,19,0,3,7,14,19,2,19,0,0,28,127,9,0,85,19,7,0,1,19,1,0,56,19,19,7,236,17,0,0,2,14,0,0,238,195,6,0,135,19,0,0,14,0,0,0,1,14,232,3,134,19,0,0,116,82,1,0,14,0,0,0,1,14,21,1,134,19,0,0,164,31,1,0,14,0,0,0,119,0,59,1,1,14,10,0,135,19,1,0,14,0,0,0,25,7,19,5,2,19,0,0,44,128,9,0,2,14,0,0,44,128,9,0,82,14,14,0,3,14,7,14,85,19,14,0,119,0,47,1,1,0,0,0,1,6,0,0,1,3,0,0,27,14,3,68,3,14,11,14,41,19,6,2,3,4,14,19,82,5,4,0,1,19,0,0,1,14,81,0,138,5,19,14,228,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,232,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,164,14,0,0,236,14,0,0,2,19,0,0,16,242,9,0,27,14,0,12,3,2,19,14,1,14,0,0,85,2,14,0,109,2,4,5,2,19,0,0,160,188,9,0,27,13,3,68,3,19,19,13,41,13,6,2,94,19,19,13,109,2,8,19,25,0,0,1,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,27,19,3,68,3,19,12,19,41,14,6,2,3,2,19,14,82,1,2,0,121,1,16,0,2,14,0,0,16,242,9,0,27,19,0,12,3,9,14,19,1,19,1,0,85,9,19,0,109,9,4,1,2,14,0,0,48,135,9,0,27,13,3,68,3,14,14,13,41,13,6,2,94,14,14,13,109,9,8,14,25,0,0,1,1,14,21,0,85,4,14,0,1,14,0,0,85,2,14,0,2,14,0,0,112,206,9,0,27,19,3,68,3,14,14,19,41,19,6,2,1,13,0,0,97,14,19,13,25,3,3,1,33,13,3,67,120,13,114,255,25,6,6,1,33,13,6,17,120,13,110,255,85,7,5,0,1,19,1,0,1,14,1,0,135,13,12,0,19,14,0,0,2,13,0,0,68,225,10,0,82,13,13,0,32,13,13,1,121,13,5,0,2,13,0,0,212,179,9,0,1,14,54,0,85,13,14,0,1,14,15,0,135,2,1,0,14,0,0,0,1,1,1,0,27,14,1,68,3,14,11,14,41,13,2,2,1,19,0,0,97,14,13,19,25,1,1,1,33,19,1,66,120,19,249,255,1,19,0,0,47,19,19,0,128,17,0,0,0,5,0,0,26,0,0,1,2,19,0,0,16,242,9,0,27,13,0,12,94,19,19,13,120,19,42,0,1,3,1,0,1,2,1,0,1,4,99,0,27,19,2,68,3,19,11,19,41,13,3,2,94,19,19,13,120,19,3,0,0,1,4,0,119,0,14,0,1,19,66,0,135,2,1,0,19,0,0,0,1,19,16,0,135,3,1,0,19,0,0,0,26,1,4,1,1,19,1,0,48,19,19,4,112,16,0,0,0,4,1,0,119,0,238,255,119,0,1,0,121,1,64,0,2,19,0,0,16,242,9,0,27,13,0,12,3,9,19,13,27,13,2,68,3,13,11,13,41,19,3,2,106,14,9,4,97,13,19,14,2,14,0,0,160,188,9,0,27,19,2,68,3,14,14,19,41,19,3,2,106,13,9,8,97,14,19,13,119,0,47,0,1,3,1,0,1,2,1,0,1,4,99,0,27,13,2,68,3,13,11,13,41,19,3,2,94,13,13,19,33,13,13,21,121,13,8,0,27,13,2,68,3,13,12,13,41,19,3,2,94,13,13,19,120,13,3,0,0,1,4,0,119,0,14,0,1,13,66,0,135,2,1,0,13,0,0,0,1,13,16,0,135,3,1,0,13,0,0,0,26,1,4,1,1,13,1,0,48,13,13,4,44,17,0,0,0,4,1,0,119,0,232,255,119,0,1,0,121,1,17,0,2,13,0,0,16,242,9,0,27,19,0,12,3,9,13,19,27,19,2,68,3,19,12,19,41,13,3,2,106,14,9,4,97,19,13,14,2,14,0,0,48,135,9,0,27,13,2,68,3,14,14,13,41,13,3,2,106,19,9,8,97,14,13,19,1,19,1,0,54,19,19,5,252,15,0,0,135,19,11,0,135,19,5,0,2,19,0,0,192,130,9,0,1,13,0,0,85,19,13,0,135,13,13,0,2,13,0,0,96,225,10,0,1,19,1,0,85,13,19,0,119,0,16,0,2,13,0,0,97,121,254,255,134,19,0,0,140,76,1,0,13,0,0,0,2,19,0,0,196,130,9,0,1,13,0,0,85,19,13,0,135,13,11,0,119,0,5,0,2,19,0,0,37,2,7,0,135,13,0,0,19,0,0,0,137,8,0,0,139,0,0,0,140,0,13,0,0,0,0,0,2,6,0,0,90,184,2,0,2,7,0,0,82,184,2,0,2,8,0,0,167,214,6,0,136,9,0,0,0,5,9,0,136,9,0,0,25,9,9,32,137,9,0,0,25,2,5,16,25,1,5,8,0,0,5,0,134,9,0,0,168,21,1,0,1,10,32,0,1,11,132,0,138,9,10,11,92,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,100,20,0,0,88,20,0,0,108,20,0,0,116,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,124,20,0,0,88,20,0,0,132,20,0,0,88,20,0,0,140,20,0,0,148,20,0,0,88,20,0,0,156,20,0,0,164,20,0,0,168,20,0,0,176,20,0,0,184,20,0,0,88,20,0,0,88,20,0,0,192,20,0,0,196,20,0,0,204,20,0,0,208,20,0,0,212,20,0,0,88,20,0,0,216,20,0,0,220,20,0,0,228,20,0,0,236,20,0,0,244,20,0,0,252,20,0,0,4,21,0,0,12,21,0,0,88,20,0,0,16,21,0,0,88,20,0,0,24,21,0,0,28,21,0,0,88,20,0,0,88,20,0,0,88,20,0,0,36,21,0,0,44,21,0,0,88,20,0,0,88,20,0,0,52,21,0,0,56,21,0,0,64,21,0,0,72,21,0,0,88,20,0,0,80,21,0,0,88,21,0,0,92,21,0,0,100,21,0,0,104,21,0,0,108,21,0,0,88,20,0,0,112,21,0,0,88,20,0,0,116,21,0,0,124,21,0,0,132,21,0,0,140,21,0,0,148,21,0,0,156,21,0,0,160,21,0,0,168,21,0,0,88,20,0,0,176,21,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,88,20,0,0,180,21,0,0,188,21,0,0,196,21,0,0,204,21,0,0,212,21,0,0,220,21,0,0,228,21,0,0,236,21,0,0,88,20,0,0,88,20,0,0,244,21,0,0,252,21,0,0,4,22,0,0,12,22,0,0,20,22,0,0,28,22,0,0,36,22,0,0,44,22,0,0,119,0,119,255,1,3,65,0,119,0,117,0,1,3,69,0,119,0,115,0,1,3,19,0,119,0,113,0,1,3,71,0,119,0,111,0,1,3,70,0,119,0,109,0,1,3,66,0,119,0,107,0,1,3,67,0,119,0,105,0,1,3,68,0,119,0,103,0,1,3,44,0,119,0,101,0,119,0,94,0,1,3,45,0,119,0,98,0,1,3,46,0,119,0,96,0,1,3,47,0,119,0,94,0,119,0,83,0,1,3,48,0,119,0,91,0,119,0,86,0,119,0,75,0,119,0,80,0,119,0,85,0,1,3,49,0,119,0,85,0,1,3,50,0,119,0,83,0,1,3,53,0,119,0,81,0,1,3,54,0,119,0,79,0,1,3,55,0,119,0,77,0,1,3,56,0,119,0,75,0,119,0,62,0,1,3,61,0,119,0,72,0,119,0,55,0,1,3,62,0,119,0,69,0,1,3,72,0,119,0,67,0,1,3,86,0,119,0,65,0,119,0,42,0,1,3,21,0,119,0,62,0,1,3,22,0,119,0,60,0,1,3,24,0,119,0,58,0,1,3,27,0,119,0,56,0,119,0,29,0,1,3,28,0,119,0,53,0,119,0,32,0,119,0,21,0,119,0,26,0,119,0,31,0,1,3,29,0,119,0,47,0,1,3,30,0,119,0,45,0,1,3,33,0,119,0,43,0,1,3,39,0,119,0,41,0,1,3,40,0,119,0,39,0,119,0,10,0,1,3,41,0,119,0,36,0,1,3,43,0,119,0,34,0,119,0,1,0,1,3,3,0,119,0,31,0,1,3,5,0,119,0,29,0,1,3,7,0,119,0,27,0,1,3,9,0,119,0,25,0,1,3,11,0,119,0,23,0,1,3,13,0,119,0,21,0,1,3,15,0,119,0,19,0,1,3,17,0,119,0,17,0,1,3,4,0,119,0,15,0,1,3,6,0,119,0,13,0,1,3,8,0,119,0,11,0,1,3,10,0,119,0,9,0,1,3,12,0,119,0,7,0,1,3,14,0,119,0,5,0,1,3,16,0,119,0,3,0,1,3,18,0,119,0,1,0,1,12,3,0,1,11,84,0,138,3,12,11,148,23,0,0,168,23,0,0,188,23,0,0,208,23,0,0,228,23,0,0,248,23,0,0,12,24,0,0,32,24,0,0,52,24,0,0,72,24,0,0,92,24,0,0,112,24,0,0,132,24,0,0,152,24,0,0,172,24,0,0,192,24,0,0,212,24,0,0,144,23,0,0,248,24,0,0,20,25,0,0,144,23,0,0,64,25,0,0,144,23,0,0,144,23,0,0,156,25,0,0,220,25,0,0,16,26,0,0,44,26,0,0,144,23,0,0,144,23,0,0,136,26,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,40,27,0,0,68,27,0,0,96,27,0,0,144,23,0,0,200,27,0,0,228,27,0,0,0,28,0,0,28,28,0,0,56,28,0,0,84,28,0,0,136,28,0,0,164,28,0,0,144,23,0,0,144,23,0,0,4,29,0,0,48,29,0,0,76,29,0,0,156,29,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,60,30,0,0,88,30,0,0,144,23,0,0,144,23,0,0,172,30,0,0,208,30,0,0,236,30,0,0,8,31,0,0,52,31,0,0,92,31,0,0,148,31,0,0,192,31,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,144,23,0,0,100,34,0,0,119,0,66,3,1,10,6,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,61,3,1,10,6,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,56,3,1,10,3,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,51,3,1,10,3,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,46,3,1,10,5,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,41,3,1,10,5,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,36,3,1,10,4,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,31,3,1,10,4,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,26,3,1,10,2,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,21,3,1,10,2,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,16,3,1,10,8,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,11,3,1,10,8,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,6,3,1,10,1,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,1,3,1,10,1,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,252,2,1,10,7,0,134,9,0,0,24,205,0,0,10,0,0,0,119,0,247,2,1,10,7,0,134,9,0,0,252,75,1,0,10,0,0,0,119,0,242,2,2,9,0,0,104,225,10,0,82,9,9,0,121,9,238,2,2,9,0,0,184,225,10,0,1,10,1,0,85,9,10,0,119,0,233,2,2,10,0,0,104,225,10,0,1,9,0,0,85,10,9,0,134,9,0,0,220,212,0,0,119,0,226,2,2,9,0,0,104,225,10,0,1,10,0,0,85,9,10,0,2,10,0,0,184,127,9,0,82,10,10,0,120,10,218,2,134,10,0,0,156,193,0,0,119,0,215,2,2,10,0,0,104,225,10,0,1,9,0,0,85,10,9,0,2,9,0,0,184,127,9,0,82,9,9,0,120,9,207,2,1,10,83,0,2,11,0,0,23,213,6,0,134,9,0,0,72,162,0,0,10,11,0,0,120,9,200,2,1,11,83,0,2,10,0,0,23,213,6,0,1,12,1,0,134,9,0,0,36,182,0,0,11,10,12,0,119,0,192,2,2,9,0,0,104,225,10,0,1,12,0,0,85,9,12,0,2,12,0,0,92,225,10,0,1,9,1,0,85,12,9,0,135,9,14,0,135,4,15,0,85,0,4,0,2,12,0,0,27,213,6,0,135,9,2,0,12,0,0,0,119,0,176,2,2,9,0,0,104,225,10,0,1,12,0,0,85,9,12,0,2,12,0,0,92,225,10,0,1,9,1,0,85,12,9,0,1,12,0,0,134,9,0,0,152,77,1,0,12,0,0,0,119,0,163,2,2,9,0,0,104,225,10,0,1,12,0,0,85,9,12,0,134,12,0,0,144,80,1,0,119,0,156,2,2,12,0,0,104,225,10,0,1,9,0,0,85,12,9,0,2,9,0,0,184,127,9,0,82,9,9,0,120,9,148,2,1,12,42,0,2,10,0,0,82,213,6,0,134,9,0,0,72,162,0,0,12,10,0,0,120,9,141,2,1,10,42,0,2,12,0,0,82,213,6,0,1,11,2,0,134,9,0,0,36,182,0,0,10,12,11,0,119,0,133,2,2,9,0,0,104,225,10,0,1,11,0,0,85,9,11,0,2,11,0,0,112,127,9,0,82,11,11,0,121,11,7,0,135,11,14,0,2,9,0,0,88,213,6,0,135,11,0,0,9,0,0,0,119,0,119,2,2,11,0,0,184,127,9,0,82,11,11,0,120,11,115,2,1,9,41,0,2,12,0,0,132,213,6,0,134,11,0,0,72,162,0,0,9,12,0,0,120,11,108,2,1,12,43,0,2,9,0,0,132,213,6,0,134,11,0,0,72,162,0,0,12,9,0,0,120,11,101,2,1,9,41,0,2,12,0,0,132,213,6,0,1,10,0,0,134,11,0,0,36,182,0,0,9,12,10,0,119,0,93,2,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,76,41,1,0,119,0,86,2,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,134,11,0,0,164,19,1,0,119,0,79,2,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,2,10,0,0,92,225,10,0,1,11,1,0,85,10,11,0,135,11,14,0,2,11,0,0,212,127,9,0,82,11,11,0,85,1,11,0,2,10,0,0,137,213,6,0,135,11,2,0,10,1,0,0,2,11,0,0,84,225,10,0,82,11,11,0,121,11,58,2,2,10,0,0,185,213,6,0,135,11,0,0,10,0,0,0,119,0,53,2,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,36,237,0,0,119,0,46,2,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,134,11,0,0,4,81,1,0,119,0,39,2,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,160,37,1,0,119,0,32,2,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,134,11,0,0,136,5,1,0,119,0,25,2,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,228,49,1,0,119,0,18,2,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,1,10,0,0,134,11,0,0,24,124,0,0,10,0,0,0,2,11,0,0,92,225,10,0,1,10,1,0,85,11,10,0,119,0,5,2,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,134,11,0,0,200,7,1,0,119,0,254,1,135,11,14,0,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,2,10,0,0,92,225,10,0,1,11,1,0,85,10,11,0,135,0,16,0,1,11,0,0,47,11,11,0,240,28,0,0,85,2,0,0,2,10,0,0,195,213,6,0,135,11,2,0,10,2,0,0,119,0,235,1,2,10,0,0,229,213,6,0,135,11,0,0,10,0,0,0,119,0,230,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,2,10,0,0,92,225,10,0,1,11,1,0,85,10,11,0,134,11,0,0,148,71,1,0,119,0,219,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,32,74,1,0,119,0,212,1,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,2,11,0,0,92,225,10,0,1,10,1,0,85,11,10,0,135,10,17,0,135,10,18,0,135,10,14,0,2,11,0,0,255,213,6,0,135,10,0,0,11,0,0,0,1,11,1,0,134,10,0,0,88,26,1,0,11,0,0,0,119,0,192,1,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,135,11,14,0,2,11,0,0,252,127,9,0,82,11,11,0,33,11,11,255,121,11,11,0,2,11,0,0,252,127,9,0,1,10,255,255,85,11,10,0,2,11,0,0,15,214,6,0,135,10,0,0,11,0,0,0,135,10,19,0,119,0,172,1,2,10,0,0,80,127,9,0,82,10,10,0,32,10,10,255,121,10,6,0,2,11,0,0,54,214,6,0,135,10,0,0,11,0,0,0,119,0,162,1,2,10,0,0,80,127,9,0,1,11,255,255,85,10,11,0,2,10,0,0,35,214,6,0,135,11,0,0,10,0,0,0,135,11,19,0,119,0,152,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,176,233,0,0,119,0,145,1,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,1,11,9,0,2,10,0,0,40,127,9,0,82,10,10,0,47,11,11,10,148,30,0,0,1,10,1,0,134,11,0,0,48,53,1,0,10,0,0,0,119,0,130,1,135,11,14,0,2,10,0,0,83,214,6,0,135,11,0,0,10,0,0,0,119,0,124,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,2,10,0,0,92,225,10,0,1,11,1,0,85,10,11,0,119,0,115,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,48,225,0,0,119,0,108,1,2,10,0,0,104,225,10,0,1,11,0,0,85,10,11,0,134,11,0,0,192,16,1,0,119,0,101,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,134,10,0,0,244,9,1,0,2,10,0,0,92,225,10,0,1,11,1,0,85,10,11,0,119,0,90,1,2,11,0,0,104,225,10,0,1,10,0,0,85,11,10,0,1,11,0,0,1,12,1,0,134,10,0,0,160,36,0,0,11,12,0,0,119,0,80,1,2,10,0,0,104,225,10,0,1,12,0,0,85,10,12,0,1,10,1,0,1,11,0,0,134,12,0,0,160,36,0,0,10,11,0,0,2,12,0,0,92,225,10,0,1,11,1,0,85,12,11,0,119,0,66,1,134,11,0,0,192,58,1,0,2,11,0,0,92,225,10,0,1,12,1,0,85,11,12,0,2,12,0,0,104,225,10,0,1,11,0,0,85,12,11,0,119,0,55,1,2,11,0,0,104,225,10,0,1,12,0,0,85,11,12,0,135,12,14,0,2,12,0,0,76,225,10,0,82,12,12,0,26,1,12,1,1,0,0,0,1,12,0,0,15,12,12,1,1,11,0,0,125,4,12,1,11,0,0,0,1,11,16,0,54,11,11,4,76,34,0,0,2,11,0,0,72,225,10,0,82,3,11,0,26,2,3,1,1,11,0,0,15,11,11,2,1,12,0,0,125,2,11,2,12,0,0,0,1,12,66,0,54,12,12,2,48,34,0,0,2,12,0,0,208,170,9,0,27,11,2,68,3,12,12,11,41,11,4,2,3,1,12,11,82,11,1,0,1,12,4,0,1,10,72,0,138,11,12,10,136,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,140,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,144,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,128,33,0,0,148,33,0,0,152,33,0,0,0,1,3,0,119,0,38,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,1,12,0,0,1,10,5,0,138,0,12,10,196,33,0,0,184,33,0,0,184,33,0,0,184,33,0,0,216,33,0,0,135,12,0,0,8,0,0,0,119,0,11,0,2,10,0,0,146,214,6,0,135,12,0,0,10,0,0,0,119,0,6,0,2,10,0,0,156,214,6,0,135,12,0,0,10,0,0,0,119,0,1,0,2,10,0,0,0,130,5,0,82,9,1,0,41,9,9,2,94,10,10,9,135,12,0,0,10,0,0,0,25,0,0,1,2,12,0,0,72,225,10,0,82,1,12,0,119,0,1,0,54,11,1,2,48,34,0,0,25,2,2,1,0,3,1,0,119,0,123,255,2,11,0,0,76,225,10,0,82,11,11,0,54,11,11,4,76,34,0,0,25,1,4,1,119,0,104,255,120,0,147,0,2,12,0,0,170,214,6,0,135,11,0,0,12,0,0,0,119,0,142,0,2,11,0,0,104,225,10,0,1,12,0,0,85,11,12,0,2,12,0,0,92,225,10,0,1,11,1,0,85,12,11,0,135,11,14,0,2,11,0,0,84,225,10,0,82,11,11,0,121,11,10,0,2,11,0,0,84,225,10,0,1,12,0,0,85,11,12,0,2,11,0,0,192,214,6,0,135,12,0,0,11,0,0,0,119,0,120,0,134,12,0,0,212,24,1,0,121,12,117,0,2,12,0,0,84,225,10,0,1,11,1,0,85,12,11,0,2,12,0,0,209,214,6,0,135,11,0,0,12,0,0,0,1,0,0,0,2,11,0,0,144,128,9,0,41,12,0,2,3,1,11,12,82,12,1,0,120,12,3,0,1,3,91,0,119,0,4,0,25,0,0,1,35,12,0,26,120,12,246,255,32,12,3,91,121,12,15,0,1,12,65,0,85,1,12,0,2,12,0,0,0,129,9,0,41,11,0,2,1,10,25,0,97,12,11,10,2,10,0,0,88,127,9,0,85,10,0,0,2,10,0,0,240,127,9,0,1,11,1,0,85,10,11,0,1,0,0,0,2,11,0,0,144,128,9,0,41,10,0,2,3,1,11,10,82,10,1,0,120,10,3,0,1,3,95,0,119,0,4,0,25,0,0,1,35,10,0,26,120,10,246,255,32,10,3,95,121,10,8,0,1,10,34,0,85,1,10,0,2,10,0,0,0,129,9,0,41,11,0,2,1,12,50,0,97,10,11,12,1,0,0,0,2,12,0,0,0,127,9,0,41,11,0,2,1,10,70,0,97,12,11,10,25,0,0,1,33,10,0,6,120,10,249,255,2,10,0,0,176,127,9,0,2,11,0,0,176,127,9,0,82,11,11,0,1,12,168,97,3,11,11,12,85,10,11,0,2,11,0,0,32,127,9,0,2,10,0,0,32,127,9,0,82,10,10,0,2,12,0,0,144,208,3,0,3,10,10,12,85,11,10,0,1,0,0,0,2,10,0,0,48,130,9,0,41,11,0,2,1,12,1,0,97,10,11,12,25,0,0,1,33,12,0,38,120,12,249,255,1,0,0,0,2,12,0,0,112,129,9,0,41,11,0,2,1,10,1,0,97,12,11,10,25,0,0,1,33,10,0,24,120,10,249,255,1,0,0,0,2,10,0,0,208,129,9,0,41,11,0,2,1,12,1,0,97,10,11,12,25,0,0,1,33,12,0,24,120,12,249,255,2,11,0,0,128,141,91,0,135,12,20,0,11,0,0,0,135,12,5,0,119,0,1,0,137,5,0,0,139,0,0,0,140,2,22,0,0,0,0,0,2,15,0,0,82,184,2,0,2,16,0,0,208,170,9,0,2,17,0,0,83,184,2,0,136,18,0,0,0,14,18,0,136,18,0,0,25,18,18,64,137,18,0,0,25,11,14,56,25,10,14,48,25,9,14,40,25,8,14,32,25,12,14,24,25,13,14,16,25,7,14,8,0,6,14,0,2,18,0,0,184,127,9,0,82,18,18,0,120,18,13,3,2,18,0,0,72,225,10,0,82,3,18,0,2,18,0,0,76,225,10,0,82,4,18,0,27,18,3,68,3,18,16,18,41,19,4,2,94,5,18,19,121,5,2,3,2,18,0,0,160,188,9,0,27,19,3,68,3,18,18,19,41,19,4,2,94,2,18,19,135,18,21,0,3,4,0,0,135,18,14,0,2,18,0,0,104,225,10,0,1,19,0,0,85,18,19,0,1,19,1,0,1,20,83,0,138,5,19,20,152,39,0,0,180,39,0,0,188,38,0,0,228,39,0,0,0,40,0,0,188,38,0,0,28,40,0,0,56,40,0,0,84,40,0,0,92,40,0,0,120,40,0,0,148,40,0,0,176,40,0,0,188,38,0,0,204,40,0,0,232,40,0,0,4,41,0,0,32,41,0,0,60,41,0,0,108,41,0,0,112,41,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,116,41,0,0,40,42,0,0,220,42,0,0,88,43,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,212,43,0,0,216,43,0,0,220,43,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,188,38,0,0,224,43,0,0,232,43,0,0,188,38,0,0,76,44,0,0,104,44,0,0,108,44,0,0,112,44,0,0,116,44,0,0,216,44,0,0,224,44,0,0,232,44,0,0,76,45,0,0,104,45,0,0,204,45,0,0,208,45,0,0,228,45,0,0,232,45,0,0,4,46,0,0,121,0,30,0,2,19,0,0,0,130,5,0,41,20,5,2,3,19,19,20,116,9,19,0,2,20,0,0,177,216,6,0,135,19,2,0,20,9,0,0,1,19,8,0,26,20,5,46,50,19,19,20,52,39,0,0,1,19,0,0,47,19,19,2,24,39,0,0,85,10,2,0,2,20,0,0,251,197,6,0,135,19,2,0,20,10,0,0,119,0,8,0,34,19,2,0,121,19,6,0,85,11,2,0,2,20,0,0,0,198,6,0,135,19,2,0,20,11,0,0,120,1,2,0,119,0,127,2,134,19,0,0,56,186,0,0,5,2,0,0,120,19,123,2,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,20,12,68,3,19,19,20,41,20,13,2,1,18,0,0,97,19,20,18,27,18,12,68,3,18,16,18,41,20,13,2,1,19,0,0,97,18,20,19,119,0,104,2,120,0,2,0,119,0,102,2,2,18,0,0,196,216,6,0,135,19,0,0,18,0,0,0,119,0,97,2,120,0,2,0,119,0,95,2,2,19,0,0,0,130,5,0,41,18,5,2,3,19,19,18,116,6,19,0,2,18,0,0,158,216,6,0,135,19,2,0,18,6,0,0,119,0,85,2,2,18,0,0,174,218,6,0,135,19,0,0,18,0,0,0,134,19,0,0,232,12,1,0,119,0,78,2],eb+0);HEAPU8.set([120,0,2,0,119,0,76,2,2,18,0,0,225,216,6,0,135,19,0,0,18,0,0,0,119,0,71,2,120,0,2,0,119,0,69,2,2,18,0,0,65,217,6,0,135,19,0,0,18,0,0,0,119,0,64,2,120,0,2,0,119,0,62,2,2,18,0,0,122,217,6,0,135,19,0,0,18,0,0,0,119,0,57,2,1,0,39,0,119,0,139,1,120,0,2,0,119,0,53,2,2,18,0,0,185,217,6,0,135,19,0,0,18,0,0,0,119,0,48,2,120,0,2,0,119,0,46,2,2,18,0,0,161,217,6,0,135,19,0,0,18,0,0,0,119,0,41,2,120,0,2,0,119,0,39,2,2,18,0,0,50,218,6,0,135,19,0,0,18,0,0,0,119,0,34,2,120,0,2,0,119,0,32,2,2,18,0,0,16,217,6,0,135,19,0,0,18,0,0,0,119,0,27,2,120,0,2,0,119,0,25,2,2,18,0,0,254,217,6,0,135,19,0,0,18,0,0,0,119,0,20,2,120,0,2,0,119,0,18,2,2,18,0,0,221,217,6,0,135,19,0,0,18,0,0,0,119,0,13,2,120,0,2,0,119,0,11,2,2,18,0,0,91,217,6,0,135,19,0,0,18,0,0,0,119,0,6,2,2,18,0,0,134,219,6,0,135,19,0,0,18,0,0,0,135,19,22,0,5,0,0,0,119,0,255,1,120,0,2,0,119,0,253,1,2,19,0,0,0,130,5,0,41,18,5,2,3,19,19,18,116,7,19,0,2,18,0,0,177,216,6,0,135,19,2,0,18,7,0,0,119,0,243,1,119,0,244,255,119,0,241,1,121,0,19,0,2,18,0,0,192,219,6,0,135,19,0,0,18,0,0,0,2,19,0,0,112,129,9,0,41,18,2,2,94,19,19,18,121,19,10,0,2,19,0,0,80,131,5,0,41,18,2,2,3,19,19,18,116,8,19,0,2,18,0,0,244,197,6,0,135,19,2,0,18,8,0,0,120,1,2,0,119,0,220,1,1,18,41,0,134,19,0,0,56,186,0,0,18,2,0,0,120,19,215,1,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,18,12,68,3,19,19,18,41,18,13,2,1,20,0,0,97,19,18,20,27,20,12,68,3,20,16,20,41,18,13,2,1,19,0,0,97,20,18,19,119,0,196,1,121,0,19,0,2,18,0,0,161,219,6,0,135,19,0,0,18,0,0,0,2,19,0,0,208,129,9,0,41,18,2,2,94,19,19,18,121,19,10,0,2,19,0,0,192,131,5,0,41,18,2,2,3,19,19,18,116,12,19,0,2,18,0,0,244,197,6,0,135,19,2,0,18,12,0,0,120,1,2,0,119,0,175,1,1,18,42,0,134,19,0,0,56,186,0,0,18,2,0,0,120,19,170,1,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,18,12,68,3,19,19,18,41,18,13,2,1,20,0,0,97,19,18,20,27,20,12,68,3,20,16,20,41,18,13,2,1,19,0,0,97,20,18,19,119,0,151,1,121,0,5,0,2,18,0,0,223,219,6,0,135,19,0,0,18,0,0,0,120,1,2,0,119,0,144,1,1,18,43,0,134,19,0,0,56,186,0,0,18,2,0,0,120,19,139,1,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,18,12,68,3,19,19,18,41,18,13,2,1,20,0,0,97,19,18,20,27,20,12,68,3,20,16,20,41,18,13,2,1,19,0,0,97,20,18,19,119,0,120,1,121,0,5,0,2,20,0,0,23,220,6,0,135,19,0,0,20,0,0,0,120,1,2,0,119,0,113,1,1,20,44,0,134,19,0,0,56,186,0,0,20,2,0,0,120,19,108,1,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,20,12,68,3,19,19,20,41,20,13,2,1,18,0,0,97,19,20,18,27,18,12,68,3,18,16,18,41,20,13,2,1,19,0,0,97,18,20,19,119,0,89,1,119,0,90,255,119,0,89,255,119,0,88,255,1,0,42,0,119,0,168,0,1,18,17,0,135,19,1,0,18,0,0,0,34,19,19,13,120,19,79,1,2,19,0,0,72,225,10,0,82,13,19,0,2,19,0,0,76,225,10,0,82,0,19,0,27,19,13,68,3,19,16,19,41,18,0,2,1,20,66,0,97,19,18,20,2,20,0,0,112,206,9,0,27,18,13,68,3,20,20,18,41,18,0,2,1,19,0,0,97,20,18,19,1,0,42,0,119,0,143,0,120,0,2,0,119,0,57,1,2,18,0,0,115,218,6,0,135,19,0,0,18,0,0,0,119,0,52,1,119,0,46,255,119,0,45,255,119,0,44,255,1,18,17,0,135,19,1,0,18,0,0,0,34,19,19,13,120,19,44,1,2,19,0,0,72,225,10,0,82,13,19,0,2,19,0,0,76,225,10,0,82,0,19,0,27,19,13,68,3,19,16,19,41,18,0,2,1,20,74,0,97,19,18,20,2,20,0,0,112,206,9,0,27,18,13,68,3,20,20,18,41,18,0,2,1,19,0,0,97,20,18,19,1,0,46,0,119,0,108,0,1,0,46,0,119,0,106,0,1,0,51,0,119,0,104,0,1,18,17,0,135,19,1,0,18,0,0,0,34,19,19,13,120,19,15,1,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,0,19,0,27,19,12,68,3,19,16,19,41,18,0,2,1,20,75,0,97,19,18,20,2,20,0,0,112,206,9,0,27,18,12,68,3,20,20,18,41,18,0,2,1,19,3,0,97,20,18,19,1,0,51,0,119,0,79,0,120,0,2,0,119,0,249,0,2,18,0,0,77,218,6,0,135,19,0,0,18,0,0,0,119,0,244,0,1,18,11,0,135,19,1,0,18,0,0,0,34,19,19,6,120,19,239,0,2,19,0,0,72,225,10,0,82,13,19,0,2,19,0,0,76,225,10,0,82,0,19,0,27,19,13,68,3,19,16,19,41,18,0,2,1,20,9,0,97,19,18,20,2,20,0,0,112,206,9,0,27,18,13,68,3,20,20,18,41,18,0,2,1,19,3,0,97,20,18,19,1,0,39,0,119,0,47,0,119,0,122,254,1,18,27,1,134,19,0,0,164,31,1,0,18,0,0,0,119,0,213,0,119,0,116,254,120,0,2,0,119,0,210,0,2,18,0,0,145,218,6,0,135,19,0,0,18,0,0,0,119,0,205,0,121,0,5,0,2,18,0,0,246,219,6,0,135,19,0,0,18,0,0,0,120,1,2,0,119,0,198,0,1,18,83,0,1,20,0,0,134,19,0,0,56,186,0,0,18,20,0,0,120,19,192,0,2,19,0,0,72,225,10,0,82,12,19,0,2,19,0,0,76,225,10,0,82,13,19,0,2,19,0,0,112,206,9,0,27,20,12,68,3,19,19,20,41,20,13,2,1,18,0,0,97,19,20,18,27,18,12,68,3,18,16,18,41,20,13,2,1,19,0,0,97,18,20,19,119,0,173,0,32,19,0,39,121,19,14,0,2,20,0,0,211,218,6,0,135,19,0,0,20,0,0,0,1,20,232,3,134,19,0,0,116,82,1,0,20,0,0,0,1,20,0,0,134,19,0,0,48,53,1,0,20,0,0,0,119,0,158,0,32,19,0,42,121,19,35,0,2,20,0,0,246,218,6,0,135,19,0,0,20,0,0,0,1,19,10,0,135,13,1,0,19,0,0,0,2,19,0,0,28,127,9,0,82,19,19,0,2,20,0,0,68,225,10,0,82,20,20,0,3,20,20,13,4,13,19,20,2,20,0,0,28,127,9,0,85,20,13,0,1,20,1,0,56,20,20,13,52,49,0,0,2,19,0,0,238,195,6,0,135,20,0,0,19,0,0,0,1,19,232,3,134,20,0,0,116,82,1,0,19,0,0,0,1,19,3,1,134,20,0,0,164,31,1,0,19,0,0,0,119,0,122,0,32,20,0,46,121,20,43,0,2,19,0,0,15,219,6,0,135,20,0,0,19,0,0,0,1,20,5,0,135,13,1,0,20,0,0,0,2,20,0,0,28,127,9,0,82,20,20,0,4,13,20,13,2,20,0,0,28,127,9,0,85,20,13,0,34,20,13,1,121,20,13,0,2,19,0,0,238,195,6,0,135,20,0,0,19,0,0,0,1,19,232,3,134,20,0,0,116,82,1,0,19,0,0,0,1,19,4,1,134,20,0,0,164,31,1,0,19,0,0,0,2,20,0,0,0,127,9,0,82,20,20,0,26,13,20,1,2,20,0,0,0,127,9,0,1,18,3,0,15,18,18,13,1,21,3,0,125,19,18,13,21,0,0,0,85,20,19,0,135,19,19,0,119,0,78,0,32,19,0,51,121,19,76,0,2,19,0,0,68,225,10,0,82,0,19,0,1,19,10,0,1,20,4,0,138,0,19,20,52,48,0,0,48,48,0,0,48,48,0,0,56,48,0,0,119,0,18,0,119,0,1,0,2,20,0,0,38,219,6,0,135,19,0,0,20,0,0,0,1,20,232,3,134,19,0,0,116,82,1,0,20,0,0,0,1,20,15,1,134,19,0,0,164,31,1,0,20,0,0,0,2,19,0,0,68,225,10,0,82,0,19,0,119,0,1,0,25,19,0,5,135,12,1,0,19,0,0,0,85,13,12,0,2,20,0,0,80,219,6,0,135,19,2,0,20,13,0,0,2,19,0,0,28,127,9,0,82,19,19,0,4,13,19,12,2,19,0,0,28,127,9,0,85,19,13,0,34,19,13,1,121,19,14,0,2,20,0,0,238,195,6,0,135,19,0,0,20,0,0,0,1,20,232,3,134,19,0,0,116,82,1,0,20,0,0,0,1,20,16,1,134,19,0,0,164,31,1,0,20,0,0,0,119,0,5,0,1,20,232,3,134,19,0,0,116,82,1,0,20,0,0,0,2,20,0,0,68,225,10,0,82,20,20,0,25,20,20,1,134,19,0,0,72,29,1,0,20,0,0,0,135,19,5,0,2,19,0,0,96,225,10,0,1,20,1,0,85,19,20,0,119,0,1,0,137,14,0,0,139,0,0,0,140,3,27,0,0,0,0,0,2,19,0,0,0,194,5,0,2,20,0,0,199,95,2,0,2,21,0,0,176,110,10,0,136,22,0,0,0,18,22,0,136,22,0,0,25,22,22,112,137,22,0,0,25,17,18,96,25,11,18,88,25,10,18,80,25,3,18,72,25,9,18,64,25,8,18,56,25,16,18,48,25,15,18,40,25,7,18,32,25,4,18,24,25,12,18,16,25,6,18,8,0,5,18,0,25,13,18,104,25,14,18,100,85,13,1,0,85,14,2,0,2,22,0,0,140,127,9,0,82,22,22,0,120,22,174,2,135,22,4,0,13,14,0,0,1,25,1,0,1,23,16,0,138,0,25,23,32,50,0,0,100,51,0,0,56,52,0,0,12,53,0,0,76,53,0,0,0,54,0,0,32,54,0,0,212,54,0,0,180,55,0,0,120,56,0,0,40,57,0,0,96,57,0,0,152,57,0,0,76,58,0,0,248,58,0,0,172,59,0,0,1,0,0,0,119,0,152,2,2,22,0,0,80,127,9,0,82,2,22,0,2,22,0,0,252,127,9,0,82,0,22,0,32,22,0,255,121,22,3,0,1,3,1,0,119,0,14,0,2,22,0,0,0,129,9,0,41,23,0,2,3,16,22,23,82,15,16,0,34,3,15,0,121,3,4,0,1,22,255,255,0,23,22,0,119,0,3,0,26,22,15,1,0,23,22,0,85,16,23,0,33,23,2,255,19,23,23,3,121,23,34,0,2,23,0,0,144,128,9,0,41,22,2,2,94,0,23,22,1,1,0,0,41,23,1,3,94,23,19,23,52,23,0,23,192,50,0,0,25,1,1,1,1,23,6,0,57,23,23,1,16,51,0,0,119,0,248,255,2,23,0,0,0,129,9,0,41,22,2,2,3,15,23,22,82,13,15,0,41,22,1,3,3,22,19,22,106,14,22,4,15,16,14,13,121,16,4,0,26,23,13,1,0,22,23,0,119,0,2,0,0,22,14,0,85,15,22,0,121,16,5,0,2,0,0,0,149,251,6,0,119,0,86,2,0,0,2,0,32,23,0,25,121,23,5,0,2,23,0,0,97,249,6,0,0,22,23,0,119,0,8,0,32,24,0,64,2,25,0,0,30,249,6,0,1,26,0,0,125,23,24,25,26,0,0,0,0,22,23,0,0,0,22,0,121,3,4,0,120,0,69,2,1,0,0,0,119,0,74,2,2,0,0,0,149,251,6,0,119,0,64,2,1,23,15,0,135,22,1,0,23,0,0,0,25,0,22,8,2,22,0,0,52,127,9,0,82,22,22,0,4,0,0,22,2,22,0,0,200,127,9,0,82,22,22,0,32,22,22,0,2,23,0,0,157,249,6,0,2,26,0,0,187,249,6,0,125,17,22,23,26,0,0,0,85,5,21,0,135,26,2,0,17,5,0,0,36,26,0,0,121,26,3,0,1,0,0,0,119,0,46,2,2,26,0,0,28,127,9,0,82,26,26,0,4,17,26,0,2,26,0,0,28,127,9,0,85,26,17,0,1,26,1,0,49,26,26,17,248,51,0,0,1,0,0,0,119,0,34,2,2,23,0,0,238,195,6,0,135,26,0,0,23,0,0,0,1,23,232,3,134,26,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,26,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,18,2,1,23,20,0,135,26,1,0,23,0,0,0,25,0,26,25,2,26,0,0,52,127,9,0,82,26,26,0,4,0,0,26,2,26,0,0,200,127,9,0,82,26,26,0,32,26,26,0,2,23,0,0,157,249,6,0,2,22,0,0,187,249,6,0,125,17,26,23,22,0,0,0,85,6,21,0,135,22,2,0,17,6,0,0,36,22,0,0,121,22,3,0,1,0,0,0,119,0,249,1,2,22,0,0,28,127,9,0,82,22,22,0,4,17,22,0,2,22,0,0,28,127,9,0,85,22,17,0,1,22,1,0,49,22,22,17,204,52,0,0,1,0,0,0,119,0,237,1,2,23,0,0,238,195,6,0,135,22,0,0,23,0,0,0,1,23,232,3,134,22,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,22,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,221,1,2,22,0,0,0,127,9,0,82,0,22,0,1,22,3,0,47,22,22,0,64,53,0,0,2,22,0,0,0,127,9,0,26,23,0,1,85,22,23,0,2,0,0,0,192,251,6,0,119,0,201,1,2,0,0,0,130,251,6,0,119,0,198,1,1,22,15,0,135,23,1,0,22,0,0,0,25,0,23,18,2,23,0,0,52,127,9,0,82,23,23,0,4,0,0,23,85,12,21,0,2,22,0,0,221,249,6,0,135,23,2,0,22,12,0,0,36,23,0,0,121,23,3,0,1,0,0,0,119,0,188,1,2,23,0,0,28,127,9,0,82,23,23,0,4,17,23,0,2,23,0,0,28,127,9,0,85,23,17,0,1,23,1,0,49,23,23,17,192,53,0,0,1,0,0,0,119,0,176,1,2,22,0,0,238,195,6,0,135,23,0,0,22,0,0,0,1,22,232,3,134,23,0,0,116,82,1,0,22,0,0,0,2,22,0,0,108,225,10,0,82,22,22,0,134,23,0,0,164,31,1,0,22,0,0,0,1,0,0,0,119,0,160,1,85,4,21,0,2,22,0,0,5,250,6,0,135,23,2,0,22,4,0,0,135,23,23,0,1,0,0,0,119,0,152,1,1,22,15,0,135,23,1,0,22,0,0,0,25,0,23,25,2,23,0,0,52,127,9,0,82,23,23,0,4,0,0,23,85,7,21,0,2,22,0,0,45,250,6,0,135,23,2,0,22,7,0,0,36,23,0,0,121,23,3,0,1,0,0,0,119,0,135,1,2,23,0,0,28,127,9,0,82,23,23,0,4,17,23,0,2,23,0,0,28,127,9,0,85,23,17,0,1,23,1,0,49,23,23,17,148,54,0,0,1,0,0,0,119,0,123,1,2,22,0,0,238,195,6,0,135,23,0,0,22,0,0,0,1,22,232,3,134,23,0,0,116,82,1,0,22,0,0,0,2,22,0,0,108,225,10,0,82,22,22,0,134,23,0,0,164,31,1,0,22,0,0,0,1,0,0,0,119,0,107,1,2,23,0,0,208,127,9,0,82,23,23,0,121,23,3,0,1,0,0,0,119,0,101,1,2,23,0,0,32,127,9,0,82,1,23,0,120,1,4,0,2,0,0,0,120,250,6,0,119,0,23,0,42,23,1,1,0,0,23,0,1,23,255,127,49,23,1,23,56,55,0,0,25,23,0,1,135,0,1,0,23,0,0,0,2,23,0,0,32,127,9,0,82,23,23,0,4,0,23,0,2,23,0,0,32,127,9,0,1,26,0,0,15,26,26,0,1,25,0,0,125,22,26,0,25,0,0,0,85,23,22,0,2,0,0,0,76,250,6,0,85,15,21,0,135,22,2,0,0,15,0,0,82,17,13,0,82,0,14,0,2,22,0,0,112,206,9,0,27,23,17,68,3,22,22,23,41,23,0,2,1,25,0,0,97,22,23,25,2,25,0,0,0,153,9,0,27,23,17,68,3,25,25,23,41,23,0,2,1,22,0,0,97,25,23,22,1,0,1,0,119,0,51,1,1,22,26,0,135,0,24,0,22,0,0,0,2,22,0,0,144,128,9,0,41,23,0,2,94,1,22,23,36,22,1,0,121,22,3,0,1,0,0,0,119,0,40,1,2,22,0,0,0,129,9,0,41,23,0,2,3,2,22,23,82,3,2,0,1,23,1,0,26,22,1,41,16,23,23,22,1,22,0,0,15,22,22,3,19,23,23,22,120,23,3,0,1,0,0,0,119,0,26,1,34,22,3,3,121,22,4,0,1,22,0,0,0,23,22,0,119,0,3,0,26,22,3,3,0,23,22,0,85,2,23,0,85,16,21,0,2,22,0,0,160,250,6,0,135,23,2,0,22,16,0,0,2,23,0,0,172,225,10,0,1,22,0,0,85,23,22,0,1,23,0,0,134,22,0,0,120,201,0,0,0,23,0,0,135,22,19,0,1,0,0,0,119,0,2,1,1,22,25,0,135,0,1,0,22,0,0,0,2,22,0,0,52,127,9,0,82,22,22,0,4,0,0,22,85,8,21,0,2,23,0,0,205,250,6,0,135,22,2,0,23,8,0,0,36,22,0,0,121,22,3,0,1,0,0,0,119,0,242,0,2,22,0,0,28,127,9,0,82,22,22,0,4,17,22,0,2,22,0,0,28,127,9,0,85,22,17,0,1,22,1,0,49,22,22,17,232,56,0,0,1,0,0,0,119,0,230,0,2,23,0,0,238,195,6,0,135,22,0,0,23,0,0,0,1,23,232,3,134,22,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,22,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,214,0,1,23,10,0,135,22,1,0,23,0,0,0,25,0,22,10,2,22,0,0,120,127,9,0,2,23,0,0,120,127,9,0,82,23,23,0,3,23,0,23,85,22,23,0,2,0,0,0,227,251,6,0,119,0,193,0,2,23,0,0,48,194,5,0,1,25,10,0,135,22,24,0,25,0,0,0,41,22,22,2,3,0,23,22,82,22,0,0,82,23,13,0,82,25,14,0,134,0,0,0,60,49,0,0,22,23,25,0,119,0,186,0,1,23,15,0,135,25,1,0,23,0,0,0,25,0,25,30,2,25,0,0,52,127,9,0,82,25,25,0,4,0,0,25,85,9,21,0,2,23,0,0,242,250,6,0,135,25,2,0,23,9,0,0,36,25,0,0,121,25,3,0,1,0,0,0,119,0,169,0,2,25,0,0,28,127,9,0,82,25,25,0,4,17,25,0,2,25,0,0,28,127,9,0,85,25,17,0,1,25,1,0,49,25,25,17,12,58,0,0,1,0,0,0,119,0,157,0,2,23,0,0,238,195,6,0,135,25,0,0,23,0,0,0,1,23,232,3,134,25,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,25,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,141,0,2,25,0,0,208,127,9,0,82,25,25,0,121,25,3,0,1,0,0,0,119,0,135,0,135,25,25,0,32,25,25,1,121,25,4,0,2,0,0,0,90,251,6,0,119,0,122,0,85,3,21,0,2,23,0,0,26,251,6,0,135,25,2,0,23,3,0,0,134,25,0,0,208,38,1,0,120,25,5,0,2,23,0,0,63,251,6,0,135,25,0,0,23,0,0,0,82,17,13,0,82,0,14,0,2,25,0,0,112,206,9,0,27,23,17,68,3,25,25,23,41,23,0,2,1,22,0,0,97,25,23,22,2,22,0,0,0,153,9,0,27,23,17,68,3,22,22,23,41,23,0,2,1,25,0,0,97,22,23,25,135,25,19,0,1,0,1,0,119,0,98,0,1,23,10,0,135,25,1,0,23,0,0,0,25,0,25,5,2,25,0,0,52,127,9,0,82,25,25,0,4,0,0,25,85,10,21,0,2,23,0,0,73,251,6,0,135,25,2,0,23,10,0,0,36,25,0,0,121,25,3,0,1,0,0,0,119,0,81,0,2,25,0,0,28,127,9,0,82,25,25,0,4,17,25,0,2,25,0,0,28,127,9,0,85,25,17,0,1,25,1,0,49,25,25,17,108,59,0,0,1,0,0,0,119,0,69,0,2,23,0,0,238,195,6,0,135,25,0,0,23,0,0,0,1,23,232,3,134,25,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,25,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,53,0,1,23,15,0,135,25,1,0,23,0,0,0,25,0,25,10,2,25,0,0,52,127,9,0,82,25,25,0,4,0,0,25,85,11,21,0,2,23,0,0,73,251,6,0,135,25,2,0,23,11,0,0,36,25,0,0,121,25,3,0,1,0,0,0,119,0,36,0,2,25,0,0,28,127,9,0,82,25,25,0,4,17,25,0,2,25,0,0,28,127,9,0,85,25,17,0,1,25,1,0,49,25,25,17,32,60,0,0,1,0,0,0,119,0,24,0,2,23,0,0,238,195,6,0,135,25,0,0,23,0,0,0,1,23,232,3,134,25,0,0,116,82,1,0,23,0,0,0,2,23,0,0,108,225,10,0,82,23,23,0,134,25,0,0,164,31,1,0,23,0,0,0,1,0,0,0,119,0,8,0,85,17,21,0,135,25,2,0,0,17,0,0,135,25,19,0,1,0,0,0,119,0,2,0,1,0,0,0,137,18,0,0,139,0,0,0,140,5,35,0,0,0,0,0,2,25,0,0,245,95,2,0,2,26,0,0,112,206,9,0,2,27,0,0,81,184,2,0,1,23,0,0,136,28,0,0,0,24,28,0,136,28,0,0,25,28,28,64,137,28,0,0,25,20,24,48,25,19,24,40,25,18,24,32,25,22,24,24,25,21,24,16,25,17,24,8,0,16,24,0,25,14,24,56,25,15,24,52,1,28,37,0,16,28,28,0,32,29,2,0,20,28,28,29,34,29,3,0,20,28,28,29,120,28,194,1,135,28,26,0,120,28,192,1,134,28,0,0,180,244,0,0,14,15,0,0,82,8,15,0,2,28,0,0,72,225,10,0,82,5,28,0,82,28,14,0,4,7,28,5,85,14,7,0,2,28,0,0,76,225,10,0,82,6,28,0,4,8,8,6,85,15,8,0,1,28,0,0,47,28,28,1,0,68,0,0,0,13,8,0,3,11,7,5,3,12,13,6,1,28,66,0,16,28,28,11,1,29,16,0,16,29,29,12,20,28,28,29,121,28,3,0,1,23,34,0,119,0,110,1,2,28,0,0,72,225,10,0,82,28,28,0,13,28,11,28,2,29,0,0,76,225,10,0,82,29,29,0,13,29,12,29,19,28,28,29,121,28,3,0,1,23,7,0,119,0,98,1,2,28,0,0,112,127,9,0,82,28,28,0,120,28,12,0,25,29,11,1,25,30,12,1,135,28,27,0,29,30,0,0,135,28,28,0,4,0,0,0,134,28,0,0,116,82,1,0,3,0,0,0,135,28,29,0,11,12,0,0,2,28,0,0,0,153,9,0,27,30,11,68,3,28,28,30,41,30,12,2,94,8,28,30,120,8,37,1,2,28,0,0,208,170,9,0,27,30,11,68,3,28,28,30,41,30,12,2,3,5,28,30,82,30,5,0,1,28,1,0,1,29,21,0,138,30,28,29,140,62,0,0,12,63,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,63,0,0,228,63,0,0,124,62,0,0,124,62,0,0,168,64,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,124,62,0,0,60,65,0,0,196,65,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,28,1,135,28,14,0,1,29,10,0,135,28,30,0,29,0,0,0,2,28,0,0,209,0,7,0,85,19,28,0,135,28,2,0,2,19,0,0,1,28,75,0,2,29,0,0,212,127,9,0,82,29,29,0,42,29,29,2,4,28,28,29,49,28,1,28,228,62,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,6,1,1,29,64,0,135,28,8,0,29,11,12,0,135,28,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,252,0,135,28,14,0,1,29,10,0,135,28,30,0,29,0,0,0,2,28,0,0,202,0,7,0,85,18,28,0,135,28,2,0,2,18,0,0,36,28,1,39,121,28,6,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,236,0,1,28,81,0,85,5,28,0,1,29,45,0,135,28,8,0,29,11,12,0,135,28,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,224,0,135,28,14,0,1,29,10,0,135,28,30,0,29,0,0,0,2,28,0,0,215,0,7,0,85,20,28,0,135,28,2,0,2,20,0,0,36,28,1,55,121,28,6,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,208,0,1,29,47,0,135,28,8,0,29,11,12,0,135,28,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,198,0,135,28,14,0,1,29,10,0,135,28,30,0,29,0,0,0,2,28,0,0,172,0,7,0,85,22,28,0,135,28,2,0,2,22,0,0,1,28,44,0,15,28,28,1,2,29,0,0,212,127,9,0,82,29,29,0,34,29,29,3,19,28,28,29,120,28,6,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,176,0,2,29,0,0,179,0,7,0,135,28,0,0,29,0,0,0,1,28,43,0,85,5,28,0,2,28,0,0,160,188,9,0,27,29,11,68,3,28,28,29,41,29,12,2,2,31,0,0,68,225,10,0,82,31,31,0,97,28,29,31,27,31,11,68,3,31,26,31,41,29,12,2,1,28,0,0,97,31,29,28,135,28,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,149,0,1,29,100,0,135,28,1,0,29,0,0,0,34,5,28,50,1,28,0,0,4,9,28,7,125,10,5,9,7,0,0,0,1,29,100,0,135,28,1,0,29,0,0,0,34,28,28,50,121,28,5,0,1,28,0,0,4,8,28,13,1,23,31,0,119,0,4,0,121,5,3,0,0,8,13,0,1,23,31,0,32,28,23,31,121,28,10,0,1,23,0,0,13,28,7,10,13,29,13,8,19,28,28,29,120,28,5,0,0,5,11,0,0,6,12,0,0,7,10,0,119,0,118,0,0,5,11,0,0,6,12,0,0,7,9,0,1,28,0,0,4,8,28,13,119,0,112,0,135,31,14,0,1,29,10,0,135,31,30,0,29,0,0,0,2,31,0,0,138,0,7,0,85,21,31,0,135,31,2,0,2,21,0,0,36,31,1,39,121,31,6,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,96,0,2,29,0,0,143,0,7,0,135,31,0,0,29,0,0,0,1,31,0,0,85,5,31,0,27,31,11,68,3,31,26,31,41,29,12,2,1,28,0,0,97,31,29,28,135,28,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,78,0,135,28,14,0,1,29,10,0,135,28,30,0,29,0,0,0,2,28,0,0,112,0,7,0,85,17,28,0,135,28,2,0,2,17,0,0,33,28,12,0,33,29,11,0,34,31,12,16,34,32,11,66,2,33,0,0,212,127,9,0,82,33,33,0,25,33,33,50,17,33,33,1,2,34,0,0,68,225,10,0,82,34,34,0,34,34,34,13,19,33,33,34,19,32,32,33,19,31,31,32,19,29,29,31,19,28,28,29,120,28,6,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,45,0,2,29,0,0,117,0,7,0,135,28,0,0,29,0,0,0,1,28,0,0,85,5,28,0,27,28,11,68,3,28,26,28,41,29,12,2,1,31,0,0,97,28,29,31,135,31,29,0,11,12,0,0,1,1,0,0,0,5,11,0,0,6,12,0,0,8,13,0,119,0,27,0,135,30,9,0,11,12,0,0,135,30,31,0,0,8,0,0,121,30,3,0,1,23,13,0,119,0,33,0,135,30,14,0,1,28,10,0,135,30,30,0,28,0,0,0,2,30,0,0,176,110,10,0,85,16,30,0,135,30,2,0,2,16,0,0,135,30,10,0,11,12,1,0,4,1,1,30,135,30,29,0,11,12,0,0,1,28,232,3,134,30,0,0,116,82,1,0,28,0,0,0,0,8,13,0,26,30,1,3,2,28,0,0,212,127,9,0,82,28,28,0,42,28,28,1,4,1,30,28,1,28,0,0,47,28,28,1,36,67,0,0,0,13,8,0,119,0,140,254,1,23,35,0,119,0,1,0,32,28,23,7,121,28,31,0,85,14,7,0,85,15,13,0,135,28,14,0,2,30,0,0,80,0,7,0,135,28,0,0,30,0,0,0,2,28,0,0,28,127,9,0,82,28,28,0,4,23,28,1,2,28,0,0,28,127,9,0,85,28,23,0,1,28,1,0,56,28,28,23,0,68,0,0,2,30,0,0,238,195,6,0,135,28,0,0,30,0,0,0,1,30,232,3,134,28,0,0,116,82,1,0,30,0,0,0,1,30,22,1,134,28,0,0,164,31,1,0,30,0,0,0,119,0,22,0,32,28,23,13,121,28,10,0,85,14,7,0,85,15,13,0,2,28,0,0,132,225,10,0,85,28,11,0,2,28,0,0,136,225,10,0,85,28,12,0,119,0,11,0,32,28,23,34,121,28,4,0,85,14,7,0,85,15,13,0,119,0,6,0,32,28,23,35,121,28,4,0,85,14,7,0,85,15,8,0,119,0,1,0,137,24,0,0,139,0,0,0,140,2,10,0,0,0,0,0,2,3,0,0,112,206,9,0,2,4,0,0,208,170,9,0,2,5,0,0,7,96,2,0,37,6,0,23,121,6,165,2,121,1,10,0,2,7,0,0,94,245,6,0,135,6,0,0,7,0,0,0,2,6,0,0,208,129,9,0,41,7,0,2,1,8,1,0,97,6,7,8,1,7,0,0,1,8,24,0,138,0,7,8,200,68,0,0,80,69,0,0,232,69,0,0,12,70,0,0,72,70,0,0,132,70,0,0,208,70,0,0,0,71,0,0,68,71,0,0,116,71,0,0,148,73,0,0,96,74,0,0,188,74,0,0,208,74,0,0,4,75,0,0,68,75,0,0,180,75,0,0,228,75,0,0,56,76,0,0,108,76,0,0,240,77,0,0,28,78,0,0,48,78,0,0,116,78,0,0,119,0,126,2,2,7,0,0,116,245,6,0,135,8,0,0,7,0,0,0,1,7,11,0,135,8,1,0,7,0,0,0,25,8,8,2,2,7,0,0,12,127,9,0,82,7,7,0,42,7,7,2,4,0,8,7,1,7,1,0,47,7,7,0,56,69,0,0,134,7,0,0,248,81,1,0,1,8,232,3,134,7,0,0,116,82,1,0,8,0,0,0,1,7,2,0,47,7,7,0,52,69,0,0,26,0,0,1,119,0,246,255,119,0,1,0,135,7,14,0,2,8,0,0,136,245,6,0,135,7,0,0,8,0,0,0,119,0,93,2,2,8,0,0,150,245,6,0,135,7,0,0,8,0,0,0,2,7,0,0,28,127,9,0,82,7,7,0,2,8,0,0,24,127,9,0,82,8,8,0,45,7,7,8,144,69,0,0,1,8,1,0,135,7,32,0,8,0,0,0,119,0,76,2,1,8,20,0,135,7,1,0,8,0,0,0,25,2,7,20,2,7,0,0,40,127,9,0,82,7,7,0,3,7,2,7,2,8,0,0,28,127,9,0,82,8,8,0,3,2,7,8,2,8,0,0,24,127,9,0,82,1,8,0,2,8,0,0,28,127,9,0,15,6,1,2,125,7,6,1,2,0,0,0,85,8,7,0,119,0,54,2,2,8,0,0,167,245,6,0,135,7,0,0,8,0,0,0,135,7,33,0,1,8,1,0,135,7,32,0,8,0,0,0,119,0,46,2,2,8,0,0,207,245,6,0,135,7,0,0,8,0,0,0,2,7,0,0,0,127,9,0,1,6,6,0,135,8,24,0,6,0,0,0,41,8,8,2,3,2,7,8,82,8,2,0,25,8,8,1,85,2,8,0,119,0,30,2,2,7,0,0,238,245,6,0,135,8,0,0,7,0,0,0,1,8,2,0,135,2,1,0,8,0,0,0,2,8,0,0,8,127,9,0,2,7,0,0,8,127,9,0,82,7,7,0,3,7,7,2,85,8,7,0,119,0,15,2,2,8,0,0,13,246,6,0,135,7,0,0,8,0,0,0,2,7,0,0,0,127,9,0,82,0,7,0,34,7,0,12,121,7,6,0,2,7,0,0,0,127,9,0,1,8,12,0,85,7,8,0,119,0,1,2,2,8,0,0,0,127,9,0,25,7,0,1,85,8,7,0,119,0,252,1,2,8,0,0,35,246,6,0,135,7,0,0,8,0,0,0,2,7,0,0,20,127,9,0,2,8,0,0,20,127,9,0,82,8,8,0,25,8,8,1,85,7,8,0,119,0,240,1,2,7,0,0,63,246,6,0,135,8,0,0,7,0,0,0,2,8,0,0,0,127,9,0,82,8,8,0,26,2,8,1,2,8,0,0,0,127,9,0,1,6,3,0,15,6,6,2,1,9,3,0,125,7,6,2,9,0,0,0,85,8,7,0,119,0,223,1,2,8,0,0,82,246,6,0,135,7,0,0,8,0,0,0,2,7,0,0,4,127,9,0,2,8,0,0,4,127,9,0,82,8,8,0,25,8,8,1,85,7,8,0,119,0,211,1,2,7,0,0,117,246,6,0,135,8,0,0,7,0,0,0,1,7,232,3,134,8,0,0,116,82,1,0,7,0,0,0,2,8,0,0,112,127,9,0,82,8,8,0,120,8,200,1,1,1,0,0,1,0,0,0,27,8,0,68,3,8,4,8,41,7,1,2,94,8,8,7,1,6,23,0,1,9,61,0,138,8,6,9,192,72,0,0,224,72,0,0,228,72,0,0,232,72,0,0,236,72,0,0,240,72,0,0,244,72,0,0,248,72,0,0,252,72,0,0,0,73,0,0,4,73,0,0,8,73,0,0,12,73,0,0,16,73,0,0,20,73,0,0,24,73,0,0,28,73,0,0,32,73,0,0,36,73,0,0,40,73,0,0,44,73,0,0,48,73,0,0,52,73,0,0,56,73,0,0,60,73,0,0,64,73,0,0,68,73,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,72,73,0,0,76,73,0,0,80,73,0,0,84,73,0,0,88,73,0,0,92,73,0,0,96,73,0,0,100,73,0,0,104,73,0,0,188,72,0,0,188,72,0,0,108,73,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,188,72,0,0,112,73,0,0,119,0,46,0,27,7,0,68,3,7,3,7,41,9,1,2,1,6,1,0,97,7,9,6,135,6,29,0,0,1,0,0,119,0,38,0,119,0,248,255,119,0,247,255,119,0,246,255,119,0,245,255,119,0,244,255,119,0,243,255,119,0,242,255,119,0,241,255,119,0,240,255,119,0,239,255,119,0,238,255,119,0,237,255,119,0,236,255,119,0,235,255,119,0,234,255,119,0,233,255,119,0,232,255,119,0,231,255,119,0,230,255,119,0,229,255,119,0,228,255,119,0,227,255,119,0,226,255,119,0,225,255,119,0,224,255,119,0,223,255,119,0,222,255,119,0,221,255,119,0,220,255,119,0,219,255,119,0,218,255,119,0,217,255,119,0,216,255,119,0,215,255,119,0,214,255,119,0,213,255,119,0,212,255,25,0,0,1,33,8,0,67,120,8,140,255,25,1,1,1,33,8,1,17,120,8,136,255,135,8,34,0,119,0,76,1,2,6,0,0,153,246,6,0,135,8,0,0,6,0,0,0,1,6,232,3,134,8,0,0,116,82,1,0,6,0,0,0,2,8,0,0,112,127,9,0,82,8,8,0,120,8,64,1,1,2,0,0,1,1,0,0,2,8,0,0,0,153,9,0,27,6,1,68,3,8,8,6,41,6,2,2,94,0,8,6,121,0,24,0,2,8,0,0,112,135,5,0,41,6,0,2,94,0,8,6,2,8,0,0,72,28,6,0,82,8,8,0,46,8,0,8,68,74,0,0,32,8,0,73,2,6,0,0,28,128,9,0,82,6,6,0,34,6,6,1,19,8,8,6,120,8,8,0,27,8,1,68,3,8,3,8,41,6,2,2,1,9,1,0,97,8,6,9,135,9,29,0,1,2,0,0,25,1,1,1,33,9,1,67,120,9,224,255,25,2,2,1,32,9,2,17,121,9,220,255,119,0,25,1,2,6,0,0,191,246,6,0,135,9,0,0,6,0,0,0,1,1,0,0,1,0,0,0,27,9,0,68,3,9,3,9,41,6,1,2,1,8,0,0,97,9,6,8,25,0,0,1,33,8,0,67,120,8,249,255,25,1,1,1,33,8,1,17,120,8,245,255,1,6,232,3,134,8,0,0,116,82,1,0,6,0,0,0,135,8,5,0,119,0,2,1,2,6,0,0,220,246,6,0,135,8,0,0,6,0,0,0,119,0,253,0,2,6,0,0,252,246,6,0,135,8,0,0,6,0,0,0,2,8,0,0,112,127,9,0,2,6,0,0,112,127,9,0,82,6,6,0,1,9,244,1,3,6,6,9,85,8,6,0,119,0,240,0,2,8,0,0,21,247,6,0,135,6,0,0,8,0,0,0,1,8,9,0,135,6,1,0,8,0,0,0,25,2,6,20,2,6,0,0,120,127,9,0,2,8,0,0,120,127,9,0,82,8,8,0,3,8,2,8,85,6,8,0,119,0,224,0,2,6,0,0,40,247,6,0,135,8,0,0,6,0,0,0,2,8,0,0,128,127,9,0,82,0,8,0,120,0,15,0,1,0,0,0,2,8,0,0,0,127,9,0,41,6,0,2,3,2,8,6,82,6,2,0,25,6,6,11,85,2,6,0,25,0,0,1,33,6,0,6,120,6,247,255,2,6,0,0,128,127,9,0,82,0,6,0,2,6,0,0,128,127,9,0,1,8,250,0,3,8,0,8,85,6,8,0,119,0,195,0,2,6,0,0,72,247,6,0,135,8,0,0,6,0,0,0,2,8,0,0,12,127,9,0,2,6,0,0,12,127,9,0,82,6,6,0,25,6,6,1,85,8,6,0,119,0,183,0,2,8,0,0,112,247,6,0,135,6,0,0,8,0,0,0,2,6,0,0,196,127,9,0,82,0,6,0,120,0,8,0,2,6,0,0,48,128,9,0,2,8,0,0,48,128,9,0,82,8,8,0,25,8,8,21,85,6,8,0,2,8,0,0,196,127,9,0,1,6,188,2,3,6,0,6,85,8,6,0,119,0,162,0,2,8,0,0,154,247,6,0,135,6,0,0,8,0,0,0,2,6,0,0,200,127,9,0,2,8,0,0,200,127,9,0,82,8,8,0,1,9,232,3,3,8,8,9,85,6,8,0,119,0,149,0,2,6,0,0,191,247,6,0,135,8,0,0,6,0,0,0,1,6,232,3,134,8,0,0,116,82,1,0,6,0,0,0,2,8,0,0,112,127,9,0,82,8,8,0,120,8,138,0,1,1,0,0,1,0,0,0,27,8,0,68,3,8,4,8,41,6,1,2,94,8,8,6,1,7,18,0,1,9,53,0,138,8,7,9,152,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,156,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,160,77,0,0,164,77,0,0,168,77,0,0,172,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,148,77,0,0,176,77,0,0,119,0,15,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,27,6,0,68,3,6,3,6,41,9,1,2,1,7,1,0,97,6,9,7,135,7,29,0,0,1,0,0,119,0,1,0,25,0,0,1,33,8,0,67,120,8,179,255,25,1,1,1,33,8,1,17,120,8,175,255,135,8,34,0,119,0,53,0,2,7,0,0,211,247,6,0,135,8,0,0,7,0,0,0,2,8,0,0,28,127,9,0,2,7,0,0,24,127,9,0,82,7,7,0,85,8,7,0,119,0,41,0,2,8,0,0,237,247,6,0,135,7,0,0,8,0,0,0,119,0,37,0,2,8,0,0,12,248,6,0,135,7,0,0,8,0,0,0,1,8,200,0,135,7,1,0,8,0,0,0,1,8,200,0,3,2,7,8,2,8,0,0,24,128,9,0,2,7,0,0,24,128,9,0,82,7,7,0,3,7,2,7,85,8,7,0,119,0,20,0,2,8,0,0,44,248,6,0,135,7,0,0,8,0,0,0,1,8,232,3,135,7,1,0,8,0,0,0,1,8,144,1,3,2,7,8,2,8,0,0,28,128,9,0,2,7,0,0,28,128,9,0,82,7,7,0,3,7,2,7,85,8,7,0,135,7,5,0,119,0,2,0,135,7,19,0,139,0,0,0,140,0,11,0,0,0,0,0,2,5,0,0,212,95,2,0,2,6,0,0,214,95,2,0,2,7,0,0,255,95,2,0,2,8,0,0,184,127,9,0,82,0,8,0,120,0,49,2,2,8,0,0,0,127,9,0,82,1,8,0,34,8,1,3,121,8,8,0,2,8,0,0,0,127,9,0,1,9,3,0,85,8,9,0,1,0,1,0,1,1,3,0,119,0,2,0,1,0,0,0,2,9,0,0,28,127,9,0,82,2,9,0,2,9,0,0,24,127,9,0,82,3,9,0,46,9,2,3,196,79,0,0,2,9,0,0,96,127,9,0,82,4,9,0,2,9,0,0,96,127,9,0,26,8,4,1,85,9,8,0,34,8,4,1,121,8,23,0,2,8,0,0,96,127,9,0,2,9,0,0,212,127,9,0,82,9,9,0,41,9,9,1,25,9,9,22,2,10,0,0,40,127,9,0,82,10,10,0,4,9,9,10,85,8,9,0,2,9,0,0,44,127,9,0,82,9,9,0,3,4,9,2,2,9,0,0,28,127,9,0,15,10,3,4,125,8,10,3,4,0,0,0,85,9,8,0,2,8,0,0,64,127,9,0,82,2,8,0,2,8,0,0,60,127,9,0,82,8,8,0,47,8,2,8,88,80,0,0,2,8,0,0,72,127,9,0,82,4,8,0,2,8,0,0,72,127,9,0,26,9,4,1,85,8,9,0],eb+10240);HEAPU8.set([34,9,4,1,121,9,21,0,2,9,0,0,72,127,9,0,2,8,0,0,212,127,9,0,82,8,8,0,2,10,0,0,40,127,9,0,82,10,10,0,4,8,8,10,2,10,0,0,68,127,9,0,82,10,10,0,4,8,8,10,41,8,8,2,25,8,8,100,85,9,8,0,2,8,0,0,64,127,9,0,25,9,2,1,85,8,9,0,2,9,0,0,128,127,9,0,82,2,9,0,121,2,23,0,2,9,0,0,128,127,9,0,26,8,2,1,85,9,8,0,34,8,2,2,121,8,17,0,2,8,0,0,0,127,9,0,26,9,1,10,85,8,9,0,1,0,1,0,2,9,0,0,0,127,9,0,41,8,0,2,3,4,9,8,82,8,4,0,26,8,8,10,85,4,8,0,25,0,0,1,33,8,0,6,120,8,247,255,1,0,1,0,2,8,0,0,124,127,9,0,82,1,8,0,121,1,15,0,2,8,0,0,124,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,9,0,2,9,0,0,76,127,9,0,2,8,0,0,76,127,9,0,82,8,8,0,26,8,8,3,85,9,8,0,1,0,1,0,2,8,0,0,84,127,9,0,82,1,8,0,121,1,15,0,2,8,0,0,84,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,9,0,2,9,0,0,76,127,9,0,2,8,0,0,76,127,9,0,82,8,8,0,26,8,8,2,85,9,8,0,1,0,1,0,2,8,0,0,104,127,9,0,82,1,8,0,121,1,15,0,2,8,0,0,104,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,9,0,2,9,0,0,16,127,9,0,2,8,0,0,16,127,9,0,82,8,8,0,26,8,8,3,85,9,8,0,1,0,1,0,2,8,0,0,108,127,9,0,82,1,8,0,121,1,15,0,2,8,0,0,108,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,9,0,2,9,0,0,48,128,9,0,2,8,0,0,48,128,9,0,82,8,8,0,26,8,8,3,85,9,8,0,1,0,1,0,2,8,0,0,112,127,9,0,82,1,8,0,121,1,12,0,2,8,0,0,112,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,6,0,135,9,14,0,2,8,0,0,89,242,6,0,135,9,0,0,8,0,0,0,2,9,0,0,120,127,9,0,82,1,9,0,121,1,12,0,2,9,0,0,120,127,9,0,26,8,1,1,85,9,8,0,34,8,1,2,121,8,6,0,135,8,14,0,2,9,0,0,110,242,6,0,135,8,0,0,9,0,0,0,2,8,0,0,196,127,9,0,82,1,8,0,121,1,15,0,2,8,0,0,196,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,121,9,9,0,2,9,0,0,48,128,9,0,2,8,0,0,48,128,9,0,82,8,8,0,26,8,8,20,85,9,8,0,1,0,1,0,2,8,0,0,132,127,9,0,82,1,8,0,121,1,9,0,2,8,0,0,132,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,136,127,9,0,82,1,8,0,121,1,9,0,2,8,0,0,136,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,140,127,9,0,82,1,8,0,121,1,9,0,2,8,0,0,140,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,44,128,9,0,82,1,8,0,121,1,9,0,2,8,0,0,44,128,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,144,127,9,0,82,1,8,0,121,1,9,0,2,8,0,0,144,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,152,127,9,0,82,1,8,0,121,1,5,0,2,8,0,0,152,127,9,0,26,9,1,1,85,8,9,0,2,9,0,0,172,127,9,0,82,1,9,0,121,1,9,0,2,9,0,0,172,127,9,0,26,8,1,1,85,9,8,0,34,8,1,2,1,9,1,0,125,0,8,9,0,0,0,0,2,9,0,0,0,128,9,0,82,1,9,0,121,1,9,0,2,9,0,0,0,128,9,0,26,8,1,1,85,9,8,0,34,8,1,2,1,9,1,0,125,0,8,9,0,0,0,0,2,9,0,0,176,127,9,0,82,1,9,0,121,1,5,0,2,9,0,0,176,127,9,0,26,8,1,1,85,9,8,0,2,8,0,0,180,127,9,0,82,1,8,0,121,1,9,0,2,8,0,0,180,127,9,0,26,9,1,1,85,8,9,0,34,9,1,2,1,8,1,0,125,0,9,8,0,0,0,0,2,8,0,0,188,127,9,0,82,1,8,0,121,1,5,0,2,8,0,0,188,127,9,0,26,9,1,1,85,8,9,0,2,9,0,0,200,127,9,0,82,1,9,0,121,1,9,0,2,9,0,0,200,127,9,0,26,8,1,1,85,9,8,0,34,8,1,2,1,9,1,0,125,0,8,9,0,0,0,0,2,9,0,0,156,127,9,0,82,1,9,0,121,1,16,0,2,9,0,0,156,127,9,0,26,8,1,1,85,9,8,0,1,8,2,0,56,8,8,1,252,84,0,0,2,8,0,0,76,127,9,0,2,9,0,0,76,127,9,0,82,9,9,0,26,9,9,10,85,8,9,0,1,0,1,0,2,9,0,0,244,127,9,0,82,1,9,0,121,1,9,0,2,9,0,0,244,127,9,0,26,8,1,1,85,9,8,0,34,8,1,2,1,9,1,0,125,0,8,9,0,0,0,0,2,9,0,0,248,127,9,0,82,1,9,0,121,1,9,0,2,9,0,0,248,127,9,0,26,8,1,1,85,9,8,0,34,8,1,2,1,9,1,0,125,0,8,9,0,0,0,0,2,9,0,0,24,128,9,0,82,1,9,0,121,1,13,0,2,9,0,0,24,128,9,0,26,8,1,1,85,9,8,0,1,8,2,0,56,8,8,1,156,85,0,0,135,8,14,0,2,9,0,0,134,242,6,0,135,8,0,0,9,0,0,0,2,8,0,0,28,128,9,0,82,1,8,0,121,1,19,0,2,8,0,0,28,128,9,0,26,9,1,1,85,8,9,0,34,9,1,2,2,8,0,0,112,127,9,0,82,8,8,0,32,8,8,0,19,9,9,8,120,9,2,0,119,0,7,0,135,9,5,0,135,9,14,0,2,8,0,0,155,242,6,0,135,9,0,0,8,0,0,0,2,9,0,0,4,128,9,0,82,1,9,0,121,1,53,0,1,9,1,0,47,9,9,1,176,86,0,0,2,9,0,0,252,127,9,0,82,9,9,0,2,8,0,0,80,127,9,0,82,8,8,0,19,9,9,8,33,9,9,255,121,9,21,0,1,9,50,0,1,10,100,0,135,8,1,0,10,0,0,0,56,9,9,8,132,86,0,0,2,9,0,0,252,127,9,0,1,8,255,255,85,9,8,0,2,8,0,0,80,127,9,0,1,9,255,255,85,8,9,0,135,9,14,0,2,8,0,0,194,242,6,0,135,9,0,0,8,0,0,0,135,9,19,0,2,9,0,0,4,128,9,0,82,4,9,0,2,9,0,0,4,128,9,0,26,8,4,1,85,9,8,0,1,8,2,0,56,8,8,4,212,86,0,0,119,0,5,0,2,8,0,0,4,128,9,0,26,9,1,1,85,8,9,0,135,9,14,0,2,8,0,0,252,242,6,0,135,9,0,0,8,0,0,0,2,9,0,0,16,128,9,0,82,1,9,0,121,1,49,0,1,9,1,0,15,9,9,1,2,8,0,0,88,127,9,0,82,8,8,0,33,8,8,255,19,9,9,8,121,9,26,0,2,9,0,0,208,170,9,0,2,8,0,0,72,225,10,0,82,8,8,0,27,8,8,68,3,9,9,8,2,8,0,0,76,225,10,0,82,8,8,0,41,8,8,2,94,9,9,8,120,9,13,0,1,9,33,0,1,10,100,0,135,8,1,0,10,0,0,0,56,9,9,8,104,87,0,0,2,8,0,0,88,127,9,0,82,8,8,0,134,9,0,0,88,240,0,0,8,0,0,0,2,9,0,0,16,128,9,0,82,4,9,0,2,9,0,0,16,128,9,0,26,8,4,1,85,9,8,0,1,8,2,0,56,8,8,4,164,87,0,0,135,8,14,0,2,9,0,0,34,243,6,0,135,8,0,0,9,0,0,0,120,0,2,0,119,0,10,0,135,8,19,0,119,0,8,0,2,8,0,0,184,127,9,0,26,9,0,1,85,8,9,0,34,9,0,2,121,9,2,0,135,9,19,0,139,0,0,0,140,0,17,0,0,0,0,0,2,11,0,0,64,111,10,0,2,12,0,0,128,136,5,0,2,13,0,0,0,153,9,0,1,5,0,0,2,14,0,0,180,127,9,0,82,14,14,0,120,14,170,1,2,14,0,0,152,127,9,0,82,14,14,0,32,4,14,0,2,14,0,0,76,225,10,0,82,0,14,0,121,4,19,0,26,10,0,3,2,14,0,0,148,225,10,0,85,14,10,0,25,1,0,4,2,14,0,0,152,225,10,0,85,14,1,0,2,14,0,0,72,225,10,0,82,3,14,0,26,2,3,5,2,14,0,0,156,225,10,0,85,14,2,0,0,0,10,0,25,3,3,6,119,0,18,0,26,10,0,5,2,14,0,0,148,225,10,0,85,14,10,0,25,1,0,6,2,14,0,0,152,225,10,0,85,14,1,0,2,14,0,0,72,225,10,0,82,3,14,0,26,2,3,10,2,14,0,0,156,225,10,0,85,14,2,0,0,0,10,0,25,3,3,11,2,14,0,0,160,225,10,0,85,14,3,0,2,14,0,0,68,225,10,0,82,14,14,0,120,14,34,0,34,14,0,0,121,14,6,0,2,14,0,0,148,225,10,0,1,15,0,0,85,14,15,0,1,0,0,0,1,15,17,0,47,15,15,1,12,89,0,0,2,15,0,0,152,225,10,0,1,14,17,0,85,15,14,0,1,1,17,0,34,14,2,0,121,14,6,0,2,14,0,0,156,225,10,0,1,15,0,0,85,14,15,0,1,2,0,0,1,15,67,0,47,15,15,3,76,89,0,0,2,15,0,0,160,225,10,0,1,14,67,0,85,15,14,0,1,9,67,0,119,0,35,0,0,9,3,0,119,0,33,0,34,14,0,1,121,14,6,0,2,14,0,0,148,225,10,0,1,15,1,0,85,14,15,0,1,0,1,0,1,15,16,0,47,15,15,1,144,89,0,0,2,15,0,0,152,225,10,0,1,14,16,0,85,15,14,0,1,1,16,0,34,14,2,1,121,14,6,0,2,14,0,0,156,225,10,0,1,15,1,0,85,14,15,0,1,2,1,0,1,15,66,0,47,15,15,3,208,89,0,0,2,15,0,0,160,225,10,0,1,14,66,0,85,15,14,0,1,9,66,0,119,0,2,0,0,9,3,0,1,14,10,0,2,15,0,0,212,127,9,0,82,15,15,0,4,10,14,15,15,3,0,1,2,15,0,0,0,128,9,0,82,15,15,0,33,15,15,0,19,15,4,15,121,15,46,0,121,3,43,0,15,8,2,9,1,4,0,0,1,3,0,0,121,8,34,0,0,7,2,0,27,15,7,68,3,15,13,15,41,14,0,2,94,5,15,14,121,5,25,0,2,15,0,0,224,92,10,0,27,14,7,68,3,15,15,14,41,14,0,2,94,15,15,14,121,15,18,0,27,15,4,12,3,6,11,15,85,6,7,0,109,6,4,0,25,6,6,8,27,15,5,40,3,15,12,15,106,15,15,24,47,15,10,15,132,90,0,0,1,15,1,0,85,6,15,0,25,3,3,1,119,0,3,0,1,15,0,0,85,6,15,0,25,4,4,1,25,7,7,1,53,15,7,9,28,90,0,0,25,0,0,1,54,15,0,1,20,90,0,0,1,5,46,0,119,0,40,0,1,3,0,0,119,0,38,0,121,3,36,0,15,8,2,9,1,3,0,0,1,4,0,0,121,8,27,0,0,7,2,0,27,15,7,68,3,15,13,15,41,14,0,2,94,5,15,14,121,5,18,0,27,15,4,12,3,6,11,15,85,6,7,0,109,6,4,0,25,6,6,8,27,15,5,40,3,15,12,15,106,15,15,24,47,15,10,15,28,91,0,0,1,15,1,0,85,6,15,0,25,3,3,1,119,0,3,0,1,15,0,0,85,6,15,0,25,4,4,1,25,7,7,1,53,15,7,9,208,90,0,0,25,0,0,1,54,15,0,1,200,90,0,0,1,5,46,0,119,0,2,0,1,3,0,0,32,15,5,46,121,15,54,0,1,15,0,0,47,15,15,4,40,92,0,0,2,15,0,0,172,127,9,0,82,15,15,0,121,15,13,0,1,0,0,0,27,15,0,12,3,9,11,15,82,14,9,0,106,16,9,4,134,15,0,0,92,46,1,0,14,16,0,0,25,0,0,1,52,15,0,4,40,92,0,0,119,0,246,255,36,15,3,0,121,15,13,0,1,0,0,0,27,15,0,12,3,9,11,15,82,16,9,0,106,14,9,4,134,15,0,0,48,190,0,0,16,14,0,0,25,0,0,1,52,15,0,4,40,92,0,0,119,0,246,255,135,15,35,0,1,0,0,0,27,15,0,12,3,2,11,15,82,1,2,0,106,2,2,4,27,15,0,12,3,15,11,15,106,15,15,8,120,15,5,0,134,15,0,0,48,190,0,0,1,2,0,0,119,0,4,0,134,15,0,0,108,222,0,0,1,2,0,0,25,0,0,1,53,15,0,4,224,91,0,0,2,15,0,0,132,225,10,0,82,1,15,0,2,15,0,0,156,225,10,0,82,15,15,0,17,15,15,1,2,14,0,0,160,225,10,0,82,14,14,0,15,14,1,14,19,15,15,14,0,2,15,0,2,15,0,0,136,225,10,0,82,0,15,0,2,15,0,0,152,127,9,0,82,15,15,0,32,15,15,0,2,14,0,0,0,128,9,0,82,14,14,0,33,14,14,0,19,15,15,14,120,15,59,0,121,2,11,0,2,15,0,0,148,225,10,0,82,15,15,0,17,15,15,0,2,14,0,0,152,225,10,0,82,14,14,0,15,14,0,14,19,15,15,14,120,15,125,0,27,15,1,68,3,15,13,15,41,14,0,2,94,2,15,14,120,2,2,0,119,0,119,0,2,15,0,0,172,127,9,0,82,15,15,0,120,15,22,0,27,15,2,40,3,15,12,15,106,15,15,24,49,15,15,10,8,93,0,0,134,15,0,0,48,190,0,0,1,0,0,0,119,0,16,0,120,3,8,0,135,15,35,0,2,15,0,0,132,225,10,0,82,1,15,0,2,15,0,0,136,225,10,0,82,0,15,0,134,15,0,0,108,222,0,0,1,0,0,0,119,0,4,0,134,15,0,0,92,46,1,0,1,0,0,0,2,15,0,0,132,225,10,0,2,14,0,0,224,110,10,0,82,14,14,0,85,15,14,0,2,14,0,0,136,225,10,0,2,15,0,0,16,111,10,0,82,15,15,0,85,14,15,0,119,0,78,0,121,2,15,0,2,15,0,0,148,225,10,0,82,15,15,0,17,15,15,0,2,14,0,0,152,225,10,0,82,14,14,0,15,14,0,14,19,15,15,14,121,15,3,0,1,5,73,0,119,0,4,0,1,5,72,0,119,0,2,0,1,5,72,0,32,15,5,72,121,15,7,0,27,15,1,68,3,15,13,15,41,14,0,2,94,15,15,14,120,15,2,0,1,5,73,0,32,15,5,73,121,15,8,0,2,15,0,0,224,92,10,0,27,14,1,68,3,15,15,14,41,14,0,2,94,15,15,14,120,15,45,0,2,15,0,0,172,127,9,0,82,15,15,0,120,15,26,0,27,15,1,68,3,15,13,15,41,14,0,2,94,15,15,14,27,15,15,40,3,15,12,15,106,15,15,24,49,15,15,10,64,94,0,0,134,15,0,0,48,190,0,0,1,0,0,0,119,0,16,0,120,3,8,0,135,15,35,0,2,15,0,0,132,225,10,0,82,1,15,0,2,15,0,0,136,225,10,0,82,0,15,0,134,15,0,0,108,222,0,0,1,0,0,0,119,0,4,0,134,15,0,0,92,46,1,0,1,0,0,0,2,15,0,0,132,225,10,0,2,14,0,0,224,110,10,0,82,14,14,0,85,15,14,0,2,14,0,0,136,225,10,0,2,15,0,0,16,111,10,0,82,15,15,0,85,14,15,0,139,0,0,0,140,1,16,0,0,0,0,0,2,7,0,0,112,206,9,0,2,8,0,0,0,153,9,0,2,9,0,0,48,135,9,0,1,4,0,0,136,10,0,0,0,6,10,0,136,10,0,0,25,10,10,16,137,10,0,0,25,3,6,8,0,2,6,0,37,10,0,23,121,10,182,1,2,11,0,0,151,254,6,0,135,10,0,0,11,0,0,0,2,10,0,0,112,129,9,0,41,11,0,2,1,12,1,0,97,10,11,12,1,15,0,0,1,12,24,0,138,0,15,12,140,95,0,0,164,95,0,0,188,95,0,0,132,96,0,0,152,96,0,0,192,96,0,0,216,96,0,0,12,97,0,0,156,97,0,0,192,97,0,0,244,97,0,0,52,98,0,0,160,98,0,0,216,98,0,0,16,99,0,0,72,99,0,0,148,99,0,0,184,99,0,0,48,100,0,0,128,100,0,0,20,101,0,0,104,101,0,0,112,101,0,0,156,101,0,0,119,0,145,1,2,11,0,0,172,254,6,0,135,12,0,0,11,0,0,0,135,12,36,0,119,0,139,1,2,11,0,0,203,254,6,0,135,12,0,0,11,0,0,0,135,12,37,0,119,0,133,1,2,11,0,0,235,254,6,0,135,12,0,0,11,0,0,0,2,12,0,0,76,225,10,0,82,0,12,0,25,5,0,7,34,12,5,17,1,11,17,0,125,5,12,5,11,0,0,0,2,11,0,0,72,225,10,0,82,3,11,0,25,2,3,25,34,11,2,67,1,12,67,0,125,2,11,2,12,0,0,0,26,0,0,7,1,12,0,0,15,12,12,0,1,11,0,0,125,0,12,0,11,0,0,0,26,3,3,25,1,11,0,0,15,11,11,3,1,12,0,0,125,3,11,3,12,0,0,0,47,12,0,5,124,96,0,0,15,4,3,2,121,4,10,0,0,1,3,0,27,12,1,68,3,12,7,12,41,11,0,2,1,10,3,0,97,12,11,10,25,1,1,1,54,10,1,2,80,96,0,0,25,0,0,1,54,10,0,5,72,96,0,0,135,10,5,0,119,0,83,1,2,11,0,0,17,255,6,0,135,10,0,0,11,0,0,0,119,0,78,1,2,12,0,0,68,225,10,0,82,12,12,0,25,12,12,1,135,11,7,0,12,0,0,0,134,10,0,0,132,251,0,0,11,0,0,0,119,0,68,1,2,11,0,0,68,225,10,0,82,11,11,0,135,10,38,0,11,0,0,0,119,0,62,1,2,11,0,0,48,255,6,0,135,10,0,0,11,0,0,0,2,10,0,0,152,127,9,0,2,11,0,0,152,127,9,0,82,11,11,0,1,12,32,3,3,11,11,12,85,10,11,0,119,0,49,1,1,11,232,3,135,0,1,0,11,0,0,0,1,11,82,3,4,1,0,11,2,11,0,0,64,225,10,0,2,10,0,0,64,225,10,0,82,10,10,0,3,10,10,1,85,11,10,0,1,10,81,3,47,10,10,0,108,97,0,0,1,10,239,2,4,10,0,10,28,10,10,100,85,2,10,0,2,11,0,0,74,255,6,0,135,10,2,0,11,2,0,0,119,0,9,0,1,10,239,2,4,10,10,0,28,10,10,100,85,3,10,0,2,11,0,0,113,255,6,0,135,10,2,0,11,3,0,0,134,10,0,0,140,76,1,0,1,0,0,0,119,0,13,1,2,11,0,0,153,255,6,0,135,10,0,0,11,0,0,0,1,11,0,0,134,10,0,0,48,53,1,0,11,0,0,0,119,0,4,1,2,11,0,0,179,255,6,0,135,10,0,0,11,0,0,0,2,10,0,0,176,127,9,0,2,11,0,0,176,127,9,0,82,11,11,0,1,12,8,7,3,11,11,12,85,10,11,0,119,0,247,0,2,10,0,0,48,255,6,0,135,11,0,0,10,0,0,0,1,10,55,0,135,11,1,0,10,0,0,0,25,5,11,12,2,11,0,0,188,127,9,0,2,10,0,0,188,127,9,0,82,10,10,0,3,10,5,10,85,11,10,0,119,0,231,0,2,11,0,0,48,255,6,0,135,10,0,0,11,0,0,0,1,1,0,0,1,0,0,0,27,10,0,68,3,10,8,10,41,11,1,2,94,2,10,11,121,2,10,0,27,10,0,68,3,10,9,10,41,11,1,2,2,12,0,0,128,136,5,0,27,13,2,40,3,12,12,13,106,12,12,32,97,10,11,12,25,0,0,1,33,12,0,67,120,12,240,255,25,1,1,1,33,12,1,17,120,12,236,255,119,0,204,0,1,11,200,0,135,12,1,0,11,0,0,0,1,11,44,1,3,5,12,11,2,11,0,0,244,127,9,0,2,12,0,0,244,127,9,0,82,12,12,0,3,12,5,12,85,11,12,0,135,12,19,0,119,0,190,0,1,11,200,0,135,12,1,0,11,0,0,0,1,11,44,1,3,5,12,11,2,11,0,0,248,127,9,0,2,12,0,0,248,127,9,0,82,12,12,0,3,12,5,12,85,11,12,0,135,12,19,0,119,0,176,0,1,11,250,0,135,12,1,0,11,0,0,0,1,11,250,0,3,5,12,11,2,11,0,0,0,128,9,0,2,12,0,0,0,128,9,0,82,12,12,0,3,12,5,12,85,11,12,0,135,12,19,0,119,0,162,0,2,11,0,0,235,254,6,0,135,12,0,0,11,0,0,0,1,1,0,0,1,0,0,0,27,12,0,68,3,12,7,12,41,11,1,2,1,10,3,0,97,12,11,10,25,0,0,1,33,10,0,67,120,10,249,255,25,1,1,1,33,10,1,17,120,10,245,255,135,10,5,0,119,0,143,0,2,10,0,0,180,127,9,0,2,11,0,0,180,127,9,0,82,11,11,0,25,11,11,30,85,10,11,0,135,11,19,0,119,0,134,0,2,10,0,0,201,255,6,0,135,11,0,0,10,0,0,0,1,0,0,0,2,11,0,0,144,128,9,0,41,10,0,2,94,11,11,10,26,11,11,50,35,11,11,4,121,11,15,0,2,11,0,0,0,129,9,0,41,10,0,2,3,5,11,10,82,10,5,0,41,10,10,1,1,11,254,1,19,10,10,11,0,4,10,0,35,11,4,255,1,12,255,0,125,10,11,4,12,0,0,0,85,5,10,0,25,0,0,1,33,10,0,26,120,10,233,255,119,0,104,0,2,12,0,0,242,255,6,0,135,10,0,0,12,0,0,0,1,0,0,0,2,10,0,0,0,127,9,0,2,12,0,0,160,194,5,0,41,11,0,2,94,12,12,11,41,12,12,2,3,5,10,12,82,12,5,0,41,12,12,1,85,5,12,0,25,0,0,1,33,12,0,11,120,12,243,255,119,0,84,0,2,10,0,0,201,255,6,0,135,12,0,0,10,0,0,0,1,0,0,0,2,12,0,0,144,128,9,0,41,10,0,2,94,12,12,10,1,10,41,0,1,11,2,0,138,12,10,11,188,100,0,0,204,100,0,0,119,0,9,0,2,1,0,0,112,129,9,0,1,4,47,0,119,0,5,0,2,1,0,0,208,129,9,0,1,4,47,0,119,0,1,0,32,12,4,47,121,12,9,0,1,4,0,0,2,12,0,0,0,129,9,0,41,10,0,2,94,12,12,10,41,12,12,2,1,10,1,0,97,1,12,10,25,0,0,1,32,10,0,26,121,10,226,255,119,0,47,0,2,12,0,0,31,0,7,0,135,10,0,0,12,0,0,0,1,0,0,0,2,10,0,0,0,127,9,0,2,12,0,0,208,194,5,0,41,11,0,2,94,12,12,11,41,12,12,2,3,1,10,12,82,12,1,0,121,12,3,0,1,12,1,0,85,1,12,0,25,0,0,1,33,12,0,10,120,12,242,255,119,0,26,0,135,12,39,0,119,0,24,0,1,10,22,0,1,11,150,0,2,13,0,0,60,0,7,0,1,14,0,0,1,15,32,0,134,12,0,0,132,60,0,0,10,11,13,14,15,0,0,0,119,0,13,0,2,15,0,0,31,0,7,0,135,12,0,0,15,0,0,0,2,12,0,0,56,128,9,0,2,15,0,0,56,128,9,0,82,15,15,0,25,15,15,1,85,12,15,0,119,0,1,0,137,6,0,0,139,0,0,0,140,0,23,0,0,0,0,0,2,17,0,0,200,95,2,0,2,18,0,0,144,128,9,0,2,19,0,0,232,231,6,0,1,6,0,0,136,20,0,0,0,14,20,0,136,20,0,0,1,21,16,1,3,20,20,21,137,20,0,0,1,20,8,1,3,11,14,20,1,20,0,1,3,10,14,20,1,20,248,0,3,9,14,20,1,20,240,0,3,13,14,20,1,20,232,0,3,12,14,20,1,20,224,0,3,5,14,20,1,20,216,0,3,4,14,20,25,7,14,112,0,8,14,0,135,20,18,0,1,0,0,0,1,3,0,0,41,20,3,2,3,1,18,20,82,20,1,0,1,21,22,0,1,22,32,0,138,20,21,22,16,103,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,244,102,0,0,96,103,0,0,140,103,0,0,144,103,0,0,148,103,0,0,41,21,3,2,1,22,0,0,97,8,21,22,41,22,3,2,1,21,0,0,97,7,22,21,119,0,35,0,2,21,0,0,64,225,10,0,82,21,21,0,27,2,21,7,30,21,2,100,4,21,21,2,2,22,0,0,144,208,3,0,3,2,21,22,2,22,0,0,80,195,0,0,15,22,22,2,2,21,0,0,80,195,0,0,125,2,22,2,21,0,0,0,41,21,3,2,97,8,21,2,1,6,5,0,119,0,15,0,2,21,0,0,0,129,9,0,41,22,3,2,94,21,21,22,1,22,255,0,19,21,21,22,27,2,21,100,41,21,3,2,97,8,21,2,1,6,5,0,119,0,4,0,119,0,245,255,119,0,244,255,119,0,243,255,32,20,6,5,121,20,32,0,1,6,0,0,41,20,3,2,97,7,20,0,30,20,0,2,27,16,20,40,42,20,0,1,25,15,20,4,39,21,16,1,135,20,27,0,21,15,0,0,2,20,0,0,0,130,5,0,82,21,1,0,41,21,21,2,94,1,20,21,25,20,3,97,85,4,20,0,109,4,4,1,2,21,0,0,20,212,6,0,135,20,2,0,21,4,0,0,25,21,16,33,135,20,27,0,21,15,0,0,85,5,2,0,2,21,0,0,233,235,6,0,135,20,2,0,21,5,0,0,25,0,0,1,25,3,3,1,33,20,3,26,120,20,142,255,1,0,0,0,1,21,31,0,1,22,17,0,135,20,27,0,21,22,0,0,135,20,40,0,2,20,0,0,56,127,9,0,82,20,20,0,85,12,20,0,2,22,0,0,237,235,6,0,135,20,2,0,22,12,0,0,1,22,31,0,1,21,18,0,135,20,27,0,22,21,0,0,135,20,40,0,2,20,0,0,32,127,9,0,82,20,20,0,85,13,20,0,2,21,0,0,190,228,6,0,135,20,2,0,21,13,0,0,2,20,0,0,31,161,7,0,2,21,0,0,32,127,9,0,82,21,21,0,2,22,0,0,56,127,9,0,82,22,22,0,3,21,21,22,47,20,20,21,208,104,0,0,2,21,0,0,17,236,6,0,135,20,0,0,21,0,0,0,1,21,1,0,1,22,20,0,135,20,41,0,21,22,0,0,2,22,0,0,97,236,6,0,135,20,0,0,22,0,0,0,2,22,0,0,112,236,6,0,135,20,42,0,22,0,0,0,2,22,0,0,114,236,6,0,135,20,0,0,22,0,0,0,2,22,0,0,127,236,6,0,135,20,42,0,22,0,0,0,2,22,0,0,129,236,6,0,135,20,0,0,22,0,0,0,2,22,0,0,143,236,6,0,135,20,42,0,22,0,0,0,2,22,0,0,145,236,6,0,135,20,0,0,22,0,0,0,2,22,0,0,178,211,6,0,135,20,42,0,22,0,0,0,2,22,0,0,31,229,6,0,135,20,0,0,22,0,0,0,2,20,0,0,104,225,10,0,1,22,0,0,85,20,22,0,134,22,0,0,168,81,1,0,1,20,27,0,1,21,93,0,138,22,20,21,12,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,16,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,24,107,0,0,8,107,0,0,8,107,0,0,8,107,0,0,32,107,0,0,119,0,8,0,119,0,225,0,1,6,14,0,119,0,7,0,1,6,20,0,119,0,5,0,1,6,17,0,119,0,3,0,135,22,43,0,119,0,149,255,32,22,6,14,121,22,42,0,2,20,0,0,165,236,6,0,135,22,0,0,20,0,0,0,135,22,40,0,2,20,0,0,174,236,6,0,135,22,0,0,20,0,0,0,2,22,0,0,32,127,9,0,82,22,22,0,134,1,0,0,128,242,0,0,22,0,0,0,2,22,0,0,32,127,9,0,82,2,22,0,47,22,2,1,172,107,0,0,2,20,0,0,185,236,6,0,135,22,0,0,20,0,0,0,1,20,232,3,134,22,0,0,116,82,1,0,20,0,0,0,119,0,33,255,2,22,0,0,32,127,9,0,4,20,2,1,85,22,20,0,2,20,0,0,56,127,9,0,2,22,0,0,56,127,9,0,82,22,22,0,3,22,22,1,85,20,22,0,119,0,21,255,32,22,6,17,121,22,37,0,2,20,0,0,211,236,6,0,135,22,0,0,20,0,0,0,2,22,0,0,56,127,9,0,82,22,22,0,134,1,0,0,128,242,0,0,22,0,0,0,2,22,0,0,56,127,9,0,82,2,22,0,47,22,2,1,68,108,0,0,2,20,0,0,231,236,6,0,135,22,0,0,20,0,0,0,1,20,232,3,134,22,0,0,116,82,1,0,20,0,0,0,119,0,251,254,2,22,0,0,32,127,9,0,2,20,0,0,32,127,9,0,82,20,20,0,3,20,20,1,85,22,20,0,2,20,0,0,56,127,9,0,4,22,2,1,85,20,22,0,119,0,239,254,32,22,6,20,121,22,237,254,1,6,0,0,2,20,0,0,14,237,6,0,135,22,0,0,20,0,0,0,2,20,0,0,54,237,6,0,135,22,42,0,20,0,0,0,2,20,0,0,56,237,6,0,135,22,0,0,20,0,0,0,134,4,0,0,168,81,1,0,1,22,27,0,1,20,16,0,138,4,22,20,8,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,4,109,0,0,12,109,0,0,119,0,3,0,119,0,201,254,119,0,8,0,26,3,4,97,35,22,3,26,121,22,3,0,1,6,31,0,119,0,3,0,135,22,43,0,119,0,226,255,32,22,6,31,121,22,42,0,41,22,3,2,3,1,8,22,82,2,1,0,120,2,11,0,85,10,4,0,2,20,0,0,95,237,6,0,135,22,2,0,20,10,0,0,1,20,232,3,134,22,0,0,116,82,1,0,20,0,0,0,119,0,177,254,2,22,0,0,32,127,9,0,2,20,0,0,32,127,9,0,82,20,20,0,3,20,20,2,85,22,20,0,41,20,3,2,1,22,0,0,97,18,20,22,1,22,0,0,85,1,22,0,41,22,3,2,94,16,7,22,30,20,16,2,27,20,20,40,39,20,20,1,42,21,16,1,25,21,21,4,135,22,27,0,20,21,0,0,2,22,0,0,78,250,10,0,85,11,22,0,135,22,2,0,19,11,0,0,119,0,150,254,1,3,0,0,41,22,3,2,3,1,8,22,82,2,1,0,121,2,28,0,2,22,0,0,32,127,9,0,2,21,0,0,32,127,9,0,82,21,21,0,3,21,21,2,85,22,21,0,41,21,3,2,1,22,0,0,97,18,21,22,1,22,0,0,85,1,22,0,41,22,3,2,94,0,7,22,30,21,0,2,27,21,21,40,39,21,21,1,42,20,0,1,25,20,20,4,135,22,27,0,21,20,0,0,2,22,0,0,78,250,10,0,85,9,22,0,135,22,2,0,19,9,0,0,1,0,1,0,25,3,3,1,33,22,3,26,120,22,223,255,120,0,114,254,2,20,0,0,68,237,6,0,135,22,0,0,20,0,0,0,1,20,232,3,134,22,0,0,116,82,1,0,20,0,0,0,1,0,0,0,119,0,104,254,137,14,0,0,139,0,0,0,140,1,26,0,0,0,0,0,2,19,0,0,224,128,7,0,2,20,0,0,248,0,0,0,2,21,0,0,244,197,6,0,1,16,0,0,136,22,0,0,0,17,22,0,136,22,0,0,25,22,22,96,137,22,0,0,25,13,17,88,25,12,17,80,25,11,17,72,25,10,17,64,25,9,17,56,25,8,17,48,25,7,17,40,25,15,17,32,25,14,17,16,0,5,17,0,135,22,44,0,134,22,0,0,120,73,1,0,2,23,0,0,31,197,6,0,135,22,42,0,23,0,0,0,1,1,0,0,1,4,0,0,1,2,0,0,2,22,0,0,144,138,7,0,27,23,2,44,3,22,22,23,106,22,22,16,45,22,22,4,68,111,0,0,1,16,4,0,119,0,4,0,25,2,2,1,35,22,2,10,120,22,245,255,32,22,16,4,121,22,26,0,1,16,0,0,2,22,0,0,144,138,7,0,27,23,2,44,3,3,22,23,82,23,3,0,121,23,19,0,134,23,0,0,120,73,1,0,2,23,0,0,144,138,7,0,27,22,2,44,3,6,23,22,106,18,6,12,106,2,6,4,116,5,3,0,109,5,4,18,109,5,8,2,25,23,6,24,109,5,12,23,2,22,0,0,83,197,6,0,135,23,2,0,22,5,0,0,25,1,1,1,25,4,4,1,33,23,4,10,120,23,214,255,134,23,0,0,120,73,1,0,34,23,1,10,121,23,11,0,2,22,0,0,114,197,6,0,135,23,0,0,22,0,0,0,134,23,0,0,120,73,1,0,34,23,1,9,121,23,3,0,25,1,1,1,119,0,247,255,1,22,10,0,135,23,30,0,22,0,0,0,134,23,0,0,120,73,1,0,2,22,0,0,150,197,6,0,135,23,42,0,22,0,0,0,32,6,0,0,1,0,0,0,1,1,0,0,1,2,0,0,5,23,2,20,3,23,19,23,106,23,23,16,45,23,23,0,80,112,0,0,1,16,14,0,119,0,4,0,25,2,2,1,35,23,2,10,120,23,247,255,32,23,16,14,121,23,2,1,1,16,0,0,5,23,2,20,3,3,19,23,82,23,3,0,121,23,253,0,25,1,1,1,134,23,0,0,120,73,1,0,5,23,2,20,3,18,19,23,106,5,18,12,116,14,3,0,109,14,4,5,25,22,18,20,109,14,8,22,2,23,0,0,188,197,6,0,135,22,2,0,23,14,0,0,106,3,18,4,1,22,0,1,47,22,3,22,132,113,0,0,2,22,0,0,128,136,5,0,27,23,3,40,94,3,22,23,78,22,3,0,26,22,22,97,41,22,22,24,42,22,22,24,0,18,22,0,1,22,255,0,19,22,18,22,43,22,22,1,41,23,18,7,1,24,255,0,19,23,23,24,20,22,22,23,41,22,22,24,42,22,22,24,1,23,0,0,1,24,11,0,138,22,23,24,76,113,0,0,64,113,0,0,88,113,0,0,64,113,0,0,92,113,0,0,64,113,0,0,64,113,0,0,96,113,0,0,64,113,0,0,64,113,0,0,100,113,0,0,2,4,0,0,185,70,7,0,119,0,8,0,2,4,0,0,208,197,6,0,119,0,5,0,119,0,253,255,119,0,252,255,119,0,251,255,119,0,250,255,85,15,4,0,109,15,4,3,2,23,0,0,211,197,6,0,135,22,2,0,23,15,0,0,119,0,12,0,2,22,0,0,96,134,5,0,1,23,0,1,4,23,3,23,41,23,23,2,3,22,22,23,116,7,22,0,2,23,0,0,51,31,7,0,135,22,2,0,23,7,0,0,2,22,0,0,112,128,5,0,5,23,2,20,3,23,19,23,106,23,23,8,41,23,23,2,3,22,22,23,116,8,22,0,2,23,0,0,227,197,6,0,135,22,2,0,23,8,0,0,120,6,162,0,1,4,1,0,1,5,0,0,5,22,2,20,3,22,19,22,25,22,22,40,41,23,5,3,3,3,22,23,82,23,3,0,45,23,4,23,80,116,0,0,134,23,0,0,120,73,1,0,2,23,0,0,0,130,5,0,82,22,3,0,41,22,22,2,94,18,23,22,25,23,5,97,85,9,23,0,109,9,4,18,2,22,0,0,235,197,6,0,135,23,2,0,22,9,0,0,82,23,3,0,1,22,22,0,1,24,62,0,138,23,22,24,168,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,172,115,0,0,228,115,0,0,28,116,0,0,32,116,0,0,76,115,0,0,76,115,0,0,36,116,0,0,40,116,0,0,44,116,0,0,48,116,0,0,52,116,0,0,56,116,0,0,60,116,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,76,115,0,0,64,116,0,0,5,22,2,20,3,22,19,22,25,22,22,40,41,24,5,3,3,22,22,24,106,3,22,4,1,22,0,0,47,22,22,3,136,115,0,0,85,12,3,0,2,24,0,0,251,197,6,0,135,22,2,0,24,12,0,0,119,0,48,0,34,22,3,0,121,22,46,0,85,13,3,0,2,24,0,0,0,198,6,0,135,22,2,0,24,13,0,0,119,0,40,0,119,0,39,0,2,22,0,0,80,131,5,0,5,24,2,20,3,24,19,24,25,24,24,40,41,25,5,3,3,24,24,25,106,24,24,4,41,24,24,2,3,22,22,24,116,11,22,0,135,22,2,0,21,11,0,0,119,0,25,0,2,22,0,0,192,131,5,0,5,24,2,20,3,24,19,24,25,24,24,40,41,25,5,3,3,24,24,25,106,24,24,4,41,24,24,2,3,22,22,24,116,10,22,0,135,22,2,0,21,10,0,0,119,0,11,0,119,0,10,0,119,0,9,0,119,0,8,0,119,0,7,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,1,22,10,0,135,23,30,0,22,0,0,0,25,5,5,1,33,23,5,26,120,23,101,255,25,4,4,1,33,23,4,84,120,23,97,255,25,0,0,1,33,23,0,10,120,23,240,254,34,23,1,10,121,23,11,0,134,23,0,0,120,73,1,0,2,22,0,0,4,198,6,0,135,23,0,0,22,0,0,0,34,23,1,9,121,23,3,0,25,1,1,1,119,0,247,255,137,17,0,0,139,0,0,0,140,0,15,0,0,0,0,0,2,8,0,0,80,140,7,0,2,9,0,0,15,212,6,0,2,10,0,0,0,125,5,0,135,11,45,0,1,0,0,0,41,11,0,2,94,1,10,11,121,1,3,0,135,11,0,0,1,0,0,0,135,11,0,0,9,0,0,0,25,0,0,1,33,11,0,23,120,11,247,255,1,12,1,0,1,13,24,0,135,11,27,0,12,13,0,0,2,13,0,0,226,6,7,0,135,11,42,0,13,0,0,0,2,13,0,0,237,6,7,0,135,11,0,0,13,0,0,0,2,13,0,0,0,7,7,0,135,11,42,0,13,0,0,0,2,13,0,0,7,7,7,0,135,11,0,0,13,0,0,0,2,13,0,0,23,7,7,0,135,11,42,0,13,0,0,0,2,13,0,0,30,7,7,0,135,11,0,0,13,0,0,0,1,13,1,0,1,12,23,0,135,11,27,0,13,12,0,0,2,12,0,0,48,7,7,0,135,11,0,0,12,0,0,0,1,0,0,0,1,11,0,0,15,1,11,0,34,2,0,19,134,3,0,0,168,81,1,0,1,11,1,0,1,12,27,0,138,3,11,12,32,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,40,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,48,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,28,118,0,0,56,118,0,0,119,0,9,0,1,2,14,0,119,0,34,0,1,2,23,0,119,0,90,0,1,2,10,0,119,0,30,0,1,2,9,0,119,0,86,0,32,11,3,8,19,11,1,11,121,11,3,0,1,2,18,0,119,0,9,0,26,11,3,32,35,11,11,95,19,11,2,11,121,11,3,0,1,2,20,0,119,0,3,0,135,11,43,0,119,0,203,255,32,11,2,18,121,11,6,0,1,12,8,0,135,11,30,0,12,0,0,0,26,0,0,1,119,0,193,255,32,11,2,20,121,11,191,255,135,11,30,0,3,0,0,0,95,8,0,3,25,0,0,1,119,0,186,255,32,11,2,10,121,11,28,0,1,12,0,0,134,11,0,0,152,110,0,0,12,0,0,0,135,11,14,0,2,12,0,0,27,198,6,0,135,11,0,0,12,0,0,0,2,12,0,0,202,196,6,0,135,11,42,0,12,0,0,0,2,12,0,0,208,196,6,0,135,11,0,0,12,0,0,0,134,11,0,0,168,81,1,0,33,11,11,10,121,11,114,255,135,11,43,0,134,11,0,0,168,81,1,0,33,11,11,10,120,11,252,255,119,0,108,255,32,11,2,14,121,11,106,255,1,12,1,0,134,11,0,0,152,110,0,0,12,0,0,0,135,11,14,0,2,12,0,0,27,198,6,0,135,11,0,0,12,0,0,0,2,12,0,0,202,196,6,0,135,11,42,0,12,0,0,0,2,12,0,0,208,196,6,0,135,11,0,0,12,0,0,0,134,11,0,0,168,81,1,0,33,11,11,10,121,11,85,255,135,11,43,0,134,11,0,0,168,81,1,0,33,11,11,10,120,11,252,255,119,0,79,255,32,11,2,9,121,11,5,0,1,11,0,0,83,8,11,0,1,0,255,255,119,0,26,0,32,11,2,23,121,11,24,0,1,12,0,0,95,8,0,12,1,12,1,0,47,12,12,0,12,120,0,0,26,12,0,2,3,1,8,12,78,12,1,0,32,12,12,61,121,12,11,0,26,12,0,1,90,12,8,12,26,0,12,48,35,12,0,10,121,12,4,0,1,12,0,0,83,1,12,0,119,0,6,0,1,0,255,255],eb+20480);HEAPU8.set([119,0,4,0,1,0,255,255,119,0,2,0,1,0,255,255,2,12,0,0,212,127,9,0,1,11,0,0,85,12,11,0,1,1,0,0,2,12,0,0,144,138,7,0,27,13,1,44,3,12,12,13,25,12,12,24,135,11,46,0,12,8,0,0,120,11,10,0,1,11,0,0,2,12,0,0,144,138,7,0,27,13,1,44,94,12,12,13,47,11,11,12,104,120,0,0,1,2,30,0,119,0,8,0,25,1,1,1,1,11,10,0,50,11,11,1,128,120,0,0,1,1,0,0,119,0,2,0,119,0,233,255,32,11,2,30,121,11,10,0,2,11,0,0,144,138,7,0,27,12,1,44,3,11,11,12,106,11,11,12,25,1,11,1,2,11,0,0,212,127,9,0,85,11,1,0,1,11,255,255,47,11,11,0,204,120,0,0,2,11,0,0,212,127,9,0,85,11,0,0,119,0,2,0,0,0,1,0,1,11,9,0,47,11,11,0,248,120,0,0,2,11,0,0,212,127,9,0,1,12,9,0,85,11,12,0,1,0,9,0,1,2,37,0,119,0,5,0,1,12,0,0,47,12,12,0,8,121,0,0,1,2,37,0,32,12,2,37,121,12,64,0,25,2,0,6,25,3,0,10,25,4,0,7,1,1,0,0,2,12,0,0,128,136,5,0,27,11,1,40,3,5,12,11,25,6,5,32,82,11,6,0,5,7,11,2,34,12,7,250,121,12,4,0,1,12,255,127,0,11,12,0,119,0,4,0,25,12,7,1,28,12,12,6,0,11,12,0,85,6,11,0,25,6,5,12,82,12,6,0,5,11,12,2,25,11,11,1,28,7,11,5,34,12,7,127,1,13,127,0,125,11,12,7,13,0,0,0,85,6,11,0,25,6,5,28,82,11,6,0,27,11,11,10,6,7,11,3,1,13,255,127,15,13,7,13,1,12,255,127,125,11,13,7,12,0,0,0,85,6,11,0,25,6,5,8,82,11,6,0,4,7,11,0,1,12,129,255,15,12,12,7,1,13,129,255,125,11,12,7,13,0,0,0,85,6,11,0,25,5,5,36,82,11,5,0,27,11,11,7,6,11,11,4,25,6,11,1,1,13,1,0,15,13,13,6,1,12,1,0,125,11,13,6,12,0,0,0,85,5,11,0,25,1,1,1,33,11,1,65,120,11,198,255,1,0,0,0,2,11,0,0,0,127,9,0,41,12,0,2,1,13,12,0,97,11,12,13,25,0,0,1,33,13,0,6,120,13,249,255,2,13,0,0,28,127,9,0,1,12,10,0,85,13,12,0,2,12,0,0,24,127,9,0,1,13,10,0,85,12,13,0,2,13,0,0,40,127,9,0,1,12,1,0,85,13,12,0,2,12,0,0,64,127,9,0,1,13,1,0,85,12,13,0,2,13,0,0,60,127,9,0,1,12,1,0,85,13,12,0,2,12,0,0,96,127,9,0,1,13,16,0,85,12,13,0,2,13,0,0,72,127,9,0,1,12,96,0,85,13,12,0,2,12,0,0,88,127,9,0,1,13,255,255,85,12,13,0,2,13,0,0,80,127,9,0,1,12,255,255,85,13,12,0,2,12,0,0,252,127,9,0,1,13,255,255,85,12,13,0,2,13,0,0,212,127,9,0,82,13,13,0,120,13,25,0,2,13,0,0,144,128,9,0,1,12,25,0,85,13,12,0,2,12,0,0,0,129,9,0,1,13,0,0,85,12,13,0,2,13,0,0,80,127,9,0,1,12,0,0,85,13,12,0,2,12,0,0,148,128,9,0,1,13,31,0,85,12,13,0,2,13,0,0,4,129,9,0,1,12,0,0,85,13,12,0,2,12,0,0,88,127,9,0,1,13,1,0,85,12,13,0,2,13,0,0,52,130,9,0,1,12,1,0,85,13,12,0,2,12,0,0,48,130,9,0,1,13,1,0,85,12,13,0,2,13,0,0,36,130,9,0,1,12,1,0,85,13,12,0,2,13,0,0,208,130,9,0,2,11,0,0,160,188,5,0,1,14,76,1,135,12,47,0,13,11,14,0,2,12,0,0,88,225,10,0,1,14,80,0,85,12,14,0,1,14,65,0,135,7,1,0,14,0,0,0,2,14,0,0,72,225,10,0,85,14,7,0,1,14,15,0,135,7,1,0,14,0,0,0,2,14,0,0,76,225,10,0,85,14,7,0,2,14,0,0,96,225,10,0,1,12,1,0,85,14,12,0,135,12,19,0,78,12,8,0,120,12,12,0,2,0,0,0,80,140,7,0,2,1,0,0,73,7,7,0,25,2,0,10,78,12,1,0,83,0,12,0,25,0,0,1,25,1,1,1,54,12,0,2,252,123,0,0,139,0,0,0,140,1,22,0,0,0,0,0,2,16,0,0,80,131,5,0,2,17,0,0,192,131,5,0,2,18,0,0,48,132,5,0,1,9,0,0,136,19,0,0,0,14,19,0,136,19,0,0,1,20,48,2,3,19,19,20,137,19,0,0,1,19,40,2,3,13,14,19,1,19,32,2,3,11,14,19,1,19,24,2,3,10,14,19,1,19,16,2,3,8,14,19,1,19,8,2,3,7,14,19,1,19,0,2,3,6,14,19,0,12,14,0,1,20,4,0,135,19,48,0,20,0,0,0,2,19,0,0,140,225,10,0,1,20,0,0,85,19,20,0,2,20,0,0,144,225,10,0,1,19,0,0,85,20,19,0,1,1,0,0,41,19,1,2,1,20,38,0,97,12,19,20,25,1,1,1,33,20,1,39,120,20,251,255,1,3,0,0,1,5,0,0,2,20,0,0,48,130,9,0,41,19,5,2,94,20,20,19,121,20,29,0,41,20,5,2,94,1,18,20,1,2,0,0,41,20,2,2,3,4,12,20,82,19,4,0,41,19,19,2,94,19,18,19,1,21,3,0,135,20,49,0,19,1,21,0,34,20,20,0,121,20,3,0,25,2,2,1,119,0,245,255,25,1,3,1,47,20,2,3,84,125,0,0,0,15,3,0,26,3,3,1,41,20,15,2,41,21,3,2,94,21,12,21,97,12,20,21,54,21,2,3,52,125,0,0,85,4,5,0,0,3,1,0,25,5,5,1,33,21,5,38,120,21,221,255,32,2,0,255,121,2,12,0,1,20,79,0,25,19,3,2,28,19,19,3,25,19,19,4,135,21,50,0,20,19,0,0,1,19,1,0,1,20,1,0,135,21,27,0,19,20,0,0,119,0,2,0,135,21,45,0,2,20,0,0,246,210,6,0,135,21,0,0,20,0,0,0,120,3,8,0,2,20,0,0,41,211,6,0,135,21,2,0,20,6,0,0,134,21,0,0,244,76,1,0,119,0,24,0,1,21,0,0,47,21,21,3,44,126,0,0,1,1,0,0,41,21,1,2,94,6,12,21,2,21,0,0,208,132,5,0,41,20,6,2,94,15,21,20,41,21,6,2,3,21,18,21,116,7,21,0,109,7,4,15,2,20,0,0,45,211,6,0,135,21,2,0,20,7,0,0,134,21,0,0,244,76,1,0,25,1,1,1,53,21,1,3,224,125,0,0,121,2,10,0,134,21,0,0,244,76,1,0,1,20,0,0,134,21,0,0,196,57,1,0,20,0,0,0,135,21,51,0,135,21,5,0,119,0,219,0,2,21,0,0,140,225,10,0,2,20,0,0,140,225,10,0,82,20,20,0,25,20,20,3,85,21,20,0,2,20,0,0,144,225,10,0,82,20,20,0,121,20,7,0,2,20,0,0,144,225,10,0,1,21,2,0,85,20,21,0,134,21,0,0,244,76,1,0,1,1,0,0,41,21,1,2,1,20,24,0,97,12,21,20,25,1,1,1,33,20,1,25,120,20,251,255,1,2,0,0,1,5,0,0,2,20,0,0,112,129,9,0,41,21,5,2,94,20,20,21,121,20,28,0,41,20,5,2,94,1,16,20,1,3,0,0,41,20,3,2,3,4,12,20,82,21,4,0,41,21,21,2,94,21,16,21,135,20,46,0,21,1,0,0,34,20,20,0,121,20,3,0,25,3,3,1,119,0,246,255,25,1,2,1,47,20,3,2,52,127,0,0,0,15,2,0,26,2,2,1,41,20,15,2,41,21,2,2,94,21,12,21,97,12,20,21,54,21,3,2,20,127,0,0,85,4,5,0,0,2,1,0,25,5,5,1,33,21,5,24,120,21,222,255,2,20,0,0,55,211,6,0,135,21,0,0,20,0,0,0,2,21,0,0,144,225,10,0,1,20,0,0,85,21,20,0,120,2,9,0,2,21,0,0,41,211,6,0,135,20,2,0,21,8,0,0,134,20,0,0,244,76,1,0,1,9,41,0,119,0,27,0,36,20,2,0,121,20,9,0,2,20,0,0,140,225,10,0,2,21,0,0,140,225,10,0,82,21,21,0,25,21,21,3,85,20,21,0,119,0,17,0,1,1,0,0,41,21,1,2,94,21,12,21,41,21,21,2,3,21,16,21,116,10,21,0,2,20,0,0,106,211,6,0,135,21,2,0,20,10,0,0,134,21,0,0,244,76,1,0,25,1,1,1,53,21,1,2,184,127,0,0,1,9,41,0,32,21,9,41,121,21,18,0,2,21,0,0,144,225,10,0,82,15,21,0,2,21,0,0,140,225,10,0,2,20,0,0,140,225,10,0,82,20,20,0,25,20,20,3,85,21,20,0,121,15,7,0,2,20,0,0,144,225,10,0,1,21,2,0,85,20,21,0,134,21,0,0,244,76,1,0,1,1,0,0,41,21,1,2,1,20,24,0,97,12,21,20,25,1,1,1,33,20,1,25,120,20,251,255,1,2,0,0,1,5,0,0,2,20,0,0,208,129,9,0,41,21,5,2,94,20,20,21,121,20,28,0,41,20,5,2,94,1,17,20,1,3,0,0,41,20,3,2,3,4,12,20,82,21,4,0,41,21,21,2,94,21,17,21,135,20,46,0,21,1,0,0,34,20,20,0,121,20,3,0,25,3,3,1,119,0,246,255,25,1,2,1,47,20,3,2,220,128,0,0,0,15,2,0,26,2,2,1,41,20,15,2,41,21,2,2,94,21,12,21,97,12,20,21,54,21,3,2,188,128,0,0,85,4,5,0,0,2,1,0,25,5,5,1,33,21,5,24,120,21,222,255,2,20,0,0,112,211,6,0,135,21,0,0,20,0,0,0,2,21,0,0,144,225,10,0,1,20,0,0,85,21,20,0,120,2,8,0,2,21,0,0,41,211,6,0,135,20,2,0,21,11,0,0,134,20,0,0,244,76,1,0,119,0,19,0,1,20,0,0,47,20,20,2,120,129,0,0,1,1,0,0,41,20,1,2,94,20,12,20,41,20,20,2,3,20,17,20,116,13,20,0,2,21,0,0,106,211,6,0,135,20,2,0,21,13,0,0,134,20,0,0,244,76,1,0,25,1,1,1,53,20,1,2,64,129,0,0,2,20,0,0,140,225,10,0,82,20,20,0,121,20,12,0,2,20,0,0,144,225,10,0,82,20,20,0,121,20,4,0,1,21,10,0,135,20,30,0,21,0,0,0,1,21,0,0,134,20,0,0,196,57,1,0,21,0,0,0,135,20,51,0,135,20,5,0,137,14,0,0,139,0,0,0,140,4,22,0,0,0,0,0,2,14,0,0,14,99,1,0,2,15,0,0,80,184,2,0,2,16,0,0,78,250,10,0,1,10,0,0,136,17,0,0,0,13,17,0,136,17,0,0,25,17,17,16,137,17,0,0,25,12,13,8,0,6,13,0,2,17,0,0,72,225,10,0,82,17,17,0,13,17,17,2,2,18,0,0,76,225,10,0,82,18,18,0,13,18,18,3,19,17,17,18,121,17,5,0,134,17,0,0,92,171,0,0,0,1,0,0,119,0,60,2,2,17,0,0,208,170,9,0,27,18,2,68,3,17,17,18,41,18,3,2,3,11,17,18,82,7,11,0,1,18,4,0,1,17,72,0,138,7,18,17,152,132,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,132,131,0,0,156,132,0,0,2,18,0,0,0,153,9,0,27,17,0,68,3,18,18,17,41,17,1,2,3,5,18,17,82,4,5,0,2,17,0,0,0,153,9,0,27,18,2,68,3,17,17,18,41,18,3,2,3,8,17,18,85,8,4,0,32,18,7,80,121,18,51,0,1,18,59,0,47,18,18,4,12,132,0,0,135,18,14,0,2,18,0,0,128,136,5,0,27,17,4,40,3,18,18,17,116,6,18,0,2,17,0,0,74,248,6,0,135,18,2,0,17,6,0,0,135,18,52,0,2,3,0,0,1,9,80,0,1,10,11,0,119,0,141,0,1,18,0,0,85,8,18,0,2,18,0,0,224,92,10,0,27,17,2,68,3,18,18,17,41,17,3,2,1,19,1,0,97,18,17,19,2,19,0,0,48,135,9,0,27,17,0,68,3,19,19,17,41,17,1,2,94,4,19,17,2,19,0,0,48,135,9,0,27,17,2,68,3,19,19,17,41,17,3,2,34,20,4,0,1,21,1,0,125,18,20,21,4,0,0,0,97,19,17,18,1,18,0,0,85,5,18,0,1,4,0,0,2,5,0,0,78,250,10,0,1,6,0,0,119,0,109,0,0,9,7,0,1,10,11,0,119,0,106,0,119,0,1,0,2,18,0,0,0,153,9,0,27,17,0,68,3,18,18,17,41,17,1,2,3,5,18,17,82,4,5,0,1,17,1,0,1,18,64,0,138,4,17,18,212,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,216,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,220,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,224,133,0,0,196,133,0,0,228,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,196,133,0,0,232,133,0,0,236,133,0,0,240,133,0,0,196,133,0,0,196,133,0,0,244,133,0,0,248,133,0,0,252,133,0,0,0,134,0,0,4,134,0,0,8,134,0,0,12,134,0,0,16,134,0,0,1,17,0,0,85,5,17,0,1,4,0,0,119,0,17,0,119,0,16,0,119,0,15,0,119,0,14,0,119,0,13,0,119,0,12,0,119,0,11,0,119,0,10,0,119,0,9,0,119,0,8,0,119,0,7,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,2,17,0,0,0,153,9,0,27,18,2,68,3,17,17,18,41,18,3,2,3,8,17,18,85,8,4,0,0,9,7,0,1,10,11,0,119,0,1,0,32,18,10,11,121,18,255,0,2,18,0,0,224,92,10,0,27,17,2,68,3,18,18,17,41,17,3,2,1,19,1,0,97,18,17,19,2,19,0,0,48,135,9,0,27,17,0,68,3,19,19,17,41,17,1,2,94,6,19,17,2,19,0,0,48,135,9,0,27,17,2,68,3,19,19,17,41,17,3,2,3,7,19,17,34,17,6,0,1,19,1,0,125,6,17,19,6,0,0,0,85,7,6,0,1,19,0,0,85,5,19,0,1,19,13,0,1,17,11,0,138,4,19,17,232,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,228,134,0,0,8,136,0,0,119,0,90,0,1,19,18,0,1,17,55,0,138,9,19,17,216,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,220,135,0,0,224,135,0,0,228,135,0,0,232,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,208,135,0,0,236,135,0,0,240,135,0,0,244,135,0,0,1,4,13,0,119,0,30,0,119,0,8,0,119,0,7,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,1,19,0,0,85,11,19,0,1,4,13,0,119,0,18,0,2,19,0,0,64,225,10,0,82,19,19,0,38,19,19,1,32,19,19,0,2,17,0,0,56,140,5,0,82,17,17,0,15,17,6,17,19,19,19,17,121,19,5,0,25,19,6,1,85,7,19,0,1,4,23,0,119,0,3,0,1,4,23,0,119,0,1,0,1,17,9,0,1,19,66,0,138,9,17,19,112,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,148,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,96,137,0,0,240,137,0,0,2,5,0,0,78,250,10,0,1,6,0,0,119,0,52,0,82,19,8,0,135,17,53,0,19,0,0,0,1,17,0,0,85,8,17,0,2,5,0,0,78,250,10,0,1,6,3,0,119,0,43,0,1,19,10,0,135,11,1,0,19,0,0,0,82,19,7,0,2,17,0,0,68,225,10,0,82,17,17,0,3,17,17,11,4,11,19,17,85,7,11,0,1,17,1,0,49,17,17,11,216,137,0,0,2,5,0,0,109,248,6,0,1,6,1,0,119,0,26,0,1,17,0,0,85,8,17,0,2,5,0,0,109,248,6,0,1,6,2,0,119,0,20,0,1,17,6,0,135,11,1,0,17,0,0,0,82,17,7,0,4,11,17,11,85,7,11,0,1,17,1,0,49,17,17,11,36,138,0,0,2,5,0,0,102,248,6,0,1,6,1,0,119,0,7,0,1,17,0,0,85,8,17,0,2,5,0,0,102,248,6,0,1,6,2,0,119,0,1,0,2,17,0,0,112,127,9,0,82,17,17,0,120,17,56,0,2,17,0,0,112,206,9,0,27,19,2,68,3,17,17,19,41,19,3,2,3,7,17,19,32,19,6,0,82,17,7,0,38,17,17,1,32,17,17,0,20,19,19,17,120,19,29,0,135,19,14,0,38,19,6,3,1,17,1,0,1,18,3,0,138,19,17,18,160,138,0,0,172,138,0,0,184,138,0,0,119,0,20,0,2,6,0,0,170,248,6,0,119,0,9,0,2,6,0,0,118,248,6,0,119,0,6,0,2,6,0,0,144,248,6,0,2,5,0,0,78,250,10,0,119,0,1,0,2,19,0,0,128,136,5,0,27,17,4,40,94,11,19,17,85,12,5,0,109,12,4,11,135,19,2,0,6,12,0,0,2,19,0,0,112,206,9,0,27,17,0,68,3,19,19,17,41,17,1,2,94,19,19,17,38,19,19,1,121,19,3,0,135,19,29,0,0,1,0,0,82,19,7,0,38,19,19,1,121,19,3,0,135,19,29,0,2,3,0,0,137,13,0,0,139,0,0,0,140,0,12,0,0,0,0,0,2,6,0,0,152,8,0,0,2,7,0,0,193,95,2,0,2,8,0,0,195,95,2,0,136,9,0,0,0,5,9,0,136,9,0,0,25,9,9,16,137,9,0,0,0,4,5,0,135,9,45,0,2,10,0,0,167,237,6,0,135,9,0,0,10,0,0,0,2,10,0,0,243,237,6,0,135,9,0,0,10,0,0,0,2,10,0,0,48,238,6,0,135,9,0,0,10,0,0,0,2,9,0,0,32,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,94,238,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,36,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,138,238,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,40,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,182,238,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,44,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,226,238,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,48,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,14,239,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,52,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,58,239,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,56,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,102,239,6,0,135,9,0,0,10,0,0,0,1,10,10,0,135,9,30,0,10,0,0,0,2,9,0,0,60,132,9,0,82,9,9,0,120,9,5,0,2,10,0,0,146,239,6,0,135,9,0,0,10,0,0,0,2,10,0,0,190,239,6,0,135,9,0,0,10,0,0,0,1,10,30,0,1,11,18,0,135,9,27,0,10,11,0,0,2,9,0,0,32,127,9,0,82,9,9,0,85,4,9,0,2,11,0,0,227,239,6,0,135,9,2,0,11,4,0,0,1,11,1,0,1,10,20,0,135,9,27,0,11,10,0,0,2,10,0,0,13,240,6,0,135,9,0,0,10,0,0,0,2,10,0,0,178,211,6,0,135,9,42,0,10,0,0,0,2,10,0,0,44,231,6,0,135,9,0,0,10,0,0,0,134,0,0,0,168,81,1,0,32,9,0,27,120,9,33,1,26,2,0,97,35,9,2,8,120,9,7,0,135,9,43,0,134,0,0,0,168,81,1,0,32,9,0,27,121,9,249,255,119,0,24,1,135,9,30,0,0,0,0,0,2,9,0,0,32,127,9,0,82,1,9,0,1,9,250,0,47,9,1,9,228,141,0,0,2,10,0,0,249,233,6,0,135,9,0,0,10,0,0,0,134,9,0,0,116,82,1,0,6,0,0,0,119,0,98,255,2,9,0,0,32,132,9,0,41,10,2,2,3,3,9,10,82,10,3,0,121,10,9,0,2,9,0,0,42,240,6,0,135,10,0,0,9,0,0,0,134,10,0,0,116,82,1,0,6,0,0,0,119,0,84,255,2,10,0,0,32,127,9,0,1,9,250,0,4,9,1,9,85,10,9,0,1,9,97,0,1,10,8,0,138,0,9,10,100,142,0,0,192,142,0,0,92,143,0,0,156,143,0,0,28,144,0,0,92,144,0,0,160,144,0,0,224,144,0,0,1,0,0,0,119,0,181,0,2,9,0,0,0,127,9,0,2,10,0,0,0,127,9,0,82,10,10,0,25,10,10,2,85,9,10,0,2,10,0,0,12,127,9,0,2,9,0,0,12,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,2,10,0,0,75,240,6,0,135,9,0,0,10,0,0,0,134,9,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,158,0,2,9,0,0,32,132,9,0,82,9,9,0,120,9,13,0,2,9,0,0,32,127,9,0,85,9,1,0,2,10,0,0,95,240,6,0,135,9,0,0,10,0,0,0,134,9,0,0,116,82,1,0,6,0,0,0,1,0,240,216,119,0,142,0,2,9,0,0,0,127,9,0,2,10,0,0,0,127,9,0,82,10,10,0,25,10,10,2,85,9,10,0,2,10,0,0,12,127,9,0,2,9,0,0,12,127,9,0,82,9,9,0,25,9,9,2,85,10,9,0,2,10,0,0,159,240,6,0,135,9,0,0,10,0,0,0,134,9,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,119,0,2,9,0,0,4,127,9,0,2,10,0,0,4,127,9,0,82,10,10,0,25,10,10,2,85,9,10,0,2,9,0,0,184,240,6,0,135,10,0,0,9,0,0,0,134,10,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,103,0,2,10,0,0,40,132,9,0,82,10,10,0,120,10,13,0,2,10,0,0,32,127,9,0,85,10,1,0,2,9,0,0,232,240,6,0,135,10,0,0,9,0,0,0,134,10,0,0,116,82,1,0,6,0,0,0,1,0,240,216,119,0,87,0,2,10,0,0,4,127,9,0,2,9,0,0,4,127,9,0,82,9,9,0,25,9,9,2,85,10,9,0,2,10,0,0,46,241,6,0,135,9,0,0,10,0,0,0,134,9,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,71,0,2,9,0,0,20,127,9,0,2,10,0,0,20,127,9,0,82,10,10,0,25,10,10,3,85,9,10,0,2,9,0,0,94,241,6,0,135,10,0,0,9,0,0,0,134,10,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,55,0,2,10,0,0,8,127,9,0,2,9,0,0,8,127,9,0,82,9,9,0,25,9,9,2,85,10,9,0,2,10,0,0,128,241,6,0,135,9,0,0,10,0,0,0,1,10,184,11,134,9,0,0,116,82,1,0,10,0,0,0,1,0,0,0,119,0,38,0,2,9,0,0,16,127,9,0,2,10,0,0,16,127,9,0,82,10,10,0,25,10,10,3,85,9,10,0,2,9,0,0,195,241,6,0,135,10,0,0,9,0,0,0,134,10,0,0,116,82,1,0,6,0,0,0,1,0,0,0,119,0,22,0,2,10,0,0,4,127,9,0,2,9,0,0,4,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,2,10,0,0,219,241,6,0,135,9,0,0,10,0,0,0,2,10,0,0,35,242,6,0,135,9,0,0,10,0,0,0,1,10,136,19,134,9,0,0,116,82,1,0,10,0,0,0,1,0,0,0,119,0,1,0,2,9,0,0,112,193,5,0,41,10,2,2,94,9,9,10,27,9,9,100,3,0,9,0,1,9,0,0,47,9,9,0,252,145,0,0,2,9,0,0,64,225,10,0,2,10,0,0,64,225,10,0,82,10,10,0,3,10,10,0,85,9,10,0,82,10,3,0,25,10,10,1,85,3,10,0,2,10,0,0,28,127,9,0,2,9,0,0,24,127,9,0,82,9,9,0,85,10,9,0,2,9,0,0,64,127,9,0,2,10,0,0,60,127,9,0,82,10,10,0,85,9,10,0,2,10,0,0,112,127,9,0,82,10,10,0,121,10,5,0,2,10,0,0,112,127,9,0,1,9,1,0,85,10,9,0,2,9,0,0,120,127,9,0,82,9,9,0,121,9,5,0,2,9,0,0,120,127,9,0,1,10,1,0,85,9,10,0,134,10,0,0,140,76,1,0,0,0,0,0,119,0,91,254,135,10,5,0,137,5,0,0,139,0,0,0,140,0,16,0,0,0,0,0,2,9,0,0,176,184,5,0,2,10,0,0,64,75,76,0,2,11,0,0,170,3,0,0,1,2,0,0,136,12,0,0,0,8,12,0,136,12,0,0,25,12,12,16,137,12,0,0,25,7,8,8,0,6,8,0,2,12,0,0,176,225,10,0,1,13,0,0,85,12,13,0,135,13,45,0,2,12,0,0,111,229,6,0,135,13,0,0,12,0,0,0,2,12,0,0,189,229,6,0,135,13,0,0,12,0,0,0,2,12,0,0,4,230,6,0,135,13,0,0,12,0,0,0,2,12,0,0,76,230,6,0,135,13,0,0,12,0,0,0,2,12,0,0,145,230,6,0,135,13,0,0,12,0,0,0,2,12,0,0,197,230,6,0,135,13,0,0,12,0,0,0,135,13,54,0,1,12,1,0,1,14,21,0,135,13,41,0,12,14,0,0,2,14,0,0,254,230,6,0,135,13,0,0,14,0,0,0,2,14,0,0,178,211,6,0,135,13,42,0,14,0,0,0,2,14,0,0,44,231,6,0,135,13,0,0,14,0,0,0,134,0,0,0,168,81,1,0,33,13,0,27,121,13,54,1,26,4,0,97,35,13,4,26,121,13,45,1,2,13,0,0,144,128,9,0,41,14,4,2,3,5,13,14,82,3,5,0,1,14,0,0,1,13,54,0,138,3,14,13,32,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,72,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,136,148,0,0,216,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,24,148,0,0,40,149,0,0,76,149,0,0,80,149,0,0,84,149,0,0,1,2,12,0,119,0,79,0,85,6,0,0,2,13,0,0,194,212,6,0,135,14,2,0,13,6,0,0,1,13,232,3,134,14,0,0,116,82,1,0,13,0,0,0,119,0,69,0,2,13,0,0,64,225,10,0,82,13,13,0,27,13,13,7,28,13,13,100,27,14,13,236,2,13,0,0,80,195,0,0,3,1,14,13,1,13,16,39,15,13,13,1,1,14,16,39,125,1,13,1,14,0,0,0,1,2,25,0,119,0,53,0,2,14,0,0,112,129,9,0,2,13,0,0,0,129,9,0,41,12,4,2,94,13,13,12,41,13,13,2,94,14,14,13,120,14,10,0,2,13,0,0,56,231,6,0,135,14,0,0,13,0,0,0,1,13,208,7,134,14,0,0,116,82,1,0,13,0,0,0,119,0,35,0,1,2,12,0,119,0,33,0,2,14,0,0,208,129,9,0,2,13,0,0,0,129,9,0,41,12,4,2,94,13,13,12,41,13,13,2,94,14,14,13,120,14,10,0,2,13,0,0,56,231,6,0,135,14,0,0,13,0,0,0,1,13,208,7,134,14,0,0,116,82,1,0,13,0,0,0,119,0,15,0,1,2,12,0,119,0,13,0,2,14,0,0,0,129,9,0,41,13,4,2,94,14,14,13,1,13,255,0,19,14,14,13,27,1,14,20,1,2,25,0,119,0,4,0,119,0,247,255,119,0,246,255,119,0,245,255,32,14,2,12,121,14,65,0,1,2,0,0,1,1,0,0,27,14,1,12,3,14,9,14,106,14,14,4,52,14,14,3,152,149,0,0,25,1,1,1,1,14,83,0,50,14,14,1,148,149,0,0,1,2,18,0,119,0,2,0,119,0,245,255,32,14,2,18,121,14,11,0,1,2,0,0,2,13,0,0,101,231,6,0,135,14,0,0,13,0,0,0,1,13,232,3,134,14,0,0,116,82,1,0,13,0,0,0,119,0,39,0,2,14,0,0,0,129,9,0,41,13,4,2,94,2,14,13,26,14,3,41,35,14,14,2,121,14,8,0,3,14,2,1,27,14,14,12,94,14,9,14,41,14,14,1,0,1,14,0,1,2,25,0,119,0,25,0,27,14,1,12,94,14,9,14,43,13,2,31,40,13,13,1,22,14,14,13,0,1,14,0,1,14,0,0,47,14,14,2,92,150,0,0,27,14,1,14,3,3,14,11,28,1,3,10,49,14,10,3,64,150,0,0,1,2,25,0,119,0,9,0,1,14,1,0,47,14,14,2,84,150,0,0,26,2,2,1,119,0,245,255,1,2,25,0,119,0,2,0,1,2,25,0,32,14,2,25,121,14,70,0,1,2,0,0,85,7,0,0,109,7,4,1,2,13,0,0,155,231,6,0,135,14,2,0,13,7,0,0,134,14,0,0,236,77,1,0,33,14,14,121,121,14,10,0,2,13,0,0,222,231,6,0,135,14,0,0,13,0,0,0,1,13,244,1,134,14,0,0,116,82,1,0,13,0,0,0,119,0,50,0,2,13,0,0,42,223,6,0,135,14,0,0,13,0,0,0,2,14,0,0,32,127,9,0,2,13,0,0,32,127,9,0,82,13,13,0,3,13,13,1,85,14,13,0,2,13,0,0,80,127,9,0,82,13,13,0,45,13,13,4,8,151,0,0,2,13,0,0,80,127,9,0,1,14,255,255,85,13,14,0,2,14,0,0,88,127,9,0,82,14,14,0,45,14,14,4,44,151,0,0,2,14,0,0,88,127,9,0,1,13,255,255,85,14,13,0,2,13,0,0,252,127,9,0,82,13,13,0,45,13,13,4,80,151,0,0,2,13,0,0,252,127,9,0,1,14,255,255,85,13,14,0,82,13,5,0,2,12,0,0,0,129,9,0,41,15,4,2,94,12,12,15,135,14,55,0,13,12,0,0,1,14,0,0,85,5,14,0,135,14,56,0,4,0,0,0,1,12,1,0,1,13,21,0,135,14,41,0,12,13,0,0,2,13,0,0,254,230,6,0,135,14,0,0,13,0,0,0,2,13,0,0,178,211,6,0,135,14,42,0,13,0,0,0,2,13,0,0,44,231,6,0,135,14,0,0,13,0,0,0,134,0,0,0,168,81,1,0,32,14,0,27,121,14,211,254,119,0,7,0,135,14,43,0,134,0,0,0,168,81,1,0,32,14,0,27,121,14,205,254,119,0,1,0,135,14,19,0,135,14,5,0,137,8,0,0,139,0,0,0,140,0,18,0,0,0,0,0,2,11,0,0,194,196,6,0,2,12,0,0,149,0,0,0,2,13,0,0,62,216,6,0,136,14,0,0,0,10,14,0,136,14,0,0,25,14,14,64,137,14,0,0,25,5,10,40,25,7,10,32,25,9,10,24,25,8,10,16,25,6,10,8,0,4,10,0,25,0,10,48,25,2,10,44,2,14,0,0,72,225,10,0,82,1,14,0,85,0,1,0,2,14,0,0,76,225,10,0,82,3,14,0,85,2,3,0,2,15,0,0,154,215,6,0,135,14,0,0,15,0,0,0,2,15,0,0,229,210,6,0,135,14,42,0,15,0,0,0,2,15,0,0,192,215,6,0,135,14,0,0,15,0,0,0,25,15,1,1,25,16,3,1,135,14,27,0,15,16,0,0,134,14,0,0,168,81,1,0,1,16,10,0,1,17,154,0,138,14,16,17,48,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,52,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,60,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,68,155,0,0,40,155,0,0,40,155,0,0,252,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,0,156,0,0,40,155,0,0,4,156,0,0,8,156,0,0,12,156,0,0,40,155,0,0,16,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,20,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,24,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,28,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,32,156,0,0,40,155,0,0,36,156,0,0,40,156,0,0,44,156,0,0,40,155,0,0,48,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,52,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,56,156,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,40,155,0,0,60,156,0,0,76,156,0,0,92,156,0,0,108,156,0,0,124,156,0,0,140,156,0,0,156,156,0,0,172,156,0,0,40,155,0,0,40,155,0,0,188,156,0,0,192,156,0,0,196,156,0,0,200,156,0,0,204,156,0,0,208,156,0,0,212,156,0,0,216,156,0,0,135,16,43,0,119,0,96,255,119,0,3,0,1,1,4,0,119,0,105,0,1,1,5,0,119,0,103,0,135,16,14,0,2,15,0,0,211,215,6,0,135,16,0,0,15,0,0,0,2,15,0,0,218,215,6,0,135,16,42,0,15,0,0,0,2,15,0,0,227,215,6,0,135,16,0,0,15,0,0,0,135,16,0,0,11,0,0,0,2,15,0,0,34,198,6,0,135,16,42,0,15,0,0,0,2,15,0,0,9,215,6,0,135,16,0,0,15,0,0,0,2,15,0,0,202,196,6,0,135,16,42,0,15,0,0,0,2,15,0,0,14,216,6,0,135,16,0,0,15,0,0,0,135,16,0,0,11,0,0,0,2,15,0,0,55,216,6,0,135,16,42,0,15,0,0,0,135,16,0,0,13,0,0,0,82,15,0,0,25,15,15,1,82,17,2,0,25,17,17,1,135,16,27,0,15,17,0,0,119,0,45,255,119,0,36,0,119,0,27,0,119,0,38,0,119,0,17,0,119,0,28,0,119,0,39,0,119,0,18,0,119,0,9,0,119,0,28,0,119,0,19,0,119,0,30,0,119,0,9,0,119,0,20,0,119,0,31,0,119,0,10,0,119,0,1,0,1,17,6,0,135,16,57,0,0,2,17,0,119,0,25,255,1,17,3,0,135,16,57,0,0,2,17,0,119,0,21,255,1,17,5,0,135,16,57,0,0,2,17,0,119,0,17,255,1,17,4,0,135,16,57,0,0,2,17,0,119,0,13,255,1,17,2,0,135,16,57,0,0,2,17,0,119,0,9,255,1,17,8,0,135,16,57,0,0,2,17,0,119,0,5,255,1,17,1,0,135,16,57,0,0,2,17,0,119,0,1,255,1,17,7,0,135,16,57,0,0,2,17,0,119,0,253,254,119,0,224,255,119,0,227,255,119,0,230,255,119,0,233,255,119,0,236,255,119,0,239,255,119,0,242,255,119,0,245,255,32,14,1,4,121,14,12,0,2,16,0,0,72,225,10,0,82,16,16,0,25,16,16,1,2,17,0,0,76,225,10,0,82,17,17,0,25,17,17,1,135,14,27,0,16,17,0,0,119,0,113,0,32,14,1,5,121,14,111,0,135,14,14,0,82,3,0,0,82,1,2,0,2,14,0,0,72,225,10,0,82,14,14,0,13,14,3,14,2,17,0,0,76,225,10,0,82,17,17,0,13,17,1,17,19,14,14,17,121,14,9,0,2,14,0,0,80,140,7,0,85,4,14,0,2,17,0,0,71,216,6,0,135,14,2,0,17,4,0,0,119,0,90,0,2,14,0,0,0,153,9,0,27,17,3,68,3,14,14,17,41,17,1,2,94,2,14,17,2,14,0,0,112,206,9,0,27,17,3,68,3,14,14,17,41,17,1,2,94,0,14,17,32,14,2,0,38,17,0,2,32,17,17,0,20,14,14,17,120,14,34,0,2,14,0,0,112,135,5,0,41,17,2,2,94,0,14,17,2,14,0,0,72,28,6,0,82,1,14,0,46,14,0,1,28,158,0,0,32,14,0,73,2,17,0,0,28,128,9,0,82,17,17,0,34,17,17,1,19,14,14,17,120,14,12,0,2,14,0,0,128,136,5,0,27,17,2,40,94,9,14,17,85,8,0,0,109,8,4,9,2,17,0,0,108,216,6,0,135,14,2,0,17,8,0,0,119,0,46,0,85,6,1,0,2,17,0,0,78,216,6,0,135,14,2,0,17,6,0,0,119,0,40,0,2,14,0,0,208,170,9,0,27,17,3,68,3,14,14,17,41,17,1,2,94,1,14,17,38,14,0,1,120,14,6,0,2,17,0,0,116,216,6,0,135,14,2,0,17,5,0,0,119,0,27,0,121,1,18,0,2,14,0,0,176,128,5,0,41,17,1,2,94,0,14,17,33,14,0,46,121,14,12,0,2,14,0,0,0,130,5,0,41,17,1,2,94,8,14,17,85,9,0,0,109,9,4,8,2,17,0,0,108,216,6,0,135,14,2,0,17,9,0,0,119,0,9,0,2,14,0,0,72,28,6,0,82,14,14,0,85,7,14,0,2,17,0,0,78,216,6,0,135,14,2,0,17,7,0,0,137,10,0,0,139,0,0,0,140,6,20,0,0,0,0,0,2,13,0,0,208,170,9,0,2,14,0,0,0,153,9,0,2,15,0,0,82,184,2,0,1,12,0,0,26,6,4,1,3,11,4,2,49,16,6,11,92,159,0,0,26,10,3,1,3,8,3,1,15,9,8,10,120,9,12,0,0,7,10,0,27,16,7,68,3,16,13,16,41,17,6,2,1,18,0,0,97,16,17,18,47,18,7,8,68,159,0,0,25,7,7,1,119,0,248,255,119,0,1,0,47,18,6,11,88,159,0,0,25,6,6,1,119,0,241,255,119,0,1,0,1,18,0,0,47,18,18,2,192,159,0,0,3,8,3,1,1,18,0,0,15,9,18,1,0,7,4,0,121,9,15,0,0,6,3,0,27,18,6,68,3,18,13,18,41,17,7,2,1,16,21,0,97,18,17,16,27,16,6,68,3,16,14,16,41,17,7,2,1,18,0,0,97,16,17,18,25,6,6,1,54,18,6,8,128,159,0,0,25,7,7,1,54,18,7,11,120,159,0,0,25,6,4,1,26,9,11,1,47,18,6,9,20,160,0,0,25,8,3,1,3,18,3,1,26,10,18,1,15,11,8,10,121,11,10,0,0,7,8,0,27,18,7,68,3,18,13,18,41,17,6,2,1,16,0,0,97,18,17,16,25,7,7,1],eb+30720);HEAPU8.set([53,16,7,10,232,159,0,0,25,6,6,1,53,16,6,9,224,159,0,0,1,17,2,0,135,16,1,0,17,0,0,0,1,17,1,0,1,18,2,0,138,16,17,18,56,160,0,0,144,160,0,0,119,0,45,0,135,17,24,0,1,0,0,0,3,12,17,3,1,19,2,0,135,18,24,0,19,0,0,0,26,19,2,1,5,17,18,19,3,6,17,4,27,17,12,68,3,17,13,17,41,19,6,2,1,18,20,0,97,17,19,18,2,18,0,0,160,188,9,0,27,19,12,68,3,18,18,19,41,19,6,2,3,6,18,19,1,12,22,0,119,0,23,0,1,17,2,0,135,18,24,0,17,0,0,0,26,17,1,1,5,19,18,17,3,12,19,3,135,19,24,0,2,0,0,0,3,6,19,4,27,19,12,68,3,19,13,19,41,17,6,2,1,18,20,0,97,19,17,18,2,18,0,0,160,188,9,0,27,17,12,68,3,18,18,17,41,17,6,2,3,6,18,17,1,12,22,0,119,0,1,0,32,16,12,22,121,16,2,0,85,6,5,0,2,16,0,0,72,225,10,0,82,7,16,0,2,16,0,0,76,225,10,0,82,12,16,0,2,16,0,0,76,225,10,0,42,17,2,1,3,17,17,4,85,16,17,0,2,17,0,0,212,127,9,0,82,17,17,0,34,4,17,2,2,17,0,0,72,225,10,0,25,16,3,1,85,17,16,0,3,16,3,1,26,5,16,2,17,6,5,3,121,4,32,0,120,6,61,0,25,9,0,2,25,7,0,1,1,16,6,0,135,8,1,0,16,0,0,0,1,16,0,0,49,16,16,8,164,161,0,0,1,6,0,0,135,16,38,0,9,0,0,0,135,17,7,0,7,0,0,0,134,16,0,0,132,251,0,0,17,0,0,0,52,16,6,8,164,161,0,0,25,6,6,1,119,0,246,255,2,16,0,0,72,225,10,0,82,16,16,0,25,0,16,2,2,16,0,0,72,225,10,0,85,16,0,0,56,16,0,5,92,161,0,0,119,0,31,0,120,6,30,0,25,10,7,2,25,11,0,2,25,9,0,3,15,7,5,10,1,16,4,0,135,8,1,0,16,0,0,0,1,16,0,0,49,16,16,8,40,162,0,0,1,6,0,0,135,16,38,0,11,0,0,0,135,17,7,0,9,0,0,0,134,16,0,0,132,251,0,0,17,0,0,0,52,16,6,8,40,162,0,0,25,6,6,1,119,0,246,255,2,16,0,0,76,225,10,0,85,16,12,0,2,16,0,0,72,225,10,0,85,16,10,0,121,7,232,255,139,0,0,0,140,2,14,0,0,0,0,0,2,7,0,0,82,184,2,0,2,8,0,0,83,184,2,0,2,9,0,0,160,188,9,0,136,10,0,0,0,6,10,0,136,10,0,0,25,10,10,32,137,10,0,0,25,5,6,24,25,4,6,16,25,3,6,8,0,2,6,0,135,10,14,0,2,10,0,0,208,170,9,0,2,11,0,0,72,225,10,0,82,11,11,0,27,11,11,68,3,10,10,11,2,11,0,0,76,225,10,0,82,11,11,0,41,11,11,2,94,10,10,11,45,10,10,0,24,167,0,0,2,10,0,0,0,130,5,0,41,11,0,2,3,10,10,11,116,2,10,0,2,11,0,0,72,1,7,0,135,10,2,0,11,2,0,0,1,10,41,0,1,11,2,0,138,0,10,11,4,163,0,0,104,163,0,0,119,0,51,0,2,10,0,0,72,225,10,0,82,10,10,0,27,10,10,68,3,10,9,10,2,11,0,0,76,225,10,0,82,11,11,0,41,11,11,2,94,2,10,11,2,10,0,0,112,129,9,0,41,11,2,2,94,10,10,11,121,10,36,0,2,10,0,0,80,131,5,0,41,11,2,2,3,10,10,11,116,3,10,0,2,11,0,0,244,197,6,0,135,10,2,0,11,3,0,0,119,0,26,0,2,10,0,0,72,225,10,0,82,10,10,0,27,10,10,68,3,10,9,10,2,11,0,0,76,225,10,0,82,11,11,0,41,11,11,2,94,2,10,11,2,10,0,0,208,129,9,0,41,11,2,2,94,10,10,11,121,10,11,0,2,10,0,0,192,131,5,0,41,11,2,2,3,10,10,11,116,4,10,0,2,11,0,0,244,197,6,0,135,10,2,0,11,4,0,0,119,0,1,0,85,5,1,0,2,11,0,0,87,1,7,0,135,10,2,0,11,5,0,0,134,10,0,0,236,77,1,0,1,13,110,0,1,11,12,0,138,10,13,11,60,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,36,164,0,0,84,164,0,0,2,11,0,0,159,195,6,0,135,13,0,0,11,0,0,0,1,2,255,255,119,0,185,0,2,12,0,0,17,212,6,0,135,11,0,0,12,0,0,0,1,2,0,0,119,0,179,0,2,12,0,0,42,223,6,0,135,11,0,0,12,0,0,0,1,13,41,0,1,11,43,0,138,0,13,11,36,165,0,0,164,165,0,0,52,166,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,28,165,0,0,188,166,0,0,1,2,1,0,119,0,127,0,2,11,0,0,72,225,10,0,82,1,11,0,2,11,0,0,76,225,10,0,82,5,11,0,27,11,1,68,3,11,9,11,41,13,5,2,3,0,11,13,82,2,0,0,2,13,0,0,112,206,9,0,27,11,1,68,3,13,13,11,41,11,5,2,1,12,0,0,97,13,11,12,1,12,0,0,85,0,12,0,2,12,0,0,208,170,9,0,27,11,1,68,3,12,12,11,41,11,5,2,1,13,0,0,97,12,11,13,134,13,0,0,176,94,0,0,2,0,0,0,1,2,1,0,119,0,95,0,2,12,0,0,72,225,10,0,82,12,12,0,27,12,12,68,3,12,9,12,2,13,0,0,76,225,10,0,82,13,13,0,41,13,13,2,94,12,12,13,1,13,1,0,134,11,0,0,8,68,0,0,12,13,0,0,2,11,0,0,72,225,10,0,82,5,11,0,2,11,0,0,76,225,10,0,82,2,11,0,2,11,0,0,112,206,9,0,27,13,5,68,3,11,11,13,41,13,2,2,1,12,0,0,97,11,13,12,2,12,0,0,208,170,9,0,27,13,5,68,3,12,12,13,41,13,2,2,1,11,0,0,97,12,13,11,1,2,1,0,119,0,59,0,2,12,0,0,72,225,10,0,82,12,12,0,27,12,12,68,3,12,9,12,2,13,0,0,76,225,10,0,82,13,13,0,41,13,13,2,94,12,12,13,135,11,58,0,12,0,0,0,2,11,0,0,72,225,10,0,82,5,11,0,2,11,0,0,76,225,10,0,82,2,11,0,2,11,0,0,112,206,9,0,27,12,5,68,3,11,11,12,41,12,2,2,1,13,0,0,97,11,12,13,2,13,0,0,208,170,9,0,27,12,5,68,3,13,13,12,41,12,2,2,1,11,0,0,97,13,12,11,1,2,1,0,119,0,25,0,135,11,59,0,2,11,0,0,72,225,10,0,82,5,11,0,2,11,0,0,76,225,10,0,82,2,11,0,2,11,0,0,112,206,9,0,27,12,5,68,3,11,11,12,41,12,2,2,1,13,0,0,97,11,12,13,2,13,0,0,208,170,9,0,27,12,5,68,3,13,13,12,41,12,2,2,1,11,0,0,97,13,12,11,1,2,1,0,119,0,2,0,1,2,0,0,137,6,0,0,139,2,0,0,140,0,15,0,0,0,0,0,2,9,0,0,176,184,5,0,2,10,0,0,108,184,2,0,2,11,0,0,232,3,0,0,136,12,0,0,0,8,12,0,136,12,0,0,25,12,12,16,137,12,0,0,25,7,8,8,0,0,8,0,2,12,0,0,176,225,10,0,1,13,0,0,85,12,13,0,135,13,45,0,2,12,0,0,237,231,6,0,135,13,0,0,12,0,0,0,2,12,0,0,59,232,6,0,135,13,0,0,12,0,0,0,2,12,0,0,126,232,6,0,135,13,0,0,12,0,0,0,1,13,0,0,135,12,16,0,47,13,13,12,76,168,0,0,2,12,0,0,178,232,6,0,135,13,0,0,12,0,0,0,135,7,16,0,85,0,7,0,2,12,0,0,2,233,6,0,135,13,2,0,12,0,0,0,2,12,0,0,75,233,6,0,135,13,0,0,12,0,0,0,135,13,14,0,2,12,0,0,27,198,6,0,135,13,0,0,12,0,0,0,2,12,0,0,178,211,6,0,135,13,42,0,12,0,0,0,2,12,0,0,47,228,6,0,135,13,0,0,12,0,0,0,134,13,0,0,168,81,1,0,33,13,13,27,121,13,6,0,135,13,43,0,134,13,0,0,168,81,1,0,33,13,13,27,120,13,252,255,135,13,5,0,119,0,195,0,2,13,0,0,176,225,10,0,82,0,13,0,135,13,60,0,0,0,0,0,2,13,0,0,176,225,10,0,82,13,13,0,25,13,13,25,47,13,0,13,128,168,0,0,25,0,0,1,119,0,247,255,119,0,1,0,1,12,50,0,1,14,19,0,135,13,27,0,12,14,0,0,2,13,0,0,32,127,9,0,82,13,13,0,85,7,13,0,2,14,0,0,190,228,6,0,135,13,2,0,14,7,0,0,135,13,40,0,1,14,1,0,1,12,20,0,135,13,41,0,14,12,0,0,2,12,0,0,137,233,6,0,135,13,0,0,12,0,0,0,2,12,0,0,34,198,6,0,135,13,42,0,12,0,0,0,2,12,0,0,169,233,6,0,135,13,0,0,12,0,0,0,2,12,0,0,178,211,6,0,135,13,42,0,12,0,0,0,2,12,0,0,44,231,6,0,135,13,0,0,12,0,0,0,134,0,0,0,168,81,1,0,32,13,0,27,120,13,139,0,32,2,0,32,26,1,0,97,35,13,1,26,20,13,2,13,120,13,7,0,135,13,43,0,134,0,0,0,168,81,1,0,32,13,0,27,121,13,247,255,119,0,128,0,121,2,20,0,1,12,1,0,1,14,4,0,135,13,41,0,12,14,0,0,2,13,0,0,176,225,10,0,82,6,13,0,2,13,0,0,176,225,10,0,1,12,56,0,47,12,12,6,148,169,0,0,1,12,0,0,0,14,12,0,119,0,3,0,25,12,6,26,0,14,12,0,85,13,14,0,119,0,171,255,135,14,30,0,0,0,0,0,2,14,0,0,176,225,10,0,82,14,14,0,3,0,1,14,1,14,82,0,47,14,14,0,232,169,0,0,2,13,0,0,181,233,6,0,135,14,0,0,13,0,0,0,134,14,0,0,116,82,1,0,11,0,0,0,119,0,154,255,2,14,0,0,208,130,9,0,41,13,0,2,3,1,14,13,82,2,1,0,34,13,2,1,121,13,9,0,2,14,0,0,181,233,6,0,135,13,0,0,14,0,0,0,134,13,0,0,116,82,1,0,11,0,0,0,119,0,139,255,135,13,61,0,121,13,9,0,2,14,0,0,217,233,6,0,135,13,0,0,14,0,0,0,134,13,0,0,116,82,1,0,11,0,0,0,119,0,129,255,2,13,0,0,32,127,9,0,82,3,13,0,27,13,0,12,94,4,9,13,27,13,4,10,47,13,3,13,144,170,0,0,2,14,0,0,249,233,6,0,135,13,0,0,14,0,0,0,1,14,152,8,134,13,0,0,116,82,1,0,14,0,0,0,119,0,112,255,27,13,0,12,3,13,9,13,106,5,13,4,1,13,41,0,1,14,2,0,138,5,13,14,192,170,0,0,228,170,0,0,27,13,0,12,3,13,9,13,106,6,13,8,119,0,19,0,27,12,0,12,3,12,9,12,106,6,12,8,2,12,0,0,112,129,9,0,41,14,6,2,1,13,1,0,97,12,14,13,119,0,10,0,27,13,0,12,3,13,9,13,106,6,13,8,2,13,0,0,208,129,9,0,41,14,6,2,1,12,1,0,97,13,14,12,119,0,1,0,27,13,4,246,3,4,13,3,2,13,0,0,32,127,9,0,85,13,4,0,26,13,2,1,85,1,13,0,134,13,0,0,56,186,0,0,5,6,0,0,82,13,1,0,120,13,3,0,135,13,60,0,0,0,0,0,134,13,0,0,116,82,1,0,11,0,0,0,119,0,64,255,135,13,5,0,137,8,0,0,139,0,0,0,140,2,18,0,0,0,0,0,2,11,0,0,205,95,2,0,2,12,0,0,176,110,10,0,2,13,0,0,128,136,5,0,1,2,0,0,136,14,0,0,0,10,14,0,136,14,0,0,25,14,14,48,137,14,0,0,25,9,10,24,25,8,10,16,25,4,10,8,0,3,10,0,25,6,10,32,25,7,10,28,85,6,0,0,85,7,1,0,135,14,4,0,6,7,0,0,82,6,6,0,82,7,7,0,2,14,0,0,0,153,9,0,27,15,6,68,3,14,14,15,41,15,7,2,94,1,14,15,2,14,0,0,108,225,10,0,85,14,1,0,2,14,0,0,244,127,9,0,82,14,14,0,2,15,0,0,168,127,9,0,82,15,15,0,20,14,14,15,120,14,3,0,1,2,3,0,119,0,21,0,1,14,40,0,1,15,13,0,138,1,14,15,88,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,80,172,0,0,92,172,0,0,1,2,3,0,119,0,3,0,119,0,2,0,119,0,1,0,32,14,2,3,121,14,221,0,2,14,0,0,248,127,9,0,82,14,14,0,2,15,0,0,192,127,9,0,82,15,15,0,20,14,14,15,121,14,30,0,1,14,17,0,1,15,22,0,138,1,14,15,240,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,244,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,236,172,0,0,248,172,0,0,119,0,4,0,119,0,186,0,119,0,185,0,119,0,184,0,2,14,0,0,112,206,9,0,27,15,6,68,3,14,14,15,41,15,7,2,94,14,14,15,38,14,14,2,120,14,3,0,135,14,29,0,6,7,0,0,2,14,0,0,212,127,9,0,82,5,14,0,25,0,5,1,2,14,0,0,120,225,10,0,1,15,1,0,85,14,15,0,2,15,0,0,116,225,10,0,1,14,1,0,85,15,14,0,2,14,0,0,112,225,10,0,1,15,1,0,85,14,15,0,2,15,0,0,104,225,10,0,1,14,0,0,85,15,14,0,135,14,14,0,135,14,9,0,6,7,0,0,2,14,0,0,136,127,9,0,82,14,14,0,121,14,12,0,1,15,33,0,135,14,1,0,15,0,0,0,34,14,14,20,121,14,7,0,85,3,12,0,2,15,0,0,186,248,6,0,135,14,2,0,15,3,0,0,119,0,136,0,2,14,0,0,132,127,9,0,82,14,14,0,121,14,21,0,1,14,30,0,135,3,1,0,14,0,0,0,27,14,1,40,3,14,13,14,106,14,14,4,27,14,14,5,3,14,14,3,2,15,0,0,20,127,9,0,82,15,15,0,4,14,14,15,34,14,14,30,121,14,7,0,85,4,12,0,2,15,0,0,208,248,6,0,135,14,2,0,15,4,0,0,119,0,112,0,32,14,1,1,121,14,3,0,1,4,1,0,119,0,14,0,27,14,1,40,3,4,13,14,106,3,4,12,1,15,1,0,15,15,15,3,1,16,1,0,125,14,15,3,16,0,0,0,135,2,1,0,14,0,0,0,3,14,2,3,106,16,4,4,3,4,14,16,27,16,1,40,3,16,13,16,25,1,16,16,82,2,1,0,1,16,0,0,47,16,16,2,240,174,0,0,2,16,0,0,52,127,9,0,82,3,16,0,25,16,5,9,3,16,16,4,47,16,3,16,160,174,0,0,0,0,2,0,119,0,13,0,1,15,1,0,15,15,15,3,1,17,1,0,125,14,15,3,17,0,0,0,135,16,1,0,14,0,0,0,33,16,16,1,121,16,3,0,1,1,0,0,119,0,11,0,82,0,1,0,134,16,0,0,60,49,0,0,0,6,7,0,120,16,63,0,135,16,14,0,26,0,5,1,1,1,1,0,119,0,2,0,1,1,0,0,2,16,0,0,52,127,9,0,82,2,16,0,3,16,0,4,49,16,16,2,76,175,0,0,1,17,1,0,15,17,17,2,1,15,1,0,125,14,17,2,15,0,0,0,135,16,1,0,14,0,0,0,33,16,16,1,121,16,8,0,120,1,42,0,85,9,12,0,2,14,0,0,13,249,6,0,135,16,2,0,14,9,0,0,119,0,36,0,85,8,12,0,2,14,0,0,251,248,6,0,135,16,2,0,14,8,0,0,2,16,0,0,52,127,9,0,82,16,16,0,4,0,4,16,1,16,0,0,47,16,16,0,216,175,0,0,2,16,0,0,28,127,9,0,82,16,16,0,4,9,16,0,2,16,0,0,28,127,9,0,85,16,9,0,34,16,9,1,121,16,15,0,2,14,0,0,238,195,6,0,135,16,0,0,14,0,0,0,1,14,232,3,134,16,0,0,116,82,1,0,14,0,0,0,2,14,0,0,108,225,10,0,82,14,14,0,134,16,0,0,164,31,1,0,14,0,0,0,137,10,0,0,139,0,0,0,140,1,23,0,0,0,0,0,2,17,0,0,48,135,9,0,2,18,0,0,0,153,9,0,2,19,0,0,208,170,9,0,1,5,0,0,1,20,1,0,15,16,20,0,121,16,21,0,1,20,5,0,1,22,17,0,135,21,1,0,22,0,0,0,49,20,20,21,84,176,0,0,1,20,10,0,1,21,4,0,138,0,20,21,76,176,0,0,68,176,0,0,68,176,0,0,80,176,0,0,1,5,5,0,119,0,7,0,119,0,2,0,119,0,1,0,135,20,62,0,0,0,0,0,119,0,2,0,1,5,5,0,32,20,5,5,121,20,162,0,32,4,0,0,1,20,0,0,1,21,21,0,125,1,4,20,21,0,0,0,1,2,0,0,1,3,0,0,27,21,3,68,3,21,19,21,41,20,2,2,97,21,20,1,25,3,3,1,33,20,3,67,120,20,250,255,25,2,2,1,33,20,2,17,120,20,246,255,120,4,144,0,1,21,1,0,1,22,1,0,135,20,12,0,21,22,0,0,1,22,1,0,1,20,10,0,138,0,22,20,0,177,0,0,248,176,0,0,248,176,0,0,248,176,0,0,248,176,0,0,248,176,0,0,248,176,0,0,248,176,0,0,248,176,0,0,24,177,0,0,1,5,12,0,119,0,8,0,2,20,0,0,212,179,9,0,1,22,54,0,85,20,22,0,1,5,12,0,119,0,2,0,119,0,1,0,32,22,5,12,121,22,112,0,1,22,3,0,135,1,1,0,22,0,0,0,1,22,253,255,47,22,22,1,176,178,0,0,34,15,0,11,25,9,1,2,1,8,0,0,1,20,11,0,135,22,1,0,20,0,0,0,25,11,22,2,1,22,2,0,135,1,1,0,22,0,0,0,4,10,11,1,1,22,2,0,135,2,1,0,22,0,0,0,3,11,2,11,121,15,16,0,1,22,44,0,135,3,1,0,22,0,0,0,25,22,3,5,1,21,4,0,135,20,1,0,21,0,0,0,4,7,22,20,1,6,0,0,25,20,3,8,1,21,12,0,135,22,1,0,21,0,0,0,3,3,20,22,119,0,15,0,1,20,60,0,135,22,1,0,20,0,0,0,25,3,22,3,1,20,2,0,135,22,1,0,20,0,0,0,4,7,3,22,1,20,2,0,135,22,1,0,20,0,0,0,3,3,22,3,135,6,7,0,0,0,0,0,47,22,7,3,156,178,0,0,15,12,10,11,32,13,6,0,2,22,0,0,128,136,5,0,27,20,6,40,3,22,22,20,25,14,22,32,3,22,1,2,41,22,22,2,0,5,22,0,4,3,3,7,0,2,7,0,1,4,0,0,121,12,23,0,3,20,7,4,27,20,20,68,3,20,19,20,41,21,10,2,3,20,20,21,1,21,0,0,135,22,63,0,20,21,5,0,0,1,10,0,27,22,2,68,3,22,18,22,41,21,1,2,97,22,21,6,120,13,6,0,27,21,2,68,3,21,17,21,41,22,1,2,82,20,14,0,97,21,22,20,25,1,1,1,53,20,1,11,84,178,0,0,25,4,4,1,52,20,4,3,156,178,0,0,25,2,2,1,119,0,229,255,47,20,8,9,172,178,0,0,25,8,8,1,119,0,168,255,119,0,1,0,1,20,15,0,135,2,1,0,20,0,0,0,1,1,1,0,27,20,1,68,3,20,19,20,41,22,2,2,1,21,0,0,97,20,22,21,25,1,1,1,33,21,1,66,120,21,249,255,121,16,4,0,134,21,0,0,148,33,1,0,0,0,0,0,139,0,0,0,140,4,18,0,0,0,0,0,2,12,0,0,81,184,2,0,2,13,0,0,160,133,9,0,2,14,0,0,128,136,5,0,1,5,0,0,136,15,0,0,0,11,15,0,136,15,0,0,25,15,15,32,137,15,0,0,25,10,11,8,0,9,11,0,25,6,11,16,25,7,11,12,85,6,0,0,85,7,1,0,1,8,0,0,27,15,8,20,3,15,13,15,106,15,15,16,120,15,3,0,1,5,4,0,119,0,6,0,25,4,8,1,35,15,4,20,121,15,3,0,0,8,4,0,119,0,246,255,32,15,5,4,121,15,169,0,1,15,8,0,15,15,15,2,1,16,0,0,125,5,15,16,2,0,0,0,2,16,0,0,68,225,10,0,82,16,16,0,120,16,6,0,135,16,4,0,6,7,0,0,82,2,6,0,82,1,7,0,119,0,29,0,34,16,0,1,121,16,5,0,1,16,1,0,85,6,16,0,1,0,1,0,119,0,7,0,1,16,65,0,47,16,16,0,228,179,0,0,1,16,65,0,85,6,16,0,1,0,65,0,34,16,1,1,121,16,6,0,1,16,1,0,85,7,16,0,0,2,0,0,1,1,1,0,119,0,10,0,1,16,15,0,47,16,16,1,32,180,0,0,1,16,15,0,85,7,16,0,0,2,0,0,1,1,15,0,119,0,2,0,0,2,0,0,2,16,0,0,0,153,9,0,27,15,2,68,3,16,16,15,41,15,1,2,3,4,16,15,82,0,4,0,1,15,60,0,47,15,15,0,132,180,0,0,135,15,29,0,2,1,0,0,135,15,14,0,82,15,4,0,27,15,15,40,3,15,14,15,116,9,15,0,2,16,0,0,74,248,6,0,135,15,2,0,16,9,0,0,135,15,52,0,2,1,0,0,119,0,103,0,32,15,0,41,121,15,16,0,135,15,14,0,82,15,4,0,27,15,15,40,3,15,14,15,116,10,15,0,2,16,0,0,137,5,7,0,135,15,2,0,16,10,0,0,134,15,0,0,188,27,1,0,2,1,0,0,135,15,52,0,2,1,0,0,119,0,86,0,2,15,0,0,140,127,9,0,82,15,15,0,121,15,12,0,135,15,14,0,2,16,0,0,180,5,7,0,135,15,0,0,16,0,0,0,134,15,0,0,188,27,1,0,2,1,0,0,135,15,52,0,2,1,0,0,119,0,71,0,2,15,0,0,208,170,9,0,27,16,2,68,3,15,15,16,41,16,1,2,3,0,15,16,82,16,0,0,32,16,16,80,121,16,12,0,135,16,14,0,2,15,0,0,253,5,7,0,135,16,0,0,15,0,0,0,134,16,0,0,188,27,1,0,2,1,0,0,135,16,52,0,2,1,0,0,119,0,51,0,2,16,0,0,72,225,10,0,82,16,16,0,13,16,16,2,2,15,0,0,76,225,10,0,82,15,15,0,13,15,15,1,19,16,16,15,121,16,17,0,135,16,14,0,2,15,0,0,102,4,7,0,135,16,0,0,15,0,0,0,135,16,52,0,2,1,0,0,1,15,232,3,134,16,0,0,116,82,1,0,15,0,0,0,1,15,2,1,134,16,0,0,164,31,1,0,15,0,0,0,119,0,25,0,1,16,80,0,85,0,16,0,1,16,0,0,85,4,16,0,2,16,0,0,112,206,9,0,27,15,2,68,3,16,16,15,41,15,1,2,1,17,1,0,97,16,15,17,135,17,29,0,2,1,0,0,27,17,8,20,3,10,13,17,85,10,2,0,109,10,4,1,2,15,0,0,68,225,10,0,82,15,15,0,109,10,8,15,109,10,12,5,109,10,16,3,119,0,1,0,137,11,0,0,139,0,0,0,140,3,18,0,0,0,0,0,2,12,0,0,39,254,6,0,2,13,0,0,0,129,9,0,136,14,0,0,0,11,14,0,136,14,0,0,25,14,14,48,137,14,0,0,25,8,11,40,25,7,11,32,25,10,11,24,25,9,11,16,25,6,11,8,0,5,11,0,135,14,14,0,1,15,10,0,135,14,30,0,15,0,0,0,1,3,0,0,135,14,14,0,85,5,1,0,2,15,0,0,13,254,6,0,135,14,2,0,15,5,0,0,2,15,0,0,34,198,6,0,135,14,42,0,15,0,0,0,2,15,0,0,19,222,6,0,135,14,0,0,15,0,0,0,1,14,1,0,1,15,27,0,138,3,14,15,48,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,44,183,0,0,52,183,0,0,119,0,4,0,119,0,1,0,1,2,5,0,119,0,36,0,134,3,0,0,168,81,1,0,32,14,3,32,121,14,21,0,1,14,0,0,1,15,3,0,138,2,14,15,108,183,0,0,120,183,0,0,132,183,0,0,1,3,0,0,119,0,197,255,134,3,0,0,216,56,1,0,119,0,7,0,134,3,0,0,120,65,1,0,119,0,4,0,134,3,0,0,192,64,1,0,119,0,1,0,34,14,3,2,120,14,186,255,135,14,14,0,32,14,3,27,121,14,3,0,1,3,27,0,119,0,181,255,26,4,3,97,37,14,4,25,121,14,3,0,1,2,16,0,119,0,3,0,135,14,43,0,119,0,222,255,32,14,2,5,121,14,6,0,2,15,0,0,159,195,6,0,135,14,0,0,15,0,0,0,119,0,148,0,32,14,2,16,121,14,146,0,2,14,0,0,144,128,9,0,41,15,4,2,3,2,14,15,82,15,2,0,1,14,0,0,1,17,84,0,138,15,14,17,108,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,120,185,0,0,168,185,0,0,220,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,92,185,0,0,8,186,0,0,85,8,1,0,135,14,2,0,12,8,0,0,119,0,50,0,135,14,64,0,3,0,0,0,119,0,47,0,32,14,0,41,121,14,7,0,41,16,4,2,94,16,13,16,134,14,0,0,176,94,0,0,16,0,0,0,119,0,37,0,85,6,1,0,135,14,2,0,12,6,0,0,119,0,35,0,32,14,0,42,121,14,8,0,41,16,4,2,94,16,13,16,1,17,1,0,134,14,0,0,8,68,0,0,16,17,0,0,119,0,24,0,85,7,1,0,135,14,2,0,12,7,0,0,119,0,22,0,32,14,0,41,121,14,6,0,41,16,4,2,94,16,13,16,135,14,58,0,16,0,0,0,119,0,13,0,85,9,1,0,135,14,2,0,12,9,0,0,119,0,11,0,32,14,0,83,121,14,3,0,135,14,59,0,119,0,5,0,85,10,1,0,135,14,2,0,12,10,0,0,119,0,3,0,1,15,0,0,85,2,15,0,137,11,0,0,139,0,0,0,140,2,12,0,0,0,0,0,2,6,0,0,147,212,6,0,2,7,0,0,107,184,2,0,2,8,0,0,196,95,2,0,1,5,0,0,2,9,0,0,40,127,9,0,82,3,9,0,42,9,3,1,25,4,9,15,34,9,4,26,1,10,26,0,125,4,9,4,10,0,0,0,1,10,227,255,47,10,10,3,12,190,0,0,1,2,0,0,2,10,0,0,144,128,9,0,41,9,2,2,3,3,10,9,82,9,3,0,120,9,2,0,119,0,7,0,25,2,2,1,49,9,4,2,192,186,0,0,1,5,18,0,119,0,213,0,119,0,244,255,85,3,0,0,2,9,0,0,0,129,9,0,41,10,2,2,97,9,10,1,1,9,26,0,1,10,24,0,138,0,9,10,116,187,0,0,188,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,24,188,0,0,68,187,0,0,32,188,0,0,72,188,0,0,112,188,0,0,152,188,0,0,156,188,0,0,68,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,68,187,0,0,160,188,0,0,236,188,0,0,56,189,0,0,132,189,0,0,135,10,0,0,6,0,0,0,2,10,0,0,172,225,10,0,1,9,0,0,85,10,9,0,1,10,0,0,134,9,0,0,120,201,0,0,2,10,0,0,1,2,0,0,119,0,168,0,2,10,0,0,16,127,9,0,2,9,0,0,16,127,9,0,82,9,9,0,25,9,9,5,85,10,9,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,119,0,134,0,2,9,0,0,16,127,9,0,2,10,0,0,16,127,9,0,82,10,10,0,25,10,10,10,85,9,10,0,2,10,0,0,48,128,9,0,2,9,0,0,48,128,9,0,82,9,9,0,25,9,9,10,85,10,9,0,2,9,0,0,4,127,9,0,2,10,0,0,4,127,9,0,82,10,10,0,26,10,10,10,85,9,10,0,1,5,14,0,119,0,111,0,1,5,14,0,119,0,109,0,2,10,0,0,16,127,9,0,25,9,1,1,2,11,0,0,16,127,9,0,82,11,11,0,3,9,9,11,85,10,9,0,1,5,14,0,119,0,99,0,2,9,0,0,48,128,9,0,25,10,1,1,2,11,0,0,48,128,9,0,82,11,11,0,3,10,10,11,85,9,10,0,1,5,14,0,119,0,89,0,2,10,0,0,4,127,9,0,25,9,1,1,2,11,0,0,4,127,9,0,82,11,11,0,3,9,9,11,85,10,9,0,1,5,14,0,119,0,79,0,119,0,224,255,119,0,223,255,2,10,0,0,164,127,9,0,2,9,0,0,164,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,1,2,0,0,119,0,74,0,2,10,0,0,168,127,9,0,2,9,0,0,168,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,1,2,0,0,119,0,55,0,2,10,0,0,192,127,9,0,2,9,0,0,192,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,1,2,0,0,119,0,36,0,2,10,0,0,208,127,9,0,2,9,0,0,208,127,9,0,82,9,9,0,25,9,9,1,85,10,9,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,1,2,0,0,119,0,17,0,32,9,5,14,121,9,11,0,135,9,0,0,6,0,0,0,2,9,0,0,172,225,10,0,1,10,0,0,85,9,10,0,1,9,0,0,134,10,0,0,120,201,0,0,2,9,0,0,135,10,19,0,1,2,0,0,119,0,2,0,1,5,18,0,32,10,5,18,121,10,6,0,2,9,0,0,163,212,6,0,135,10,0,0,9,0,0,0,1,2,1,0,139,2,0,0,140,2,24,0,0,0,0,0,2,19,0,0,0,153,9,0,2,20,0,0,208,170,9,0,1,2,0,0,27,21,0,68,3,21,19,21,41,22,1,2,94,3,21,22,1,21,3,0,1,22,49,0,138,3,21,22,52,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,56,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,84,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,88,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,92,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,44,191,0,0,96,191,0,0,1,2,3,0,119,0,13,0,119,0,1,0,2,21,0,0,64,225,10,0,82,21,21,0,38,21,21,1,120,21,7,0,1,2,3,0,119,0,5,0,119,0,249,255,119,0,248,255,119,0,247,255,119,0,246,255,32,21,2,3,121,21,140,0,25,17,0,2,25,12,1,2,2,21,0,0,72,225,10,0,82,16,21,0,15,4,0,16,121,4,3,0,0,21,17,0,119,0,8,0,47,23,16,0,164,191,0,0,25,23,0,1,0,22,23,0,119,0,2,0,0,22,17,0,0,21,22,0,0,17,21,0,40,21,4,1,41,21,21,31,42,21,21,31,3,4,21,0,2,21,0,0,76,225,10,0,82,14,21,0,15,15,1,14,40,21,15,1,41,21,21,31,42,21,21,31,3,13,21,1,121,15,3,0,0,21,12,0,119,0,8,0,47,23,14,1,0,192,0,0,25,23,1,1,0,22,23,0,119,0,2,0,0,22,12,0,0,21,22,0,0,12,21,0,1,21,0,0,15,21,21,4,1,22,0,0,125,4,21,4,22,0,0,0,1,22,0,0,15,22,22,13,1,21,0,0,125,13,22,13,21,0,0,0,34,21,17,67,1,22,67,0,125,17,21,17,22,0,0,0,34,22,12,17,1,21,17,0,125,12,22,12,21,0,0,0,47,21,4,17,120,193,0,0,15,15,13,12,32,11,3,38,0,3,1,0,0,2,0,0,1,5,16,39,121,15,46,0,13,8,16,4,13,9,4,0,4,10,16,4,5,10,10,10,0,7,13,0,13,21,14,7,19,21,8,21,121,21,5,0,0,3,14,0,0,2,16,0,1,5,1,0,119,0,34,0,27,21,4,68,3,21,20,21,41,22,7,2,94,6,21,22,38,21,6,254,33,21,21,20,121,21,24,0,32,21,6,11,19,21,11,21,27,22,4,68,3,22,19,22,41,23,7,2,94,22,22,23,32,22,22,0,13,23,7,1,19,23,9,23,20,22,22,23,40,22,22,1,20,21,21,22,120,21,11,0,4,6,14,7,5,21,6,6,3,6,21,10,15,18,6,5,125,3,18,7,3,0,0,0,125,2,18,4,2,0,0,0,125,5,18,6,5,0,0,0,25,7,7,1,54,21,7,12,136,192,0,0,25,4,4,1,54,21,4,17,112,192,0,0,1,21,16,39,47,21,5,21,108,193,0,0,13,21,2,0,13,22,3,1,19,21,21,22,121,21,4,0,0,3,1,0,0,2,0,0,119,0,10,0,134,21,0,0,196,129,0,0,0,1,2,3,119,0,6,0,0,3,1,0,0,2,0,0,119,0,3,0,0,3,1,0,0,2,0,0,2,21,0,0,224,110,10,0,85,21,2,0,2,21,0,0,16,111,10,0,85,21,3,0,139,0,0,0,140,0,11,0,0,0,0,0,2,5,0,0,232,3,0,0,2,6,0,0,25,252,243,1,2,7,0,0,24,252,243,1,136,8,0,0,0,4,8,0,136,8,0,0,25,8,8,16,137,8,0,0,25,3,4,8,0,2,4,0,135,8,14,0,1,9,10,0,135,8,30,0,9,0,0,0,1,0,0,0,135,8,14,0,2,9,0,0,116,1,7,0,135,8,0,0,9,0,0,0,2,9,0,0,34,198,6,0,135,8,42,0,9,0,0,0,2,9,0,0,19,222,6,0,135,8,0,0,9,0,0,0,1,8,1,0,1,9,27,0,138,0,8,9,156,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,152,194,0,0,160,194,0,0,119,0,4,0,119,0,1,0,1,1,5,0,119,0,46,0,134,0,0,0,168,81,1,0,32,8,0,32,121,8,8,0,1,8,1,0,134,0,0,0,152,77,1,0,8,0,0,0,34,8,0,2,120,8,200,255,135,8,14,0,1,8,27,0,1,9,20,0,138,0,8,9,52,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,48,195,0,0,56,195,0,0,119,0,4,0,119,0,174,255,1,1,10,0,119,0,8,0,26,0,0,97,37,8,0,25,121,8,3,0,1,1,26,0,119,0,3,0,135,8,43,0,119,0,212,255,32,8,1,5,121,8,6,0,2,9,0,0,159,195,6,0,135,8,0,0,9,0,0,0,119,0,118,0,32,8,1,10,121,8,111,0,2,8,0,0,208,170,9,0,2,9,0,0,72,225,10,0,82,9,9,0,27,9,9,68,3,8,8,9,2,9,0,0,76,225,10,0,82,9,9,0,41,9,9,2,3,1,8,9,82,0,1,0,121,0,11,0,2,9,0,0,0,130,5,0,41,8,0,2,3,9,9,8,116,2,9,0,2,8,0,0,219,212,6,0,135,9,2,0,8,2,0,0,119,0,92,0,2,8,0,0,144,1,7,0,135,9,0,0,8,0,0,0,2,9,0,0,32,127,9,0,82,9,9,0,134,0,0,0,128,242,0,0,9,0,0,0,121,0,81,0,2,9,0,0,32,127,9,0,82,2,9,0,47,9,2,0,52,196,0,0,2,8,0,0,81,195,6,0,135,9,0,0,8,0,0,0,119,0,71,0,2,9,0,0,0,128,0,0,47,9,0,9,84,196,0,0,1,9,18,0,85,1,9,0,0,1,0,0,119,0,29,0,2,9,0,0,247,255,4,0,47,9,0,9,120,196,0,0,1,9,72,0,85,1,9,0,29,0,0,10,27,1,0,10,119,0,20,0,2,9,0,0,157,255,49,0,47,9,0,9,156,196,0,0,1,9,70,0,85,1,9,0,29,0,0,100,27,1,0,100,119,0,11,0,1,9,71,0,85,1,9,0,47,9,0,6,184,196,0,0,7,0,0,5,5,1,0,5,119,0,4,0,2,1,0,0,24,252,243,1,1,0,255,127,2,9,0,0,32,127,9,0,4,8,2,1,85,9,8,0,85,3,1,0,2,9,0,0,175,1,7,0,135,8,2,0,9,3,0,0,2,8,0,0,72,225,10,0,82,2,8,0,2,8,0,0,76,225,10,0,82,3,8,0,2,8,0,0,160,188,9,0,27,9,2,68,3,8,8,9,41,9,3,2,97,8,9,0,2,9,0,0,112,206,9,0,27,8,2,68,3,9,9,8,41,8,3,2,1,10,0,0,97,9,8,10,119,0,6,0,32,10,1,26,121,10,4,0,134,10,0,0,88,240,0,0,0,0,0,0,137,4,0,0,139,0,0,0,140,0,10,0,0,0,0,0,2,4,0,0,87,184,2,0,2,5,0,0,86,184,2,0,2,6,0,0,80,184,2,0,136,7,0,0,0,1,7,0,136,7,0,0,25,7,7,32,137,7,0,0,25,3,1,16,25,2,1,8,2,7,0,0,215,10,7,0,85,1,7,0,2,8,0,0,227,10,7,0,109,1,4,8,2,7,0,0,192,128,7,0,2,9,0,0,209,10,7,0,135,8,65,0,7,9,1,0,1,7,0,0,135,9,66,0,7,0,0,0,135,8,67,0,9,0,0,0,134,8,0,0,52,3,1,0,134,8,0,0,84,23,1,0,121,8,48,0,135,8,45,0,135,8,14,0,2,9,0,0,236,10,7,0,135,8,0,0,9,0,0,0,2,8,0,0,116,127,9,0,2,9,0,0,68,225,10,0,82,9,9,0,85,8,9,0,2,9,0,0,112,225,10,0,1,8,1,0,85,9,8,0,2,8,0,0,40,127,9,0,82,8,8,0,32,8,8,25,121,8,15,0,2,8,0,0,36,127,9,0,82,0,8,0,2,8,0,0,80,190,5,0,82,1,8,0,47,8,1,0,116,198,0,0,2,8,0,0,36,127,9,0,85,8,1,0,4,9,0,1,135,8,20,0,9,0,0,0,135,8,68,0,2,8,0,0,64,225,10,0,82,1,8,0,2,8,0,0,64,225,10,0,26,9,1,1,85,8,9,0,2,9,0,0,100,225,10,0,26,8,1,2,85,9,8,0,135,8,45,0,2,8,0,0,28,127,9,0,82,8,8,0,120,8,31,0,134,8,0,0,172,116,0,0,2,8,0,0,188,225,10,0,1,9,1,0,85,8,9,0,1,8,0,0,134,9,0,0,72,29,1,0,8,0,0,0,134,9,0,0,108,62,1,0,135,9,5,0,135,9,14,0,2,9,0,0,80,140,7,0,85,2,9,0,2,8,0,0,255,10,7,0,135,9,2,0,8,2,0,0,2,8,0,0,229,210,6,0,135,9,42,0,8,0,0,0,2,8,0,0,28,11,7,0,135,9,0,0,8,0,0,0,119,0,14,0,2,9,0,0,188,225,10,0,1,8,1,0,85,9,8,0,135,8,5,0,135,8,14,0,2,8,0,0,80,140,7,0,85,3,8,0,2,9,0,0,38,11,7,0,135,8,2,0,9,3,0,0,2,8,0,0,104,225,10,0,1,9,0,0,85,8,9,0,2,9,0,0,116,225,10,0,1,8,0,0,85,9,8,0,2,8,0,0,124,225,10,0,2,9,0,0,72,225,10,0,82,9,9,0,85,8,9,0,2,9,0,0,128,225,10,0,2,8,0,0,76,225,10,0,82,8,8,0,85,9,8,0,2,8,0,0,184,225,10,0,82,8,8,0,120,8,10,0,2,9,0,0,72,225,10,0,82,9,9,0,2,7,0,0,76,225,10,0,82,7,7,0,135,8,21,0,9,7,0,0,119,0,5,0,2,8,0,0,184,225,10,0,1,7,0,0,85,8,7,0,2,7,0,0,120,225,10,0],eb+40960);HEAPU8.set([1,8,0,0,85,7,8,0,2,8,0,0,112,225,10,0,1,7,0,0,85,8,7,0,2,7,0,0,92,225,10,0,1,8,1,0,85,7,8,0,2,8,0,0,92,225,10,0,1,7,0,0,85,8,7,0,134,7,0,0,244,17,0,0,2,7,0,0,92,225,10,0,82,7,7,0,33,7,7,0,120,7,246,255,134,7,0,0,196,78,0,0,2,7,0,0,184,127,9,0,82,7,7,0,120,7,23,0,2,7,0,0,88,225,10,0,82,3,7,0,2,7,0,0,88,225,10,0,26,8,3,1,85,7,8,0,34,8,3,2,121,8,14,0,2,8,0,0,68,225,10,0,82,3,8,0,2,8,0,0,88,225,10,0,1,7,120,0,41,9,3,2,4,7,7,9,85,8,7,0,135,8,7,0,3,0,0,0,135,7,53,0,8,0,0,0,2,7,0,0,96,225,10,0,82,7,7,0,121,7,10,0,2,7,0,0,96,225,10,0,1,8,0,0,85,7,8,0,1,7,1,0,1,9,0,0,134,8,0,0,160,36,0,0,7,9,0,0,2,8,0,0,184,127,9,0,82,8,8,0,34,8,8,1,121,8,171,255,2,8,0,0,144,127,9,0,82,8,8,0,38,8,8,1,120,8,166,255,2,8,0,0,64,225,10,0,2,9,0,0,64,225,10,0,82,9,9,0,25,9,9,1,85,8,9,0,134,9,0,0,124,11,1,0,2,9,0,0,112,225,10,0,82,9,9,0,120,9,153,255,2,9,0,0,188,127,9,0,82,9,9,0,121,9,3,0,134,9,0,0,212,87,0,0,134,9,0,0,212,87,0,0,119,0,144,255,140,2,17,0,0,0,0,0,2,10,0,0,0,129,9,0,2,11,0,0,0,130,5,0,2,12,0,0,20,212,6,0,136,13,0,0,0,9,13,0,136,13,0,0,25,13,13,48,137,13,0,0,25,6,9,40,25,5,9,32,25,4,9,24,25,8,9,16,25,7,9,8,0,3,9,0,2,13,0,0,144,128,9,0,41,14,0,2,3,2,13,14,82,14,2,0,1,13,22,0,1,15,62,0,138,14,13,15,88,203,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,92,203,0,0,96,203,0,0,60,204,0,0,64,204,0,0,220,202,0,0,220,202,0,0,68,204,0,0,72,204,0,0,76,204,0,0,80,204,0,0,84,204,0,0,88,204,0,0,92,204,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,220,202,0,0,96,204,0,0,1,15,10,0,135,13,30,0,15,0,0,0,135,13,40,0,82,13,2,0,41,13,13,2,94,2,11,13,25,13,0,97,85,4,13,0,109,4,4,2,135,13,2,0,12,4,0,0,41,13,0,2,94,2,10,13,1,13,0,0,47,13,13,2,56,203,0,0,85,5,2,0,2,15,0,0,251,197,6,0,135,13,2,0,15,5,0,0,119,0,76,0,34,13,2,0,121,13,74,0,85,6,2,0,2,15,0,0,0,198,6,0,135,13,2,0,15,6,0,0,119,0,68,0,119,0,2,0,119,0,1,0,1,15,10,0,135,13,30,0,15,0,0,0,135,13,40,0,82,13,2,0,41,13,13,2,94,6,11,13,25,13,0,97,85,3,13,0,109,3,4,6,135,13,2,0,12,3,0,0,82,13,2,0,1,15,41,0,1,16,2,0,138,13,15,16,172,203,0,0,244,203,0,0,119,0,47,0,41,15,0,2,94,2,10,15,2,15,0,0,112,129,9,0,41,16,2,2,94,15,15,16,120,15,2,0,119,0,39,0,2,15,0,0,80,131,5,0,41,16,2,2,3,15,15,16,116,8,15,0,2,16,0,0,244,197,6,0,135,15,2,0,16,8,0,0,119,0,29,0,41,15,0,2,94,2,10,15,2,15,0,0,208,129,9,0,41,16,2,2,94,15,15,16,120,15,2,0,119,0,21,0,2,15,0,0,192,131,5,0,41,16,2,2,3,15,15,16,116,7,15,0,2,16,0,0,244,197,6,0,135,15,2,0,16,7,0,0,119,0,11,0,119,0,201,255,119,0,200,255,119,0,199,255,119,0,198,255,119,0,197,255,119,0,196,255,119,0,195,255,119,0,194,255,119,0,193,255,119,0,192,255,2,14,0,0,88,127,9,0,82,14,14,0,45,14,14,0,136,204,0,0,2,13,0,0,27,212,6,0,135,14,0,0,13,0,0,0,2,14,0,0,80,127,9,0,82,14,14,0,13,14,14,0,2,13,0,0,252,127,9,0,82,13,13,0,13,13,13,0,20,14,14,13,121,14,5,0,2,13,0,0,45,212,6,0,135,14,0,0,13,0,0,0,2,14,0,0,172,225,10,0,82,0,14,0,2,14,0,0,172,225,10,0,25,13,0,1,85,14,13,0,1,13,21,0,47,13,13,0,12,205,0,0,2,13,0,0,172,225,10,0,1,14,0,0,85,13,14,0,134,2,0,0,196,57,1,0,1,0,0,0,135,14,45,0,119,0,2,0,1,2,0,0,137,9,0,0,139,2,0,0,140,1,11,0,0,0,0,0,2,5,0,0,208,170,9,0,2,6,0,0,82,184,2,0,2,7,0,0,83,184,2,0,2,8,0,0,120,127,9,0,82,8,8,0,121,8,12,0,2,8,0,0,40,127,9,0,82,4,8,0,1,9,30,0,135,8,1,0,9,0,0,0,47,8,4,8,116,205,0,0,1,8,9,0,135,0,24,0,8,0,0,0,2,8,0,0,144,191,5,0,41,9,0,2,94,8,8,9,2,9,0,0,72,225,10,0,82,9,9,0,3,2,8,9,2,9,0,0,192,191,5,0,41,8,0,2,94,9,9,8,2,8,0,0,76,225,10,0,82,8,8,0,3,1,9,8,1,8,66,0,16,8,8,2,1,9,16,0,16,9,9,1,20,8,8,9,121,8,11,0,2,8,0,0,92,225,10,0,1,9,1,0,85,8,9,0,2,9,0,0,104,225,10,0,1,8,0,0,85,9,8,0,1,0,0,0,119,0,221,0,27,8,2,68,3,8,5,8,41,9,1,2,94,3,8,9,2,8,0,0,0,153,9,0,27,9,2,68,3,8,8,9,41,9,1,2,94,4,8,9,39,8,3,1,32,8,8,21,2,9,0,0,44,128,9,0,82,9,9,0,32,9,9,0,19,8,8,9,121,8,11,0,2,8,0,0,92,225,10,0,1,9,1,0,85,8,9,0,2,9,0,0,104,225,10,0,1,8,0,0,85,9,8,0,1,0,0,0,119,0,193,0,32,8,2,33,32,9,1,16,19,8,8,9,2,9,0,0,68,225,10,0,82,9,9,0,32,9,9,1,19,8,8,9,121,8,37,0,1,9,0,0,134,8,0,0,72,29,1,0,9,0,0,0,1,0,0,0,1,1,0,0,27,8,0,68,3,8,5,8,41,9,1,2,94,8,8,9,32,8,8,54,120,8,11,0,25,1,1,1,35,8,1,17,120,8,248,255,25,0,0,1,1,8,67,0,50,8,8,0,220,206,0,0,1,1,17,0,119,0,17,0,119,0,240,255,2,8,0,0,72,225,10,0,85,8,0,0,2,8,0,0,76,225,10,0,85,8,1,0,135,8,13,0,135,8,5,0,2,8,0,0,96,225,10,0,1,9,1,0,85,8,9,0,1,0,0,0,119,0,148,0,0,0,2,0,1,9,0,0,47,9,9,4,72,207,0,0,135,9,69,0,0,1,0,0,2,9,0,0,104,225,10,0,1,8,0,0,85,9,8,0,1,0,0,0,119,0,136,0,2,9,0,0,80,225,10,0,82,9,9,0,121,9,4,0,1,9,1,0,0,8,9,0,119,0,13,0,2,9,0,0,72,225,10,0,82,9,9,0,27,9,9,68,3,9,5,9,2,10,0,0,76,225,10,0,82,10,10,0,41,10,10,2,94,9,9,10,33,9,9,1,0,8,9,0,120,8,8,0,135,8,14,0,2,9,0,0,254,209,6,0,135,8,0,0,9,0,0,0,134,8,0,0,192,79,1,0,2,8,0,0,80,225,10,0,1,9,0,0,85,8,9,0,2,9,0,0,72,225,10,0,85,9,0,0,2,9,0,0,76,225,10,0,85,9,1,0,2,9,0,0,96,225,10,0,1,8,1,0,85,9,8,0,1,8,0,0,1,9,79,0,138,3,8,9,56,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,60,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,52,209,0,0,64,209,0,0,52,209,0,0,52,209,0,0,68,209,0,0,52,209,0,0,72,209,0,0,119,0,7,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,1,0,1,0,119,0,6,0,2,8,0,0,104,225,10,0,1,9,0,0,85,8,9,0,1,0,0,0,139,0,0,0,140,0,13,0,0,0,0,0,2,7,0,0,232,3,0,0,2,8,0,0,80,184,2,0,2,9,0,0,13,1,0,0,136,10,0,0,0,6,10,0,136,10,0,0,25,10,10,32,137,10,0,0,25,5,6,24,25,4,6,16,25,3,6,8,0,2,6,0,1,0,0,0,2,10,0,0,144,128,9,0,41,11,0,2,3,1,10,11,82,11,1,0,32,11,11,42,121,11,95,0,2,11,0,0,0,129,9,0,41,10,0,2,94,11,11,10,32,11,11,21,121,11,89,0,1,11,0,0,85,1,11,0,135,11,14,0,1,11,48,117,2,10,0,0,64,225,10,0,82,10,10,0,15,1,11,10,2,11,0,0,150,223,6,0,135,10,0,0,11,0,0,0,121,1,17,0,2,11,0,0,226,223,6,0,135,10,0,0,11,0,0,0,2,11,0,0,47,224,6,0,135,10,0,0,11,0,0,0,2,11,0,0,121,224,6,0,135,10,0,0,11,0,0,0,134,10,0,0,164,31,1,0,9,0,0,0,119,0,60,0,2,11,0,0,169,224,6,0,135,10,0,0,11,0,0,0,2,11,0,0,241,224,6,0,135,10,0,0,11,0,0,0,2,11,0,0,62,225,6,0,135,10,0,0,11,0,0,0,2,11,0,0,194,196,6,0,135,10,0,0,11,0,0,0,2,11,0,0,202,196,6,0,135,10,42,0,11,0,0,0,2,11,0,0,208,196,6,0,135,10,0,0,11,0,0,0,134,10,0,0,168,81,1,0,33,10,10,10,121,10,6,0,135,10,43,0,134,10,0,0,168,81,1,0,33,10,10,10,120,10,252,255,2,11,0,0,87,225,6,0,135,10,0,0,11,0,0,0,134,10,0,0,116,82,1,0,7,0,0,0,2,11,0,0,107,225,6,0,135,10,0,0,11,0,0,0,134,10,0,0,116,82,1,0,7,0,0,0,2,11,0,0,116,225,6,0,135,10,0,0,11,0,0,0,2,11,0,0,183,225,6,0,135,10,0,0,11,0,0,0,1,11,7,1,134,10,0,0,164,31,1,0,11,0,0,0,25,0,0,1,33,10,0,26,120,10,153,255,1,10,48,117,2,11,0,0,64,225,10,0,82,11,11,0,47,10,10,11,196,211,0,0,135,10,14,0,2,10,0,0,80,140,7,0,85,2,10,0,2,11,0,0,201,225,6,0,135,10,2,0,11,2,0,0,2,11,0,0,219,225,6,0,135,10,0,0,11,0,0,0,2,11,0,0,9,226,6,0,135,10,0,0,11,0,0,0,2,11,0,0,88,226,6,0,135,10,0,0,11,0,0,0,134,10,0,0,164,31,1,0,9,0,0,0,135,10,45,0,1,11,1,0,1,12,7,0,135,10,27,0,11,12,0,0,2,10,0,0,80,140,7,0,85,3,10,0,2,12,0,0,163,226,6,0,135,10,2,0,12,3,0,0,2,12,0,0,181,226,6,0,135,10,0,0,12,0,0,0,2,12,0,0,229,226,6,0,135,10,0,0,12,0,0,0,1,10,147,117,2,12,0,0,64,225,10,0,82,12,12,0,4,10,10,12,28,10,10,100,85,4,10,0,2,12,0,0,45,227,6,0,135,10,2,0,12,4,0,0,2,10,0,0,80,140,7,0,85,5,10,0,2,12,0,0,116,227,6,0,135,10,2,0,12,5,0,0,2,12,0,0,167,227,6,0,135,10,0,0,12,0,0,0,2,12,0,0,238,227,6,0,135,10,0,0,12,0,0,0,2,12,0,0,37,228,6,0,135,10,0,0,12,0,0,0,2,12,0,0,178,211,6,0,135,10,42,0,12,0,0,0,2,12,0,0,47,228,6,0,135,10,0,0,12,0,0,0,134,10,0,0,168,81,1,0,33,10,10,27,121,10,6,0,135,10,43,0,134,10,0,0,168,81,1,0,33,10,10,27,120,10,252,255,135,10,5,0,137,6,0,0,139,0,0,0,140,0,12,0,0,0,0,0,2,7,0,0,48,132,5,0,2,8,0,0,48,130,9,0,2,9,0,0,228,1,7,0,1,3,0,0,136,10,0,0,0,6,10,0,136,10,0,0,25,10,10,16,137,10,0,0,0,5,6,0,135,10,14,0,2,10,0,0,64,127,9,0,82,10,10,0,34,10,10,1,121,10,6,0,2,11,0,0,200,1,7,0,135,10,0,0,11,0,0,0,119,0,120,0,1,11,10,0,135,10,30,0,11,0,0,0,135,10,14,0,135,10,0,0,9,0,0,0,2,11,0,0,34,198,6,0,135,10,42,0,11,0,0,0,2,11,0,0,19,222,6,0,135,10,0,0,11,0,0,0,1,0,0,0,41,10,0,2,3,1,5,10,134,2,0,0,168,81,1,0,85,1,2,0,1,10,27,0,1,11,6,0,138,2,10,11,188,213,0,0,184,213,0,0,184,213,0,0,184,213,0,0,184,213,0,0,196,213,0,0,119,0,4,0,1,3,7,0,119,0,27,0,119,0,21,0,26,10,2,97,35,10,10,26,120,10,8,0,26,10,2,65,35,10,10,26,121,10,3,0,1,3,11,0,119,0,3,0,135,10,43,0,119,0,231,255,32,10,3,11,121,10,4,0,1,3,0,0,25,10,2,32,85,1,10,0,25,0,0,1,1,10,3,0,57,10,10,0,44,214,0,0,119,0,219,255,1,11,255,255,134,10,0,0,24,124,0,0,11,0,0,0,119,0,202,255,32,10,3,7,121,10,6,0,2,11,0,0,159,195,6,0,135,10,0,0,11,0,0,0,119,0,55,0,1,0,0,0,41,11,0,2,94,11,5,11,135,10,30,0,11,0,0,0,25,0,0,1,33,10,0,3,120,10,250,255,2,10,0,0,64,127,9,0,2,11,0,0,64,127,9,0,82,11,11,0,26,11,11,1,85,10,11,0,82,3,5,0,106,4,5,4,106,0,5,8,1,2,0,0,41,11,2,2,94,1,7,11,78,11,1,0,45,11,3,11,212,214,0,0,102,11,1,1,45,11,4,11,212,214,0,0,102,11,1,2,45,11,0,11,212,214,0,0,41,11,2,2,94,11,8,11,121,11,3,0,1,3,21,0,119,0,7,0,35,11,2,37,121,11,3,0,25,2,2,1,119,0,237,255,1,3,23,0,119,0,1,0,32,11,3,21,121,11,5,0,134,11,0,0,0,0,0,0,2,0,0,0,119,0,7,0,32,11,3,23,121,11,5,0,2,10,0,0,247,1,7,0,135,11,0,0,10,0,0,0,135,11,19,0,137,6,0,0,139,0,0,0,140,0,12,0,0,0,0,0,2,6,0,0,125,215,6,0,2,7,0,0,167,214,6,0,2,8,0,0,0,130,5,0,136,9,0,0,0,5,9,0,136,9,0,0,25,9,9,16,137,9,0,0,0,0,5,0,2,10,0,0,18,215,6,0,135,9,0,0,10,0,0,0,2,10,0,0,178,211,6,0,135,9,42,0,10,0,0,0,2,10,0,0,43,215,6,0,135,9,0,0,10,0,0,0,134,4,0,0,168,81,1,0,32,9,4,27,121,9,6,0,2,10,0,0,159,195,6,0,135,9,0,0,10,0,0,0,119,0,116,0,85,0,4,0,2,10,0,0,56,215,6,0,135,9,2,0,10,0,0,0,32,9,4,32,121,9,6,0,2,10,0,0,62,215,6,0,135,9,0,0,10,0,0,0,119,0,104,0,2,9,0,0,72,28,6,0,82,9,9,0,45,9,4,9,12,216,0,0,2,10,0,0,100,215,6,0,135,9,0,0,10,0,0,0,119,0,94,0,32,9,4,64,121,9,6,0,2,10,0,0,80,140,7,0,135,9,0,0,10,0,0,0,119,0,87,0,1,0,3,0,1,3,0,0,1,1,0,0,2,9,0,0,112,135,5,0,41,10,3,2,94,9,9,10,45,9,4,9,192,216,0,0,2,9,0,0,128,136,5,0,27,10,3,40,3,2,9,10,1,10,70,0,82,11,2,0,135,9,70,0,11,0,0,0,3,9,9,0,48,10,10,9,136,216,0,0,135,10,0,0,6,0,0,0,1,0,3,0,119,0,7,0,1,10,0,0,47,10,10,1,160,216,0,0,135,10,0,0,7,0,0,0,25,0,0,2,82,9,2,0,135,10,0,0,9,0,0,0,25,1,1,1,82,9,2,0,135,10,70,0,9,0,0,0,3,0,10,0,25,3,3,1,33,10,3,64,120,10,219,255,120,1,45,0,1,3,0,0,1,1,0,0,1,0,3,0,2,10,0,0,176,128,5,0,41,9,3,2,94,10,10,9,45,10,4,10,96,217,0,0,41,10,3,2,3,2,8,10,1,10,70,0,82,11,2,0,135,9,70,0,11,0,0,0,3,9,9,0,48,10,10,9,40,217,0,0,135,10,0,0,6,0,0,0,1,0,3,0,119,0,7,0,1,10,0,0,47,10,10,1,64,217,0,0,135,10,0,0,7,0,0,0,25,0,0,2,82,9,2,0,135,10,0,0,9,0,0,0,25,1,1,1,82,9,2,0,135,10,70,0,9,0,0,0,3,0,10,0,25,3,3,1,33,10,3,84,120,10,221,255,120,1,5,0,2,9,0,0,131,215,6,0,135,10,0,0,9,0,0,0,137,5,0,0,139,0,0,0,140,2,9,0,0,0,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,0,3,4,0,1,6,101,0,135,5,1,0,6,0,0,0,34,5,5,40,121,5,165,0,2,6,0,0,169,195,6,0,135,5,0,0,6,0,0,0,1,5,10,0,135,2,1,0,5,0,0,0,85,3,2,0,2,6,0,0,204,195,6,0,135,5,2,0,6,3,0,0,1,5,0,0,47,5,5,2,76,218,0,0,2,5,0,0,28,127,9,0,82,5,5,0,4,3,5,2,2,5,0,0,28,127,9,0,85,5,3,0,34,5,3,1,121,5,13,0,2,6,0,0,238,195,6,0,135,5,0,0,6,0,0,0,1,6,232,3,134,5,0,0,116,82,1,0,6,0,0,0,1,6,25,1,134,5,0,0,164,31,1,0,6,0,0,0,1,6,10,0,135,5,1,0,6,0,0,0,1,7,1,0,1,6,3,0,138,5,7,6,116,218,0,0,180,218,0,0,248,218,0,0,119,0,51,0,1,7,232,3,135,6,1,0,7,0,0,0,25,3,6,100,2,6,0,0,4,128,9,0,2,7,0,0,4,128,9,0,82,7,7,0,3,7,3,7,85,6,7,0,2,6,0,0,3,196,6,0,135,7,0,0,6,0,0,0,119,0,35,0,1,6,64,6,135,7,1,0,6,0,0,0,1,6,200,0,3,3,7,6,2,6,0,0,16,128,9,0,2,7,0,0,16,128,9,0,82,7,7,0,3,7,3,7,85,6,7,0,2,6,0,0,50,196,6,0,135,7,0,0,6,0,0,0,119,0,18,0,1,6,64,6,135,7,1,0,6,0,0,0,1,6,200,0,3,3,7,6,2,6,0,0,24,128,9,0,2,7,0,0,24,128,9,0,82,7,7,0,3,7,3,7,85,6,7,0,2,6,0,0,95,196,6,0,135,7,0,0,6,0,0,0,119,0,1,0,2,5,0,0,112,206,9,0,27,7,0,68,3,5,5,7,41,7,1,2,1,6,0,0,97,5,7,6,2,6,0,0,208,170,9,0,27,7,0,68,3,6,6,7,41,7,1,2,1,5,0,0,97,6,7,5,1,7,100,0,135,5,1,0,7,0,0,0,34,5,5,69,121,5,2,0,135,5,71,0,2,6,0,0,160,188,9,0,2,8,0,0,72,225,10,0,82,8,8,0,27,8,8,68,3,6,6,8,2,8,0,0,76,225,10,0,82,8,8,0,41,8,8,2,94,6,6,8,27,6,6,110,1,8,200,0,3,6,6,8,135,7,1,0,6,0,0,0,135,5,72,0,7,0,0,0,1,5,0,0,1,6,4,0,135,7,1,0,6,0,0,0,47,5,5,7,72,220,0,0,1,0,0,0,2,7,0,0,160,188,9,0,2,6,0,0,72,225,10,0,82,6,6,0,27,6,6,68,3,7,7,6,2,6,0,0,76,225,10,0,82,6,6,0,41,6,6,2,94,7,7,6,25,7,7,2,135,5,38,0,7,0,0,0,25,0,0,1,1,7,4,0,135,5,1,0,7,0,0,0,54,5,0,5,244,219,0,0,119,0,5,0,2,7,0,0,83,194,6,0,135,5,0,0,7,0,0,0,137,4,0,0,139,0,0,0,140,4,14,0,0,0,0,0,2,10,0,0,232,3,0,0,2,11,0,0,199,95,2,0,136,12,0,0,0,9,12,0,136,12,0,0,25,12,12,32,137,12,0,0,25,8,9,8,0,7,9,0,25,4,9,20,25,5,9,16,1,12,37,0,16,12,12,0,32,13,2,0,20,12,12,13,120,12,109,0,135,12,26,0,120,12,107,0,134,12,0,0,180,244,0,0,4,5,0,0,82,6,4,0,82,4,5,0,2,12,0,0,0,153,9,0,27,13,6,68,3,12,12,13,41,13,4,2,94,5,12,13,2,12,0,0,208,170,9,0,27,13,6,68,3,12,12,13,41,13,4,2,94,12,12,13,33,12,12,11,121,12,28,0,120,5,6,0,2,13,0,0,108,6,7,0,135,12,0,0,13,0,0,0,119,0,82,0,135,12,9,0,6,4,0,0,135,12,31,0,0,5,0,0,120,12,10,0,2,12,0,0,176,110,10,0,85,8,12,0,109,8,4,3,135,12,2,0,2,8,0,0,135,12,10,0,6,4,1,0,119,0,68,0,2,12,0,0,132,225,10,0,85,12,6,0,2,12,0,0,136,225,10,0,85,12,4,0,119,0,61,0,1,12,3,0,1,13,4,0,138,0,12,13,0,222,0,0,144,221,0,0,144,221,0,0,20,222,0,0,2,12,0,0,190,6,7,0,85,7,12,0,109,7,4,3,135,12,2,0,2,7,0,0,2,12,0,0,28,127,9,0,82,12,12,0,4,8,12,1,2,12,0,0,28,127,9,0,85,12,8,0,1,12,1,0,56,12,12,8,100,222,0,0,2,13,0,0,238,195,6,0,135,12,0,0,13,0,0,0,134,12,0,0,116,82,1,0,10,0,0,0,1,13,22,1,134,12,0,0,164,31,1,0,13,0,0,0,119,0,26,0,2,13,0,0,140,6,7,0,135,12,0,0,13,0,0,0,119,0,6,0,2,13,0,0,158,6,7,0,135,12,0,0,13,0,0,0,119,0,1,0,1,12,254,255,47,12,12,3,100,222,0,0,25,4,3,2,134,12,0,0,248,81,1,0,134,12,0,0,116,82,1,0,10,0,0,0,1,12,1,0,47,12,12,4,96,222,0,0,26,4,4,1,119,0,247,255,119,0,1,0,137,9,0,0,139,0,0,0,140,2,11,0,0,0,0,0,2,6,0,0,64,224,9,0,2,7,0,0,0,153,9,0,2,8,0,0,144,191,5,0,1,3,0,0,27,9,0,68,3,9,7,9,41,10,1,2,94,2,9,10,1,9,3,0,1,10,49,0,138,2,9,10,120,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,124,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,168,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,172,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,176,223,0,0,184,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,112,223,0,0,188,223,0,0,1,3,4,0,119,0,19,0,119,0,1,0,2,9,0,0,64,225,10,0,82,9,9,0,38,9,9,1,120,9,13,0,32,9,2,38,121,9,3,0,1,3,9,0,119,0,9,0,1,3,4,0,119,0,7,0,119,0,245,255,119,0,244,255,1,3,9,0,119,0,3,0,119,0,241,255,119,0,240,255,32,9,3,4,121,9,41,0,27,9,0,68,3,9,6,9,41,10,1,2,94,5,9,10,1,2,1,0,41,9,2,2,94,9,8,9,3,3,9,0,2,9,0,0,192,191,5,0,41,10,2,2,94,9,9,10,3,4,9,1,27,9,3,68,3,9,6,9,41,10,4,2,94,9,9,10,47,9,9,5,44,224,0,0,27,9,3,68,3,9,7,9,41,10,4,2,94,9,9,10,120,9,2,0,119,0,6,0,25,2,2,1,1,9,9,0,57,9,9,2,44,225,0,0,119,0,232,255,2,9,0,0,224,110,10,0,85,9,3,0,2,9,0,0,16,111,10,0,85,9,4,0,134,9,0,0,196,129,0,0,0,1,3,4,119,0,50,0,32,9,3,9,121,9,48,0,27,9,0,68,3,9,6,9,41,10,1,2,94,3,9,10,1,2,1,0,41,9,2,2,94,9,8,9,3,4,9,0,2,9,0,0,192,191,5,0,41,10,2,2,94,9,9,10,3,5,9,1,27,9,4,68,3,9,6,9,41,10,5,2,94,9,9,10,47,9,9,3,244,224,0,0,2,9,0,0,208,170,9,0,27,10,4,68,3,9,9,10,41,10,5,2,94,9,9,10,33,9,9,11,121,9,7,0,27,9,4,68,3,9,7,9,41,10,5,2,94,9,9,10,120,9,2,0,119,0,6,0,25,2,2,1,1,9,9,0,57,9,9,2,44,225,0,0,119,0,224,255,2,9,0,0,224,110,10,0,85,9,4,0,2,9,0,0,16,111,10,0,85,9,5,0,134,9,0,0,196,129,0,0,0,1,4,5,139,0,0,0,140,0,9,0,0,0,0,0,2,3,0,0,208,170,9,0,2,4,0,0,199,95,2,0,2,5,0,0,81,184,2,0,1,2,0,0,135,6,14,0,2,6,0,0,72,225,10,0,82,6,6,0,27,6,6,68,3,6,3,6,2,7,0,0,76,225,10,0,82,7,7,0,41,7,7,2,94,6,6,7,1,8,5,0,1,7,52,0,138,6,8,7,112,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,204,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,92,226,0,0,224,226,0,0,2,7,0,0,218,221,6,0,135,8,0,0,7,0,0,0,119,0,119,0,2,7,0,0,68,225,10,0,82,0,7,0,1,7,1,0,15,7,7,0,33,8,0,11,19,7,7,8,121,7,11,0,26,8,0,1,134,7,0,0,72,29,1,0,8,0,0,0,135,7,5,0,2,7,0,0,96,225,10,0,1,8,1,0,85,7,8,0,119,0,101,0,2,7,0,0,94,221,6,0,135,8,0,0,7,0,0,0,119,0,96,0,2,8,0,0,126,221,6,0,135,7,0,0,8,0,0,0,119,0,91,0,2,7,0,0,68,225,10,0,82,7,7,0,33,7,7,11,121,7,6,0,2,8,0,0,151,221,6,0,135,7,0,0,8,0,0,0,119,0,81,0,2,7,0,0,48,128,9,0,82,7,7,0,2,8,0,0,0,127,9,0,82,8,8,0,3,7,7,8,27,7,7,5,25,7,7,45,135,8,15,0,47,7,7,8,184,227,0,0,2,8,0,0,29,221,6,0,135,7,0,0,8,0,0,0,1,7,20,0,135,2,1,0,7,0,0,0,1,7,241,255,4,7,7,2,2,8,0,0,28,127,9,0,82,8,8,0,3,2,7,8,2,8,0,0,28,127,9,0,85,8,2,0,1,8,1,0,56,8,8,2,72,228,0,0,2,7,0,0,238,195,6,0,135,8,0,0,7,0,0,0,1,7,232,3,134,8,0,0,116,82,1,0,7,0,0,0,1,7,19,1,134,8,0,0,164,31,1,0,7,0,0,0,119,0,37,0,1,7,0,0,134,8,0,0,72,29,1,0,7,0,0,0,1,1,0,0,1,0,0,0,27,8,0,68,3,8,3,8,41,7,1,2,94,8,8,7,32,8,8,55,121,8,3,0,1,2,11,0,119,0,8,0,25,0,0,1,35,8,0,67,120,8,246,255,35,8,1,16,121,8,3,0,25,1,1,1,119,0,241,255,32,8,2,11,121,8,8,0,2,8,0,0,72,225,10,0,85,8,0,0,2,8,0,0,76,225,10,0,85,8,1,0,135,8,13,0,135,8,5,0,2,8,0,0,96,225,10,0,1,7,1,0,85,8,7,0,119,0,1,0,139,0,0,0,140,1,24,0,0,0,0,0,2,15,0,0,78,184,2,0,2,16,0,0,0,5,0,0,2,17,0,0,1,4,0,0,136,18,0,0,0,13,18,0,136,18,0,0,25,18,18,80,137,18,0,0,0,1,13,0,25,4,13,56,135,5,73,0,25,7,1,16,25,8,7,4,25,9,7,8,25,10,1,20,25,11,4,8,25,12,1,24,25,2,4,4,25,3,4,12,1,19,5,0,135,18,74,0,19,0,0,0,135,18,75,0,1,0,0,0,121,18,51,1,82,18,1,0,1,19,0,3,1,20,2,1,138,18,19,20,224,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,220,232,0,0,8,233,0,0,119,0,40,0,81,14,9,0,82,21,8,0,38,22,14,3,1,23,192,0,19,23,14,23,135,20,76,0,21,22,23,0,135,19,77,0,20,0,0,0,119,0,30,0,78,19,7,0,32,19,19,1,121,19,27,0,135,19,78,0,4,0,0,0,82,19,10,0,82,20,4,0,4,19,19,20,5,19,19,16,82,20,11,0,6,14,19,20,2,20,0,0,56,225,10,0,85,20,14,0,82,20,12,0,82,19,2,0,4,20,20,19,1,19,64,2,5,20,20,19,82,19,3,0,6,6,20,19,2,19,0,0,60,225,10,0,85,19,6,0,135,20,79,0,14,6,0,0,135,19,77,0,20,0,0,0,119,0,1,0,135,18,75,0,1,0,0,0,120,18,208,254,119,0,1,0,135,6,80,0,32,18,6,0,135,19,73,0,4,19,19,5,16,19,19,0,19,18,18,19,120,18,194,254,137,13,0,0,139,6,0,0,140,0,9,0,0,0,0,0,2,3,0,0,212,95,2,0,2,4,0,0,144,128,9,0,2,5,0,0,255,95,2,0,135,6,14,0,1,7,10,0,135,6,30,0,7,0,0,0,1,0,0,0,135,6,14,0,2,7,0,0,247,221,6,0,135,6,0,0,7,0,0,0,2,7,0,0,34,198,6,0,135,6,42,0,7,0,0,0,2,7,0,0,19,222,6,0,135,6,0,0,7,0,0,0,1,6,1,0,1,7,27,0,138,0,6,7,148,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,144,234,0,0,152,234,0,0,119,0,4,0,119,0,1,0,1,2,5,0,119,0,21,0,134,0,0,0,168,81,1,0,32,6,0,32,121,6,6,0,134,0,0,0,220,43,1,0,34,6,0,2,120,6,202,255,135,6,14,0,32,6,0,27,121,6,3,0,1,0,27,0,119,0,197,255,26,1,0,97,37,6,1,25,121,6,3,0,1,2,12,0,119,0,3,0,135,6,43,0,119,0,237,255,32,6,2,5,121,6,6,0,2,7,0,0,159,195,6,0,135,6,0,0,7,0,0,0,119,0,134,0,32,6,2,12,121,6,132,0,41,6,1,2,94,6,4,6,1,7,0,0,1,8,69,0,138,6,7,8,80,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,92,236,0,0,96,236,0,0,100,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,160,236,0,0,164,236,0,0,168,236,0,0,172,236,0,0,176,236,0,0,60,236,0,0,60,236,0,0,60,236,0,0,180,236,0,0,2,8,0,0,147,222,6,0,135,7,0,0,8,0,0,0,119,0,53,0,135,7,64,0,0,0,0,0,119,0,50,0,119,0,2,0,119,0,1,0,2,7,0,0,80,127,9,0,82,7,7,0,32,7,7,255,121,7,6,0,2,7,0,0,80,127,9,0,85,7,1,0,135,7,19,0,119,0,38,0,2,8,0,0,30,222,6,0,135,7,0,0,8,0,0,0,119,0,33,0,119,0,241,255,119,0,240,255,119,0,239,255,119,0,238,255,119,0,237,255,2,7,0,0,252,127,9,0,82,7,7,0,33,7,7,255,121,7,6,0,2,8,0,0,65,222,6,0,135,7,0,0,8,0,0,0,119,0,18,0,2,7,0,0,88,127,9,0,82,7,7,0,41,7,7,2,94,7,4,7,32,7,7,29,121,7,6,0,2,8,0,0,99,222,6,0,135,7,0,0,8,0,0,0,119,0,6,0,2,7,0,0,252,127,9,0,85,7,1,0,135,7,19,0,119,0,1,0,139,0,0,0,140,0,6,0,0,0,0,0,2,3,0,0,214,95,2,0,135,4,14,0,1,5,10,0,135,4,30,0,5,0,0,0,1,0,0,0,135,4,14,0,2,5,0,0,114,252,6,0,135,4,0,0,5,0,0,0,2,5,0,0,144,252,6,0,135,4,42,0,5,0,0,0,2,5,0,0,146,252,6,0,135,4,0,0,5,0,0,0,2,5,0,0,34,198,6,0,135,4,42,0,5,0,0,0,2,5,0,0,19,222,6,0,135,4,0,0,5,0,0,0,1,4,1,0,1,5,27,0,138,0,4,5,24,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,20,238,0,0,28,238,0,0,119,0,4,0,119,0,1,0,1,1,5,0,119,0,43,0,134,0,0,0,168,81,1,0,32,4,0,32,121,4,6,0,134,0,0,0,192,34,1,0,34,4,0,2,120,4,194,255,135,4,14,0,1,4,27,0,1,5,19,0,138,0,4,5,164,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,160,238,0,0,168,238,0,0,119,0,4,0,119,0,169,255,1,1,10,0,119,0,8,0,26,2,0,97,37,4,2,25,121,4,3,0,1,1,13,0,119,0,3,0,135,4,43,0,119,0,215,255,32,4,1,5,121,4,6,0,2,5,0,0,159,195,6,0,135,4,0,0,5,0,0,0,119,0,92,0,32,4,1,10,121,4,7,0,2,4,0,0,88,127,9,0,1,5,255,255,85,4,5,0,135,5,19,0,119,0,84,0,32,5,1,13,121,5,82,0,2,5,0,0,144,128,9,0,41,4,2,2,94,1,5,4,1,4,0,0,1,5,43,0,138,1,4,5,48,240,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,216,239,0,0,60,240,0,0,72,240,0,0,32,5,1,29,2,4,0,0,252,127,9,0,82,4,4,0,33,4,4,255,19,5,5,4,121,5,6,0,2,4,0,0,162,252,6,0,135,5,0,0],eb+51200);HEAPU8.set([4,0,0,0,119,0,20,0,2,5,0,0,88,127,9,0,85,5,2,0,2,5,0,0,240,127,9,0,32,4,1,65,38,4,4,1,85,5,4,0,135,4,19,0,119,0,10,0,135,5,64,0,0,0,0,0,119,0,7,0,135,5,81,0,0,0,0,0,119,0,4,0,135,5,81,0,0,0,0,0,119,0,1,0,139,0,0,0,140,1,15,0,0,0,0,0,2,9,0,0,82,184,2,0,2,10,0,0,212,95,2,0,2,11,0,0,214,95,2,0,136,12,0,0,0,8,12,0,136,12,0,0,25,12,12,16,137,12,0,0,25,5,8,8,0,1,8,0,1,12,25,0,48,12,12,0,168,240,0,0,1,1,0,0,119,0,117,0,2,12,0,0,144,128,9,0,41,13,0,2,3,6,12,13,82,7,6,0,135,13,14,0,120,7,9,0,25,13,0,97,85,1,13,0,2,12,0,0,194,212,6,0,135,13,2,0,12,1,0,0,1,1,1,0,119,0,102,0,2,13,0,0,72,225,10,0,82,3,13,0,2,13,0,0,76,225,10,0,82,4,13,0,2,13,0,0,208,170,9,0,27,12,3,68,3,13,13,12,41,12,4,2,3,1,13,12,82,2,1,0,121,2,12,0,2,12,0,0,0,130,5,0,41,13,2,2,3,12,12,13,116,5,12,0,2,13,0,0,219,212,6,0,135,12,2,0,13,5,0,0,1,1,1,0,119,0,77,0,32,12,3,33,32,13,4,16,19,12,12,13,121,12,3,0,1,1,1,0,119,0,71,0,85,1,7,0,2,12,0,0,0,129,9,0,41,13,0,2,3,1,12,13,2,13,0,0,160,188,9,0,27,12,3,68,3,13,13,12,41,12,4,2,82,14,1,0,97,13,12,14,2,12,0,0,255,212,6,0,135,14,0,0,12,0,0,0,2,14,0,0,172,225,10,0,1,12,0,0,85,14,12,0,1,14,0,0,134,12,0,0,120,201,0,0,0,14,0,0,2,12,0,0,112,206,9,0,2,14,0,0,72,225,10,0,82,14,14,0,27,14,14,68,3,12,12,14,2,14,0,0,76,225,10,0,82,14,14,0,41,14,14,2,1,13,0,0,97,12,14,13,1,13,0,0,85,6,13,0,2,13,0,0,88,127,9,0,82,13,13,0,45,13,13,0,32,242,0,0,2,13,0,0,88,127,9,0,1,14,255,255,85,13,14,0,2,14,0,0,80,127,9,0,82,14,14,0,45,14,14,0,68,242,0,0,2,14,0,0,80,127,9,0,1,13,255,255,85,14,13,0,2,13,0,0,252,127,9,0,82,13,13,0,45,13,13,0,104,242,0,0,2,13,0,0,252,127,9,0,1,14,255,255,85,13,14,0,82,13,1,0,135,14,55,0,7,13,0,0,1,1,0,0,137,8,0,0,139,1,0,0,140,1,10,0,0,0,0,0,136,8,0,0,0,7,8,0,136,8,0,0,1,9,144,0,3,8,8,9,137,8,0,0,1,8,128,0,3,6,7,8,0,5,7,0,1,1,0,0,1,8,0,0,15,2,8,1,34,3,1,9,134,4,0,0,168,81,1,0,1,8,10,0,1,9,33,0,138,4,8,9,88,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,96,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,84,243,0,0,104,243,0,0,119,0,7,0,1,2,18,0,119,0,32,0,1,2,8,0,119,0,30,0,1,2,4,0,119,0,28,0,32,8,4,8,19,8,2,8,121,8,3,0,1,2,13,0,119,0,9,0,26,8,4,48,35,8,8,10,19,8,3,8,121,8,3,0,1,2,15,0,119,0,3,0,135,8,43,0,119,0,199,255,32,8,2,13,121,8,6,0,1,9,8,0,135,8,30,0,9,0,0,0,26,1,1,1,119,0,189,255,32,8,2,15,121,8,187,255,135,8,30,0,4,0,0,0,95,5,1,4,25,1,1,1,119,0,182,255,32,8,2,4,121,8,20,0,1,8,0,0,47,8,8,1,20,244,0,0,1,9,8,0,135,8,30,0,9,0,0,0,1,8,1,0,47,8,8,1,16,244,0,0,26,1,1,1,119,0,249,255,119,0,1,0,85,6,0,0,2,9,0,0,156,195,6,0,135,8,2,0,9,6,0,0,0,1,0,0,119,0,32,0,32,8,2,8,121,8,19,0,1,8,0,0,47,8,8,1,104,244,0,0,1,9,8,0,135,8,30,0,9,0,0,0,1,8,1,0,47,8,8,1,100,244,0,0,26,1,1,1,119,0,249,255,119,0,1,0,2,9,0,0,159,195,6,0,135,8,0,0,9,0,0,0,1,1,0,0,119,0,12,0,32,8,2,18,121,8,10,0,1,9,0,0,95,5,1,9,135,1,82,0,5,0,0,0,1,9,0,0,15,9,9,1,1,8,0,0,125,1,9,1,8,0,0,0,137,7,0,0,139,1,0,0,140,2,7,0,0,0,0,0,1,3,0,0,2,5,0,0,95,223,6,0,135,4,0,0,5,0,0,0,134,4,0,0,168,81,1,0,1,5,66,0,1,6,98,0,138,4,5,6,112,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,116,246,0,0,108,246,0,0,120,246,0,0,124,246,0,0,128,246,0,0,108,246,0,0,132,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,136,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,140,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,144,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,148,246,0,0,108,246,0,0,152,246,0,0,156,246,0,0,160,246,0,0,108,246,0,0,164,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,168,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,172,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,108,246,0,0,176,246,0,0,184,246,0,0,192,246,0,0,200,246,0,0,208,246,0,0,216,246,0,0,224,246,0,0,232,246,0,0,108,246,0,0,108,246,0,0,240,246,0,0,244,246,0,0,248,246,0,0,252,246,0,0,0,247,0,0,4,247,0,0,8,247,0,0,12,247,0,0,119,0,41,0,119,0,26,0,119,0,21,0,119,0,26,0,119,0,15,0,119,0,20,0,119,0,25,0,119,0,14,0,119,0,9,0,119,0,18,0,119,0,13,0,119,0,18,0,119,0,7,0,119,0,12,0,119,0,17,0,119,0,6,0,119,0,1,0,1,3,6,0,119,0,25,0,1,3,7,0,119,0,23,0,1,3,8,0,119,0,21,0,1,3,9,0,119,0,19,0,1,3,10,0,119,0,17,0,1,2,8,0,119,0,15,0,1,3,3,0,119,0,13,0,1,3,4,0,119,0,11,0,119,0,240,255,119,0,241,255,119,0,242,255,119,0,243,255,119,0,244,255,119,0,245,255,119,0,246,255,119,0,247,255,135,4,43,0,119,0,111,255,32,4,3,3,121,4,3,0,1,2,1,0,119,0,24,0,32,4,3,4,121,4,3,0,1,2,7,0,119,0,20,0,32,4,3,6,121,4,3,0,1,2,6,0,119,0,16,0,32,4,3,7,121,4,3,0,1,2,3,0,119,0,12,0,32,4,3,8,121,4,3,0,1,2,5,0,119,0,8,0,32,4,3,9,121,4,3,0,1,2,4,0,119,0,4,0,32,4,3,10,121,4,2,0,1,2,2,0,2,4,0,0,144,191,5,0,41,5,2,2,94,4,4,5,2,5,0,0,72,225,10,0,82,5,5,0,3,4,4,5,85,0,4,0,2,4,0,0,192,191,5,0,41,5,2,2,94,4,4,5,2,5,0,0,76,225,10,0,82,5,5,0,3,4,4,5,85,1,4,0,135,4,4,0,0,1,0,0,139,2,0,0,140,1,15,0,0,0,0,0,2,10,0,0,144,128,9,0,136,11,0,0,0,9,11,0,136,11,0,0,25,11,11,16,137,11,0,0,25,8,9,8,0,2,9,0,2,11,0,0,172,225,10,0,1,12,0,0,85,11,12,0,2,12,0,0,32,127,9,0,82,1,12,0,121,1,13,0,85,2,1,0,2,11,0,0,84,212,6,0,135,12,2,0,11,2,0,0,2,12,0,0,172,225,10,0,2,11,0,0,172,225,10,0,82,11,11,0,25,11,11,1,85,12,11,0,33,5,0,0,1,2,25,0,41,11,2,2,94,11,10,11,121,11,3,0,1,7,5,0,119,0,8,0,1,11,0,0,47,11,11,2,132,248,0,0,26,2,2,1,119,0,247,255,1,7,13,0,119,0,1,0,32,11,7,5,121,11,27,0,34,6,2,0,1,4,22,0,120,6,17,0,1,3,0,0,41,11,3,2,94,11,10,11,45,11,4,11,204,248,0,0,134,1,0,0,120,201,0,0,3,0,0,0,33,11,1,0,19,11,5,11,120,11,13,0,47,11,3,2,220,248,0,0,25,3,3,1,119,0,243,255,119,0,1,0,25,4,4,1,1,11,84,0,50,11,11,4,248,248,0,0,1,7,13,0,119,0,2,0,119,0,233,255,32,11,7,13,121,11,17,0,2,11,0,0,64,225,10,0,82,1,11,0,28,11,1,100,85,8,11,0,1,12,48,117,4,12,12,1,28,12,12,100,109,8,4,12,2,11,0,0,102,212,6,0,135,12,2,0,11,8,0,0,134,1,0,0,196,57,1,0,0,0,0,0,137,9,0,0,32,11,0,0,121,11,4,0,1,11,0,0,0,12,11,0,119,0,7,0,1,13,0,0,15,13,13,1,1,14,0,0,125,11,13,1,14,0,0,0,0,12,11,0,139,12,0,0,140,0,11,0,0,0,0,0,2,5,0,0,200,95,2,0,2,6,0,0,188,194,6,0,2,7,0,0,81,195,6,0,1,3,0,0,136,8,0,0,0,4,8,0,136,8,0,0,25,8,8,16,137,8,0,0,0,2,4,0,135,8,0,0,6,0,0,0,2,8,0,0,32,127,9,0,82,8,8,0,134,0,0,0,128,242,0,0,8,0,0,0,120,0,3,0,1,3,3,0,119,0,100,0,2,8,0,0,32,127,9,0,82,1,8,0,56,8,0,1,40,250,0,0,135,8,0,0,7,0,0,0,135,8,0,0,6,0,0,0,2,8,0,0,32,127,9,0,82,8,8,0,134,0,0,0,128,242,0,0,8,0,0,0,120,0,241,255,1,3,3,0,119,0,82,0,85,2,0,0,2,9,0,0,214,194,6,0,135,8,2,0,9,2,0,0,2,8,0,0,32,127,9,0,2,9,0,0,32,127,9,0,82,9,9,0,4,9,9,0,85,8,9,0,135,9,19,0,28,9,1,10,49,9,9,0,40,251,0,0,1,8,50,0,135,9,1,0,8,0,0,0,49,9,9,0,40,251,0,0,1,9,50,0,1,10,101,0,135,8,1,0,10,0,0,0,47,9,9,8,156,250,0,0,135,9,83,0,119,0,53,0,1,8,43,0,135,9,1,0,8,0,0,0,32,9,9,5,121,9,11,0,2,9,0,0,80,127,9,0,82,9,9,0,121,9,5,0,2,8,0,0,241,194,6,0,135,9,0,0,8,0,0,0,135,9,36,0,119,0,38,0,1,8,43,0,135,9,1,0,8,0,0,0,33,9,9,8,121,9,6,0,2,8,0,0,70,195,6,0,135,9,0,0,8,0,0,0,119,0,28,0,2,9,0,0,88,127,9,0,82,9,9,0,121,9,5,0,2,8,0,0,27,195,6,0,135,9,0,0,8,0,0,0,135,9,37,0,119,0,18,0,2,10,0,0,68,225,10,0,82,10,10,0,25,10,10,1,135,8,7,0,10,0,0,0,134,9,0,0,132,251,0,0,8,0,0,0,2,9,0,0,152,127,9,0,2,8,0,0,152,127,9,0,82,8,8,0,1,10,200,0,3,8,8,10,85,9,8,0,32,8,3,3,121,8,3,0,134,8,0,0,100,69,1,0,137,4,0,0,139,0,0,0,140,1,15,0,0,0,0,0,2,8,0,0,144,191,5,0,2,9,0,0,192,191,5,0,2,10,0,0,144,132,9,0,136,11,0,0,0,7,11,0,136,11,0,0,25,11,11,16,137,11,0,0,0,1,7,0,1,11,63,0,26,12,0,1,48,11,11,12,244,251,0,0,85,1,0,0,2,12,0,0,100,194,6,0,135,11,2,0,12,1,0,0,1,12,184,11,134,11,0,0,116,82,1,0,12,0,0,0,119,0,92,0,34,12,0,56,121,12,6,0,41,12,0,2,94,12,10,12,33,12,12,0,0,11,12,0,119,0,3,0,1,12,0,0,0,11,12,0,121,11,3,0,25,0,0,1,119,0,245,255,1,11,8,0,135,1,1,0,11,0,0,0,2,11,0,0,72,225,10,0,82,6,11,0,2,11,0,0,76,225,10,0,82,3,11,0,1,2,248,255,1,11,8,0,15,11,11,1,1,12,1,0,125,1,11,12,1,0,0,0,41,12,1,2,94,12,8,12,3,4,12,6,41,12,1,2,94,12,9,12,3,5,12,3,1,11,0,0,1,13,1,0,135,12,84,0,4,5,11,13,120,12,6,0,34,12,2,255,121,12,52,0,25,1,1,1,25,2,2,1,119,0,236,255,2,12,0,0,0,153,9,0,27,13,4,68,3,12,12,13,41,13,5,2,97,12,13,0,2,13,0,0,48,135,9,0,27,12,4,68,3,13,13,12,41,12,5,2,2,11,0,0,128,136,5,0,27,14,0,40,3,11,11,14,106,11,11,32,97,13,12,11,2,11,0,0,224,92,10,0,27,12,4,68,3,11,11,12,41,12,5,2,3,1,11,12,1,12,0,0,85,1,12,0,2,12,0,0,112,206,9,0,27,11,4,68,3,12,12,11,41,11,5,2,3,6,12,11,82,11,6,0,38,11,11,253,85,6,11,0,1,11,36,0,1,12,5,0,138,0,11,12,76,253,0,0,72,253,0,0,80,253,0,0,72,253,0,0,84,253,0,0,119,0,6,0,119,0,3,0,119,0,2,0,119,0,1,0,1,11,1,0,85,1,11,0,137,7,0,0,139,0,0,0,140,0,10,0,0,0,0,0,2,5,0,0,200,95,2,0,2,6,0,0,232,3,0,0,136,7,0,0,0,4,7,0,136,7,0,0,25,7,7,32,137,7,0,0,25,3,4,16,25,2,4,8,0,1,4,0,135,7,45,0,1,8,1,0,1,9,8,0,135,7,27,0,8,9,0,0,2,9,0,0,59,228,6,0,135,7,0,0,9,0,0,0,135,0,16,0,1,7,0,0,47,7,7,0,236,253,0,0,85,1,0,0,2,9,0,0,122,228,6,0,135,7,2,0,9,1,0,0,119,0,5,0,2,9,0,0,155,228,6,0,135,7,0,0,9,0,0,0,2,9,0,0,183,228,6,0,135,7,0,0,9,0,0,0,2,7,0,0,32,127,9,0,82,0,7,0,1,7,0,0,47,7,7,0,60,254,0,0,85,2,0,0,2,9,0,0,190,228,6,0,135,7,2,0,9,2,0,0,119,0,5,0,2,9,0,0,214,228,6,0,135,7,0,0,9,0,0,0,2,9,0,0,238,228,6,0,135,7,0,0,9,0,0,0,2,9,0,0,12,229,6,0,135,7,42,0,9,0,0,0,2,9,0,0,14,229,6,0,135,7,0,0,9,0,0,0,2,9,0,0,178,211,6,0,135,7,42,0,9,0,0,0,2,9,0,0,31,229,6,0,135,7,0,0,9,0,0,0,134,7,0,0,168,81,1,0,1,9,27,0,1,8,86,0,138,7,9,8,12,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,8,0,1,0,16,0,1,0,119,0,3,0,119,0,50,0,119,0,3,0,135,7,43,0,119,0,161,255,2,9,0,0,34,229,6,0,135,7,0,0,9,0,0,0,2,7,0,0,32,127,9,0,82,7,7,0,134,0,0,0,128,242,0,0,7,0,0,0,2,9,0,0,58,229,6,0,135,7,0,0,9,0,0,0,2,7,0,0,32,127,9,0,82,7,7,0,47,7,7,0,136,0,1,0,2,9,0,0,63,229,6,0,135,7,0,0,9,0,0,0,134,7,0,0,116,82,1,0,6,0,0,0,119,0,71,255,134,0,0,0,28,64,1,0,0,0,0,0,2,7,0,0,32,127,9,0,2,9,0,0,32,127,9,0,82,9,9,0,4,9,9,0,85,7,9,0,85,3,0,0,2,7,0,0,88,229,6,0,135,9,2,0,7,3,0,0,134,9,0,0,116,82,1,0,6,0,0,0,119,0,52,255,135,9,5,0,137,4,0,0,139,0,0,0,140,0,8,0,0,0,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,0,2,3,0,135,4,14,0,2,5,0,0,32,5,7,0,135,4,0,0,5,0,0,0,134,0,0,0,168,81,1,0,135,4,85,0,0,0,0,0,120,4,7,0,135,4,43,0,134,0,0,0,168,81,1,0,135,4,85,0,0,0,0,0,121,4,251,255,135,4,30,0,0,0,0,0,1,1,0,0,2,4,0,0,112,135,5,0,41,5,1,2,94,4,4,5,45,4,4,0,108,1,1,0,1,0,6,0,119,0,8,0,25,1,1,1,1,4,56,0,50,4,4,1,132,1,1,0,1,0,16,0,119,0,2,0,119,0,242,255,32,4,0,6,121,4,98,0,2,4,0,0,144,132,9,0,41,5,1,2,1,6,1,0,97,4,5,6,2,5,0,0,57,5,7,0,135,6,2,0,5,2,0,0,2,6,0,0,255,255,255,127,19,6,1,6,1,5,9,0,1,4,33,0,138,6,5,4,124,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,144,2,1,0,80,2,1,0,164,2,1,0,80,2,1,0,80,2,1,0,184,2,1,0,80,2,1,0,204,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,80,2,1,0,224,2,1,0,2,4,0,0,128,136,5,0,27,7,1,40,94,4,4,7,135,5,0,0,4,0,0,0,2,4,0,0,143,236,6,0,135,5,0,0,4,0,0,0,119,0,31,0,2,4,0,0,203,191,6,0,135,5,0,0,4,0,0,0,119,0,26,0,2,4,0,0,89,192,6,0,135,5,0,0,4,0,0,0,119,0,21,0,2,4,0,0,83,5,7,0,135,5,0,0,4,0,0,0,119,0,16,0,2,4,0,0,89,5,7,0,135,5,0,0,4,0,0,0,119,0,11,0,2,4,0,0,151,192,6,0,135,5,0,0,4,0,0,0,119,0,6,0,2,4,0,0,98,5,7,0,135,5,0,0,4,0,0,0,119,0,1,0,2,5,0,0,68,225,10,0,82,5,5,0,134,6,0,0,72,29,1,0,5,0,0,0,135,6,5,0,119,0,7,0,32,6,0,16,121,6,5,0,2,5,0,0,115,5,7,0,135,6,0,0,5,0,0,0,137,3,0,0,139,0,0,0,140,0,14,0,0,0,0,0,2,9,0,0,255,255,255,127,1,8,0,0,135,10,45,0,2,0,0,0,83,7,7,0,1,7,0,0,25,2,7,3,35,3,7,13,35,4,7,15,0,1,0,0,1,6,0,0,78,5,1,0,25,1,1,1,41,10,5,24,42,10,10,24,0,5,10,0,32,11,5,35,121,11,4,0,1,11,28,0,0,10,11,0,119,0,2,0,0,10,5,0,0,5,10,0,19,10,6,9,1,11,0,0,1,12,47,0,138,10,11,12,12,5,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,104,4,1,0,20,5,1,0,19,11,7,9,1,12,0,0,1,13,19,0,138,11,12,13,200,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,196,4,1,0,204,4,1,0,119,0,4,0,119,0,1,0,1,8,5,0,119,0,18,0,121,3,5,0,1,12,4,0,135,11,48,0,12,0,0,0,119,0,13,0,121,4,5,0,1,12,1,0,135,11,48,0,12,0,0,0,119,0,8,0,1,12,8,0,135,11,48,0,12,0,0,0,119,0,4,0,1,8,5,0,119,0,2,0,119,0,254,255,32,10,8,5,121,10,5,0,1,8,0,0,1,11,1,0,135,10,48,0,11,0,0,0,25,11,6,17,135,10,27,0,11,2,0,0,135,10,30,0,5,0,0,0,25,6,6,1,33,10,6,47,120,10,136,255,25,7,7,1,32,10,7,19,120,10,3,0,25,0,0,47,119,0,126,255,1,11,51,0,1,12,19,0,135,10,27,0,11,12,0,0,134,10,0,0,168,81,1,0,135,10,51,0,135,10,45,0,139,0,0,0,140,0,9,0,0,0,0,0,2,2,0,0,6,96,2,0,2,3,0,0,200,0,0,0,2,4,0,0,215,243,6,0,135,5,14,0,2,5,0,0,208,170,9,0,2,6,0,0,72,225,10,0,82,6,6,0,27,6,6,68,3,5,5,6,2,6,0,0,76,225,10,0,82,6,6,0,41,6,6,2,94,5,5,6,1,7,7,0,1,8,11,0,138,5,7,8,40,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,20,6,1,0,176,7,1,0,2,8,0,0,91,243,6,0,135,7,0,0,8,0,0,0,119,0,104,0,2,7,0,0,130,243,6,0,135,6,0,0,7,0,0,0,1,7,221,5,135,6,1,0,7,0,0,0,34,6,6,2,121,6,14,0,2,7,0,0,164,243,6,0,135,6,0,0,7,0,0,0,1,7,232,3,134,6,0,0,116,82,1,0,7,0,0,0,1,7,24,1,134,6,0,0,164,31,1,0,7,0,0,0,119,0,82,0,1,6,100,0,135,0,1,0,6,0,0,0,34,6,0,7,121,6,14,0,135,6,1,0,3,0,0,0,3,0,6,3,2,6,0,0,24,128,9,0,2,7,0,0,24,128,9,0,82,7,7,0,3,7,0,7,85,6,7,0,135,7,0,0,4,0,0,0,119,0,29,0,34,7,0,13,121,7,7,0,1,6,23,0,1,8,0,0,134,7,0,0,8,68,0,0,6,8,0,0,119,0,21,0,34,7,0,45,121,7,6,0,2,8,0,0,246,243,6,0,135,7,0,0,8,0,0,0,119,0,14,0,1,8,3,0,135,7,1,0,8,0,0,0,32,7,7,2,121,7,5,0,1,8,255,255,135,7,86,0,8,0,0,0,119,0,5,0,1,8,1,0,135,7,86,0,8,0,0,0,119,0,1,0,1,8,12,0,135,7,1,0,8,0,0,0,34,7,7,3,121,7,31,0,2,8,0,0,22,244,6,0,135,7,0,0,8,0,0,0,2,7,0,0,72,225,10,0,82,1,7,0,2,7,0,0,76,225,10,0,82,0,7,0,2,7,0,0,208,170,9,0,27,8,1,68,3,7,7,8,41,8,0,2,1,6,17,0,97,7,8,6,2,6,0,0,112,206,9,0,27,8,1,68,3,6,6,8,41,8,0,2,1,7,0,0,97,6,8,7,119,0,6,0,2,7,0,0,62,243,6,0,135,6,0,0,7,0,0,0,119,0,1,0,139,0,0,0,140,0,11,0,0,0,0,0,2,4,0,0,83,184,2,0,2,5,0,0,82,184,2,0,2,6,0,0,208,170,9,0,136,7,0,0,0,3,7,0,136,7,0,0,25,7,7,16,137,7,0,0,25,0,3,4,0,1,3,0,135,7,14,0,2,7,0,0,120,127,9,0,82,7,7,0,120,7,114,0,2,7,0,0,72,225,10,0,82,7,7,0,27,7,7,68,3,7,6,7,2,8,0,0,76,225,10,0,82,8,8,0,41,8,8,2,94,7,7,8,32,7,7,44,121,7,46,0,2,8,0,0,8,223,6,0,135,7,0,0,8,0,0,0,134,7,0,0,236,77,1,0,1,8,110,0,1,10,12,0,138,7,8,10,176,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,156,8,1,0,196,8,1,0,2,10,0,0,159,195,6,0,135,8,0,0,10,0,0,0,119,0,80,0,2,10,0,0,17,212,6,0,135,8,0,0,10,0,0,0,119,0,15,0,2,9,0,0,42,223,6,0,135,8,0,0,9,0,0,0,2,9,0,0,72,225,10,0,82,9,9,0,2,10,0,0,76,225,10,0,82,10,10,0,134,8,0,0,136,217,0,0,9,10,0,0,119,0,61,0,134,7,0,0,180,244,0,0,0,1,0,0,82,2,0,0,82,0,1,0,27,7,2,68,3,7,6,7,41,8,0,2,94,7,7,8,1,8,19,0,1,10,26,0,138,7,8,10,168,9,1,0,188,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,148,9,1,0,204,9,1,0,2,10,0,0,73,223,6,0,135,8,0,0,10,0,0,0,119,0,18,0,2,10,0,0,46,223,6,0,135,8,0,0,10,0,0,0,119,0,13,0,134,8,0,0,212,14,1,0,2,0,0,0,119,0,9,0,134,8,0,0,136,217,0,0,2,0,0,0,119,0,5,0,2,8,0,0,242,222,6,0,135,7,0,0,8,0,0,0,137,3,0,0,139,0,0,0,140,0,10,0,0,0,0,0,2,4,0,0,27,198,6,0,2,5,0,0,34,198,6,0,2,6,0,0,0,125,5,0,1,1,1,0,135,7,45,0,27,2,1,23,1,0,0,0,3,7,0,2,41,7,7,2,94,3,6,7,121,3,8,0,120,0,4,0,135,7,42,0,3,0,0,0,119,0,4,0,135,7,0,0,3,0,0,0,119,0,1,0,2,8,0,0,15,212,6,0,135,7,0,0,8,0,0,0,25,0,0,1,33,7,0,23,120,7,239,255,35,7,1,4,121,7,34,0,135,7,0,0,4,0,0,0,135,7,42,0,5,0,0,0,2,8,0,0,163,211,6,0,135,7,0,0,8,0,0,0,2,8,0,0,178,211,6,0,135,7,42,0,8,0,0,0,2,8,0,0,12,213,6,0,135,7,0,0,8,0,0,0,134,7,0,0,168,81,1,0,1,8,27,0,1,9,6,0,138,7,8,9,228,10,1,0,224,10,1,0,224,10,1,0,224,10,1,0,224,10,1,0,236,10,1,0,119,0,4,0,1,0,11,0,119,0,11,0,119,0,3,0,135,7,43,0,119,0,240,255,25,1,1,1,1,7,5,0,50,7,7,1,16,11,1,0,1,0,14,0,119,0,2,0,119,0,194,255,32,7,0,11,121,7,3,0,135,7,5,0,119,0,22,0,32,7,0,14,121,7,20,0,135,7,14,0,135,7,0,0,4,0,0,0,135,7,42,0,5,0,0,0,2,8,0,0,208,196,6,0,135,7,0,0,8,0,0,0,134,7,0,0,168,81,1,0,33,7,7,32,121,7,6,0,135,7,43,0,134,7,0,0,168,81,1,0,33,7,7,32,120,7,252,255,135,7,5,0,139,0,0,0,140,0,15,0,0,0,0,0,2,8,0,0,193,95,2,0,2,9,0,0,81,184,2,0,2,10,0,0,144,191,5,0,136,11,0,0,0,6,11,0,136,11,0,0,1,12,144,1,3,11,11,12,137,11,0,0,0,4,6,0,2,12,0,0,160,133,9,0,1,13,144,1,135,11,47,0,4,12,13,0,1,3,0,0,27,11,3,20,3,2,4,11,0,5,2,0,25,2,2,16,82,0,2,0,121,0,60,0,27,11,3,20,3,11,4,11,106,11,11,8,2,13,0,0,68,225,10,0,82,13,13,0,45,11,11,13,212,12,1,0,32,11,0,1,121,11,8,0,82,13,5,0,27,12,3,20,3,12,4,12,106,12,12,4,135,11,52,0,13,12,0,0,119,0,43,0,26,1,0,1,85,2,1,0,2,11,0,0,4,127,9,0,82,11,11,0,42,11,11,1,0,2,11,0,27,11,3,20,3,11,4,11,25,0,11,12,1,13,7,0,15,13,13,2,1,14,7,0,125,12,13,2,14,0,0,0,135,11,1,0,12,0,0,0,26,11,11,1,35,11,11,2,121,11,5,0,1,11,8,0,135,2,1,0,11,0,0,0,85,0,2,0,82,7,5,0,27,11,3,20,3,11,4,11,106,2,11,4,135,11,52,0,7,2,0,0,82,5,0,0,41,12,5,2,94,12,10,12,3,12,12,7,2,14,0,0,192,191,5,0,41,13,5,2,94,14,14,13,3,14,14,2,134,11,0,0,244,178,0,0,12,14,5,1,25,3,3,1,33,11,3,20,120,11,189,255,137,6,0,0,139,0,0,0,140,0,10,0,0,0,0,0,2,4,0,0,232,3,0,0,2,5,0,0,199,95,2,0,2,6,0,0,81,184,2,0,136,7,0,0,0,1,7,0,136,7,0,0,25,7,7,16,137,7,0,0,0,0,1,0,1,8,101,0,135,7,1,0,8,0,0,0,36,7,7,80,121,7,103,0,1,7,70,0,135,3,1,0,7,0,0,0,2,7,0,0,16,127,9,0,82,7,7,0,27,2,7,9,135,7,15,0,4,7,2,7,47,7,7,3,204,14,1,0,1,8,101,0,135,7,1,0,8,0,0,0,36,7,7,4,121,7,87,0,2,7,0,0,68,225,10,0,82,7,7,0,1,8,10,0,1,9,4,0,138,7,8,9,160,13,1,0,156,13,1,0,156,13,1,0,164,13,1,0,119,0,14,0,119,0,1,0,2,9,0,0,65,220,6,0,135,8,0,0,9,0,0,0,134,8,0,0,116,82,1,0,4,0,0,0,1,9,6,1,134,8,0,0,164,31,1,0,9,0,0,0,119,0,63,0,1,8,101,0,135,7,1,0,8,0,0,0,34,7,7,20,121,7,9,0,2,8,0,0,98,220,6,0,135,7,0,0,8,0,0,0,134,7,0,0,116,82,1,0,4,0,0,0,119,0,38,0,2,7,0,0,68,225,10,0,82,7,7,0,27,7,7,3,25,7,7,3,135,3,1,0,7,0,0,0,85,0,3,0,2,8,0,0,163,220,6,0,135,7,2,0,8,0,0,0,2,7,0,0,28,127,9,0,82,7,7,0,4,3,7,3,2,7,0,0,28,127,9,0,85,7,3,0,34,7,3,1,121,7,13,0,2,8,0,0,238,195,6,0,135,7,0,0,8,0,0,0,134,7,0,0,116,82,1,0,4,0,0,0,1,8,5,1,134,7,0,0,164,31,1,0,8,0,0,0,119,0,5,0,134,7,0,0,116,82,1,0,4,0,0,0,119,0,1,0,2,8,0,0,68,225,10,0,82,8,8,0,25,8,8,1,134,7,0,0,72,29,1,0,8,0,0,0,135,7,5,0,2,7,0,0,96,225,10,0,1,8,1,0,85,7,8,0,137,1,0,0,139,0,0,0,140,2,8,0,0,0,0,0,2,2,0,0,192,95,2,0,2,3,0,0,199,95,2,0,2,4,0,0,230,95,2,0,1,6,11,0,135,5,1,0,6,0,0,0,34,5,5,7,121,5,91,0,2,5,0,0,160,188,9,0,27,6,0,68,3,5,5,6,41,6,1,2,94,5,5,6,1,6,6,0,1,7,4,0,138,5,6,7,84,15,1,0,148,15,1,0,16,16,1,0,44,16,1,0,2,7,0,0,111,198,6,0,135,6,0,0,7,0,0,0,1,0,0,0,119,0,91,0,2,7,0,0,111,198,6,0,135,6,0,0,7,0,0,0,1,6,144,1,135,0,1,0,6,0,0,0,2,6,0,0,152,127,9,0,2,7,0,0,152,127,9,0,82,7,7,0,3,7,7,0,85,6,7,0,1,0,0,0,119,0,75,0,2,6,0,0,161,198,6,0,135,7,0,0,6,0,0,0,1,7,20,0,135,1,1,0,7,0,0,0,2,7,0,0,28,127,9,0,82,7,7,0,4,1,7,1,2,7,0,0,28,127,9,0,85,7,1,0,34,7,1,1,121,7,13,0,2,6,0,0,238,195,6,0,135,7,0,0,6,0,0,0,1,6,232,3,134,7,0,0,116,82,1,0,6,0,0,0,1,6,18,1,134,7,0,0,164,31,1,0,6,0,0,0,135,7,19,0,1,0,0,0,119,0,44,0,2,6,0,0,198,198,6,0,135,7,0,0,6,0,0,0,135,7,23,0,1,0,0,0,119,0,37,0,2,6,0,0,216,198,6,0,135,7,0,0,6,0,0,0,2,7,0,0,0,127,9,0,82,0,7,0,1,7,3,0,47,7,7,0,100,16,1,0,2,7,0,0,0,127,9,0,26,6,0,1,85,7,6,0,135,6,19,0,1,0,0,0,119,0,20,0,2,6,0,0,242,198,6,0,135,5,0,0,6,0,0,0,2,5,0,0,112,206,9,0,27,6,0,68,3,5,5,6,41,6,1,2,1,7,0,0,97,5,6,7,2,7,0,0,208,170,9,0,27,6,0,68,3,7,7,6,41,6,1,2,1,5,19,0,97,7,6,5,1,0,1,0,139,0,0,0,140,0,8,0,0,0,0,0,2,1,0,0,199,95,2,0,2,2,0,0,81,184,2,0,2,3,0,0,88,184,2,0,135,4,14,0,2,4,0,0,208,170,9,0,2,5,0,0,72,225,10,0,82,5,5,0,27,5,5,68,3,4,4,5,2,5,0,0,76,225,10,0,82,5,5,0,41,5,5,2,94,4,4,5,1,6,5,0,1,5,51,0,138,4,6,5,0,18,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,20,18,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,236,17,1,0,168,18,1,0,2,5,0,0,63,221,6,0,135,6,0,0,5,0,0,0,119,0,105,0,2,6,0,0,217,220,6,0,135,5,0,0,6,0,0,0,119,0,100,0,2,5,0,0,68,225,10,0,82,0,5,0,1,6,0,0,1,5,14,0,138,0,6,5,140,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,100,18,1,0,144,18,1,0,100,18,1,0,100,18,1,0,148,18,1,0,25,6,0,1,134,5,0,0,72,29,1,0,6,0,0,0,135,5,5,0,2,5,0,0,96,225,10,0,1,6,1,0,85,5,6,0,119,0,70,0,119,0,2,0,119,0,1,0,2,6,0,0,94,221,6,0,135,5,0,0,6,0,0,0,119,0,63,0,2,5,0,0,68,225,10,0,82,5,5,0,121,5,6,0,2,6,0,0,244,220,6,0,135,5,0,0,6,0,0,0,119,0,54,0,135,5,15,0,2,6,0,0,48,128,9,0,82,6,6,0,2,7,0,0,0,127,9,0,82,7,7,0,3,6,6,7,27,6,6,3,25,6,6,45,49,5,5,6,36,19,1,0,1,6,11,0,134,5,0,0,72,29,1,0,6,0,0,0,135,5,5,0,2,5,0,0,96,225,10,0,1,6,1,0,85,5,6,0,119,0,32,0,2,5,0,0,29,221,6,0,135,6,0,0,5,0,0,0,1,6,226,255,1,7,20,0,135,5,1,0,7,0,0,0,4,6,6,5,2,5,0,0,28,127,9,0,82,5,5,0,3,0,6,5,2,5,0,0,28,127,9,0,85,5,0,0,34,5,0,1,121,5,14,0,2,6,0,0,238,195,6,0,135,5,0,0,6,0,0,0,1,6,232,3,134,5,0,0,116,82,1,0,6,0,0,0,1,6,19,1,134,5,0,0,164,31,1,0,6,0,0,0,119,0,1,0,139,0,0,0,140,0,7,0,0,0,0,0,2,3,0,0,199,95,2,0,136,4,0,0,0,1,4,0,136,4,0,0,25,4,4,16,137,4,0,0,0,0,1,0,135,4,14,0,2,4,0,0,208,170,9,0,2,5,0,0,72,225,10,0,82,5,5,0,27,5,5,68,3,4,4,5,2,5,0,0,76,225,10,0,82,5,5,0,41,5,5,2,94,4,4,5,1,5,7,0,1,6,11,0,138,4,5,6,76,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,56,20,1,0,140,21,1,0,2,6,0,0,2,253,6,0,135,5,0,0,6,0,0,0,119,0,86,0,2,6,0,0,38,253,6,0,135,5,0,0,6,0,0,0,1,6,100,0,135,5,1,0,6,0,0,0,34,5,5,11,121,5,37,0,2,5,0,0,68,225,10,0,82,5,5,0,41,5,5,2,39,5,5,2,135,2,1,0,5,0,0,0,85,0,2,0,2,6,0,0,64,253,6,0,135,5,2,0,6,0,0,0,2,5,0,0,28,127,9,0,82,5,5,0,4,0,5,2,2,5,0,0,28,127,9,0,85,5,0,0,34,5,0,1,121,5,13,0,2,6,0,0,238,195,6,0,135,5,0,0,6,0,0,0,1,6,232,3,134,5,0,0,116,82,1,0,6,0,0,0,1,6,17,1,134,5,0,0,164,31,1,0,6,0,0,0,135,5,19,0,135,5,14,0,119,0,41,0,1,6,100,0,135,5,1,0,6,0,0,0,34,5,5,29,121,5,6,0,2,6,0,0,118,253,6,0,135,5,0,0,6,0,0,0,119,0,31,0,1,6,100,0,135,5,1,0,6,0,0,0,34,5,5,31,121,5,6,0,2,6,0,0,141,253,6,0,135,5,0,0,6,0,0,0,119,0,21,0,1,6,100,0,135,5,1,0,6,0,0,0,34,5,5,34,121,5,6,0,1,6,47,0,134,5,0,0,132,251,0,0,6,0,0,0,119,0,11,0,2,6,0,0,246,243,6,0,135,5,0,0,6,0,0,0,119,0,6,0,2,6,0,0,227,252,6,0,135,5,0,0,6,0,0,0,119,0,1,0,137,1,0,0,139,0,0,0,140,0,10,0,0,0,0,0,2,5,0,0,90,184,2,0,2,6,0,0,231,3,0,0,2,7,0,0,216,6,7,0,136,8,0,0,0,4,8,0,136,8,0,0,25,8,8,16,137,8,0,0,0,3,4,0,2,8,0,0,116,225,10,0,82,8,8,0,120,8,79,0,2,8,0,0,104,225,10,0,82,0,8,0,1,8,0,0,47,8,8,0,40,22,1,0,2,8,0,0,104,225,10,0,26,9,0,1,85,8,9,0,2,9,0,0,180,225,10,0,82,0,9,0,119,0,74,0,2,9,0,0,104,225,10,0,1,8,0,0,85,9,8,0,1,9,1,0,135,8,87,0,9,0,0,0,135,8,34,0,134,0,0,0,168,81,1,0,2,8,0,0,104,225,10,0,82,2,8,0,26,8,0,48,35,8,8,10,121,8,37,0,1,1,1,0,26,8,0,48,27,9,2,10,3,2,8,9,15,9,2,6,125,2,9,2,6,0,0,0,2,9,0,0,104,225,10,0,85,9,2,0,1,9,9,0,47,9,9,2,208,22,1,0,135,9,14,0,121,1,5,0,2,8,0,0,15,212,6,0,135,9,0,0,8,0,0,0,2,9,0,0,104,225,10,0,82,9,9,0,85,3,9,0,135,9,2,0,7,3,0,0,1,1,0,0,134,0,0,0,168,81,1,0,2,9,0,0,104,225,10,0,82,2,9,0,26,9,0,48,35,9,9,10,120,9,224,255,0,1,2,0,119,0,2,0,0,1,2,0,1,9,0,0,47,9,9,1,24,23,1,0,2,9,0,0,104,225,10,0,26,8,1,1,85,9,8,0,2,8,0,0,180,225,10,0,85,8,0,0,119,0,10,0,2,8,0,0,116,225,10,0,1,9,0,0,85,8,9,0,2,9,0,0,104,225,10,0,1,8,0,0,85,9,8,0,1,0,32,0,137,4,0,0,139,0,0,0,140,0,9,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,32,137,6,0,0,25,0,5,24,0,1,5,0,2,6,0,0,52,198,6,0,2,7,0,0,199,69,7,0,135,2,88,0,6,7,0,0,120,2,3,0,1,4,12,0,119,0,68,0,1,6,21,0,1,8,1,0,135,7,89,0,1,6,8,2,32,7,7,1,121,7,59,0,1,8,4,0,1,6,1,0,135,7,89,0,0,8,6,2,32,7,7,1,121,7,53,0,135,7,90,0,2,0,0,0,2,6,0,0,192,128,7,0,135,7,46,0,1,6,0,0,121,7,3,0,1,4,12,0,119,0,47,0,82,7,0,0,25,0,7,25,135,2,91,0],eb+61440);HEAPU8.set([0,0,0,0,120,2,3,0,1,4,12,0,119,0,40,0,2,7,0,0,52,198,6,0,2,6,0,0,199,69,7,0,135,3,88,0,7,6,0,0,120,3,5,0,135,6,92,0,2,0,0,0,1,4,12,0,119,0,29,0,1,7,1,0,135,6,89,0,2,0,7,3,32,6,6,1,121,6,12,0,2,6,0,0,144,235,10,0,1,7,1,0,85,6,7,0,2,7,0,0,148,235,10,0,25,6,2,25,85,7,6,0,1,1,1,0,135,0,93,0,119,0,3,0,1,1,0,0,1,0,0,0,135,6,90,0,3,0,0,0,135,6,92,0,2,0,0,0,120,1,6,0,1,4,12,0,119,0,4,0,135,6,90,0,2,0,0,0,1,4,12,0,32,6,4,12,121,6,3,0,135,6,94,0,1,0,0,0,1,7,0,0,134,6,0,0,88,26,1,0,7,0,0,0,137,5,0,0,139,0,0,0,140,0,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,1,8,128,0,3,7,7,8,137,7,0,0,0,4,6,0,2,8,0,0,59,212,6,0,135,7,0,0,8,0,0,0,1,0,0,0,1,7,0,0,15,1,7,0,34,2,0,20,134,3,0,0,168,81,1,0,1,7,10,0,1,8,18,0,138,3,7,8,124,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,120,25,1,0,132,25,1,0,119,0,5,0,1,5,10,0,119,0,34,0,0,0,4,0,119,0,32,0,32,7,3,8,19,7,1,7,121,7,3,0,1,5,5,0,119,0,10,0,135,7,95,0,3,0,0,0,33,7,7,0,19,7,2,7,121,7,3,0,1,5,8,0,119,0,3,0,135,7,43,0,119,0,215,255,32,7,5,5,121,7,7,0,1,5,0,0,1,8,8,0,135,7,30,0,8,0,0,0,26,0,0,1,119,0,204,255,32,7,5,8,121,7,202,255,1,5,0,0,1,8,42,0,135,7,30,0,8,0,0,0,95,4,0,3,25,0,0,1,119,0,195,255,32,7,5,10,121,7,2,0,3,0,4,0,1,7,0,0,83,0,7,0,2,8,0,0,68,28,6,0,82,8,8,0,135,7,46,0,4,8,0,0,120,7,3,0,1,0,1,0,119,0,6,0,2,8,0,0,77,212,6,0,135,7,0,0,8,0,0,0,1,0,0,0,137,6,0,0,139,0,0,0,140,1,12,0,0,0,0,0,2,7,0,0,144,235,10,0,1,8,0,0,85,7,8,0,2,8,0,0,148,235,10,0,1,7,0,0,85,8,7,0,135,7,96,0,0,0,0,0,2,7,0,0,148,235,10,0,82,1,7,0,25,5,1,25,135,6,91,0,5,0,0,0,120,6,5,0,134,7,0,0,164,82,1,0,1,1,1,0,119,0,53,0,0,2,6,0,2,3,0,0,192,128,7,0,25,4,2,21,78,7,3,0,83,2,7,0,25,2,2,1,25,3,3,1,54,7,2,4,196,26,1,0,25,4,6,21,83,4,1,0,42,8,1,8,107,4,1,8,42,7,1,16,107,4,2,7,42,8,1,24,107,4,3,8,2,8,0,0,144,235,10,0,1,7,1,0,85,8,7,0,2,7,0,0,148,235,10,0,25,8,6,25,85,7,8,0,135,8,96,0,0,0,0,0,2,8,0,0,52,198,6,0,2,7,0,0,210,66,7,0,135,1,88,0,8,7,0,0,120,1,5,0,134,7,0,0,164,82,1,0,1,1,1,0,119,0,12,0,1,8,1,0,135,7,97,0,6,5,8,1,33,7,7,1,38,7,7,1,0,5,7,0,135,7,90,0,1,0,0,0,134,7,0,0,164,82,1,0,0,1,5,0,135,7,92,0,6,0,0,0,120,0,3,0,139,0,0,0,119,0,11,0,32,9,1,0,2,10,0,0,70,198,6,0,2,11,0,0,88,198,6,0,125,8,9,10,11,0,0,0,134,7,0,0,64,80,1,0,8,0,0,0,139,0,0,0,140,2,13,0,0,0,0,0,2,7,0,0,208,170,9,0,2,8,0,0,82,184,2,0,2,9,0,0,83,184,2,0,2,10,0,0,180,127,9,0,82,10,10,0,121,10,5,0,2,10,0,0,180,127,9,0,1,11,1,0,85,10,11,0,2,11,0,0,140,127,9,0,82,11,11,0,121,11,5,0,2,11,0,0,140,127,9,0,1,10,1,0,85,11,10,0,26,2,0,2,1,10,1,0,15,10,10,2,1,11,1,0,125,2,10,2,11,0,0,0,25,5,0,3,34,11,5,66,1,10,66,0,125,5,11,5,10,0,0,0,47,10,2,5,68,29,1,0,26,6,1,2,1,10,1,0,15,10,10,6,1,11,1,0,125,6,10,6,11,0,0,0,25,3,1,3,34,11,3,16,1,10,16,0,125,3,11,3,10,0,0,0,15,4,6,3,1,0,0,0,121,4,31,0,0,1,6,0,27,10,2,68,3,10,7,10,41,11,1,2,1,12,0,0,97,10,11,12,2,12,0,0,0,153,9,0,27,11,2,68,3,12,12,11,41,11,1,2,1,10,0,0,97,12,11,10,135,10,29,0,2,1,0,0,2,10,0,0,72,225,10,0,82,10,10,0,13,10,10,2,2,11,0,0,76,225,10,0,82,11,11,0,13,11,11,1,19,10,10,11,1,11,1,0,125,0,10,11,0,0,0,0,25,1,1,1,54,11,1,3,140,28,1,0,25,2,2,1,54,11,2,5,132,28,1,0,121,0,14,0,135,11,14,0,2,10,0,0,73,6,7,0,135,11,0,0,10,0,0,0,1,10,232,3,134,11,0,0,116,82,1,0,10,0,0,0,1,10,27,1,134,11,0,0,164,31,1,0,10,0,0,0,139,0,0,0,140,1,9,0,0,0,0,0,2,4,0,0,112,206,9,0,2,5,0,0,0,153,9,0,2,6,0,0,112,140,7,0,2,7,0,0,68,225,10,0,82,7,7,0,41,7,7,2,94,6,6,7,121,6,2,0,135,6,17,0,2,6,0,0,68,225,10,0,85,6,0,0,2,6,0,0,112,140,7,0,41,7,0,2,3,3,6,7,82,7,3,0,120,7,46,0,1,1,0,0,1,2,0,0,27,7,2,68,3,7,5,7,41,6,1,2,1,8,0,0,97,7,6,8,27,8,2,68,3,8,4,8,41,6,1,2,1,7,0,0,97,8,6,7,25,2,2,1,33,7,2,67,120,7,244,255,25,1,1,1,33,7,1,17,120,7,240,255,134,7,0,0,224,175,0,0,0,0,0,0,135,7,98,0,0,0,0,0,1,7,1,0,85,3,7,0,1,6,1,0,135,7,99,0,6,0,0,0,135,7,13,0,135,7,100,0,120,0,21,0,1,2,0,0,1,1,0,0,27,7,1,68,3,7,4,7,41,6,2,2,1,8,3,0,97,7,6,8,25,1,1,1,33,8,1,67,120,8,249,255,25,2,2,1,33,8,2,17,120,8,245,255,119,0,7,0,135,8,68,0,1,6,0,0,135,8,99,0,6,0,0,0,135,8,13,0,135,8,100,0,139,0,0,0,140,3,13,0,0,0,0,0,2,8,0,0,232,3,0,0,2,9,0,0,176,110,10,0,2,10,0,0,98,184,2,0,136,11,0,0,0,7,11,0,136,11,0,0,25,11,11,16,137,11,0,0,0,6,7,0,1,11,37,0,16,11,11,0,32,12,2,0,20,11,11,12,120,11,55,0,2,11,0,0,72,225,10,0,82,11,11,0,26,4,11,1,2,11,0,0,76,225,10,0,82,11,11,0,26,3,11,1,2,11,0,0,0,153,9,0,27,12,4,68,3,11,11,12,41,12,3,2,94,5,11,12,121,5,26,0,135,11,31,0,0,5,0,0,120,11,16,0,135,11,9,0,4,3,0,0,135,11,14,0,1,12,10,0,135,11,30,0,12,0,0,0,85,6,9,0,135,11,2,0,2,6,0,0,135,11,10,0,4,3,1,0,134,11,0,0,116,82,1,0,8,0,0,0,119,0,8,0,2,11,0,0,132,225,10,0,85,11,4,0,2,11,0,0,136,225,10,0,85,11,3,0,119,0,1,0,2,11,0,0,76,225,10,0,82,11,11,0,54,11,11,3,128,31,1,0,25,3,3,1,119,0,218,255,2,11,0,0,72,225,10,0,82,11,11,0,54,11,11,4,156,31,1,0,25,4,4,1,119,0,207,255,137,7,0,0,139,0,0,0,140,1,6,0,0,0,0,0,2,2,0,0,195,95,2,0,2,3,0,0,56,128,9,0,82,1,3,0,1,3,0,0,47,3,3,1,120,32,1,0,1,3,6,1,1,4,10,0,138,0,3,4,4,32,1,0,8,32,1,0,0,32,1,0,0,32,1,0,0,32,1,0,0,32,1,0,0,32,1,0,12,32,1,0,0,32,1,0,16,32,1,0,119,0,5,0,119,0,29,0,119,0,28,0,119,0,27,0,119,0,26,0,2,3,0,0,56,128,9,0,26,4,1,1,85,3,4,0,2,4,0,0,12,127,9,0,2,3,0,0,12,127,9,0,82,3,3,0,26,3,3,1,85,4,3,0,2,3,0,0,28,127,9,0,1,4,1,0,85,3,4,0,135,4,14,0,2,3,0,0,223,196,6,0,135,4,0,0,3,0,0,0,1,3,232,3,134,4,0,0,116,82,1,0,3,0,0,0,139,0,0,0,2,4,0,0,188,225,10,0,1,3,2,0,85,4,3,0,135,3,14,0,2,4,0,0,194,196,6,0,135,3,0,0,4,0,0,0,2,4,0,0,202,196,6,0,135,3,42,0,4,0,0,0,2,4,0,0,208,196,6,0,135,3,0,0,4,0,0,0,134,3,0,0,168,81,1,0,33,3,3,10,121,3,6,0,135,3,43,0,134,3,0,0,168,81,1,0,33,3,3,10,120,3,252,255,2,3,0,0,32,127,9,0,82,3,3,0,2,4,0,0,56,127,9,0,82,4,4,0,3,1,3,4,2,4,0,0,32,127,9,0,85,4,1,0,2,4,0,0,56,127,9,0,1,3,0,0,85,4,3,0,2,4,0,0,80,140,7,0,1,5,7,1,13,5,0,5,38,5,5,1,135,3,101,0,1,4,0,5,2,3,0,0,84,225,10,0,82,3,3,0,32,3,3,0,1,5,0,0,2,4,0,0,32,127,9,0,82,4,4,0,15,5,5,4,19,3,3,5,121,3,4,0,135,3,102,0,134,3,0,0,60,83,1,0,1,5,0,0,134,3,0,0,152,110,0,0,5,0,0,0,2,5,0,0,78,250,10,0,134,3,0,0,64,80,1,0,5,0,0,0,139,0,0,0,140,1,9,0,0,0,0,0,1,5,0,0,1,6,10,0,135,1,1,0,6,0,0,0,34,6,1,56,121,6,67,0,25,1,1,1,1,6,10,0,1,7,4,0,138,0,6,7,240,33,1,0,212,33,1,0,212,33,1,0,244,33,1,0,1,7,13,0,135,6,1,0,7,0,0,0,32,6,6,2,121,6,6,0,1,5,5,0,119,0,4,0,119,0,1,0,1,5,5,0,119,0,1,0,32,6,5,5,121,6,43,0,1,5,0,0,1,7,6,0,135,6,1,0,7,0,0,0,25,3,6,3,1,7,3,0,135,6,1,0,7,0,0,0,25,4,6,3,1,7,8,0,135,6,1,0,7,0,0,0,25,2,6,1,1,6,10,0,1,7,4,0,138,0,6,7,116,34,1,0,84,34,1,0,84,34,1,0,120,34,1,0,1,8,9,0,135,7,1,0,8,0,0,0,134,6,0,0,216,158,0,0,0,3,4,1,2,7,0,0,119,0,15,0,119,0,1,0,1,7,43,0,135,6,1,0,7,0,0,0,3,1,6,1,1,8,3,0,135,7,1,0,8,0,0,0,25,7,7,6,134,6,0,0,216,158,0,0,0,3,4,1,2,7,0,0,119,0,1,0,34,6,1,47,121,6,3,0,25,1,1,10,119,0,192,255,139,0,0,0,140,0,7,0,0,0,0,0,2,3,0,0,144,128,9,0,1,2,0,0,2,4,0,0,172,225,10,0,1,5,0,0,85,4,5,0,1,0,2,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,0,0,1,6,54,0,138,5,4,6,224,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,228,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,216,35,1,0,232,35,1,0,236,35,1,0,240,35,1,0,244,35,1,0,216,35,1,0,216,35,1,0,248,35,1,0,252,35,1,0,0,36,1,0,4,36,1,0,8,36,1,0,12,36,1,0,16,36,1,0,25,0,0,1,119,0,14,0,119,0,13,0,119,0,12,0,119,0,11,0,119,0,10,0,119,0,9,0,119,0,8,0,119,0,7,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,25,1,1,1,33,5,1,26,120,5,180,255,135,5,103,0,0,0,0,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,0,0,1,6,54,0,138,5,4,6,48,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,52,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,24,37,1,0,56,37,1,0,60,37,1,0,64,37,1,0,68,37,1,0,24,37,1,0,24,37,1,0,72,37,1,0,76,37,1,0,80,37,1,0,84,37,1,0,88,37,1,0,92,37,1,0,96,37,1,0,1,4,1,0,134,0,0,0,120,201,0,0,1,4,0,0,121,0,15,0,119,0,21,0,119,0,13,0,119,0,12,0,119,0,11,0,119,0,10,0,119,0,9,0,119,0,8,0,119,0,7,0,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,25,1,1,1,1,5,26,0,50,5,5,1,124,37,1,0,1,2,9,0,119,0,2,0,119,0,172,255,32,5,2,9,121,5,5,0,1,5,1,0,134,0,0,0,196,57,1,0,5,0,0,0,135,5,104,0,139,0,0,0,140,0,8,0,0,0,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,25,0,3,4,0,1,3,0,135,4,14,0,2,4,0,0,120,127,9,0,82,4,4,0,120,4,57,0,134,4,0,0,180,244,0,0,0,1,0,0,82,2,0,0,82,0,1,0,2,4,0,0,208,170,9,0,27,5,2,68,3,4,4,5,41,5,0,2,3,1,4,5,82,5,1,0,1,4,19,0,1,6,2,0,138,5,4,6,48,38,1,0,164,38,1,0,2,6,0,0,56,252,6,0,135,4,0,0,6,0,0,0,119,0,39,0,2,4,0,0,0,153,9,0,27,6,2,68,3,4,4,6,41,6,0,2,94,4,4,6,120,4,18,0,1,4,20,0,85,1,4,0,2,4,0,0,112,206,9,0,27,6,2,68,3,4,4,6,41,6,0,2,1,7,0,0,97,4,6,7,2,7,0,0,160,188,9,0,27,6,2,68,3,7,7,6,41,6,0,2,1,4,0,0,97,7,6,4,119,0,15,0,2,6,0,0,25,252,6,0,135,4,0,0,6,0,0,0,119,0,10,0,2,6,0,0,252,251,6,0,135,4,0,0,6,0,0,0,119,0,5,0,2,4,0,0,242,222,6,0,135,5,0,0,4,0,0,0,137,3,0,0,139,0,0,0,140,0,11,0,0,0,0,0,2,4,0,0,212,95,2,0,2,5,0,0,255,95,2,0,2,6,0,0,214,95,2,0,1,3,0,0,1,7,26,0,135,0,24,0,7,0,0,0,2,7,0,0,144,128,9,0,41,8,0,2,3,1,7,8,82,8,1,0,32,8,8,0,2,7,0,0,80,127,9,0,82,7,7,0,13,7,7,0,20,8,8,7,2,7,0,0,88,127,9,0,82,7,7,0,13,7,7,0,20,8,8,7,2,7,0,0,252,127,9,0,82,7,7,0,13,7,7,0,20,8,8,7,121,8,35,0,1,2,100,0,35,8,2,2,121,8,3,0,1,0,0,0,119,0,31,0,1,8,26,0,135,0,24,0,8,0,0,0,2,8,0,0,144,128,9,0,41,7,0,2,3,1,8,7,82,7,1,0,32,7,7,0,2,8,0,0,80,127,9,0,82,8,8,0,13,8,8,0,20,7,7,8,2,8,0,0,88,127,9,0,82,8,8,0,13,8,8,0,20,7,7,8,2,8,0,0,252,127,9,0,82,8,8,0,13,8,8,0,20,7,7,8,121,7,3,0,26,2,2,1,119,0,226,255,1,3,4,0,119,0,2,0,1,3,4,0,32,7,3,4,121,7,19,0,2,7,0,0,172,225,10,0,1,8,0,0,85,7,8,0,1,7,0,0,134,8,0,0,120,201,0,0,0,7,0,0,82,7,1,0,2,9,0,0,0,129,9,0,41,10,0,2,94,9,9,10,135,8,55,0,7,9,0,0,1,8,0,0,85,1,8,0,1,0,1,0,139,0,0,0,140,1,11,0,0,0,0,0,2,6,0,0,144,132,9,0,136,7,0,0,0,5,7,0,136,7,0,0,25,7,7,16,137,7,0,0,25,1,5,4,0,2,5,0,37,7,0,37,121,7,55,0,135,7,26,0,120,7,53,0,134,7,0,0,180,244,0,0,1,2,0,0,82,4,1,0,82,2,2,0,2,7,0,0,0,153,9,0,27,8,4,68,3,7,7,8,41,8,2,2,3,3,7,8,82,8,3,0,120,8,6,0,2,7,0,0,108,6,7,0,135,8,0,0,7,0,0,0,119,0,35,0,135,8,9,0,4,2,0,0,82,7,3,0,135,8,31,0,0,7,0,0,121,8,8,0,2,8,0,0,132,225,10,0,85,8,4,0,2,8,0,0,136,225,10,0,85,8,2,0,119,0,22,0,1,8,63,0,135,1,1,0,8,0,0,0,85,3,1,0,41,8,1,2,94,8,6,8,33,8,8,0,120,8,249,255,2,8,0,0,48,135,9,0,27,7,4,68,3,8,8,7,41,7,2,2,2,9,0,0,128,136,5,0,27,10,1,40,3,9,9,10,106,9,9,32,97,8,7,9,135,9,29,0,4,2,0,0,137,5,0,0,139,0,0,0,140,0,9,0,0,0,0,0,2,2,0,0,211,218,6,0,2,3,0,0,83,194,6,0,2,4,0,0,208,170,9,0,135,5,14,0,2,5,0,0,72,225,10,0,82,5,5,0,27,5,5,68,3,5,4,5,2,6,0,0,76,225,10,0,82,6,6,0,41,6,6,2,94,5,5,6,1,6,2,0,1,7,80,0,138,5,6,7,248,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,228,42,1,0,152,43,1,0,228,42,1,0,156,43,1,0,2,7,0,0,203,253,6,0,135,6,0,0,7,0,0,0,119,0,57,0,1,6,101,0,135,0,1,0,6,0,0,0,34,6,0,30,121,6,24,0,1,7,45,0,134,6,0,0,132,251,0,0,7,0,0,0,2,6,0,0,72,225,10,0,82,1,6,0,2,6,0,0,76,225,10,0,82,0,6,0,27,6,1,68,3,6,4,6,41,7,0,2,1,8,81,0,97,6,7,8,2,8,0,0,112,206,9,0,27,7,1,68,3,8,8,7,41,7,0,2,1,6,0,0,97,8,7,6,119,0,29,0,34,6,0,35,121,6,8,0,135,6,0,0,2,0,0,0,1,7,0,0,134,6,0,0,48,53,1,0,7,0,0,0,119,0,20,0,135,6,0,0,3,0,0,0,119,0,17,0,119,0,1,0,1,7,101,0,135,6,1,0,7,0,0,0,34,6,6,35,121,6,8,0,135,6,0,0,2,0,0,0,1,7,0,0,134,6,0,0,48,53,1,0,7,0,0,0,119,0,4,0,135,6,0,0,3,0,0,0,119,0,1,0,139,0,0,0,140,0,7,0,0,0,0,0,2,3,0,0,144,128,9,0,1,2,0,0,2,4,0,0,172,225,10,0,1,5,0,0,85,4,5,0,1,0,2,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,23,0,1,6,46,0,138,5,4,6,216,44,1,0,220,44,1,0,224,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,232,44,1,0,236,44,1,0,240,44,1,0,244,44,1,0,248,44,1,0,212,44,1,0,212,44,1,0,212,44,1,0,252,44,1,0,119,0,11,0,119,0,2,0,119,0,1,0,25,0,0,1,119,0,7,0,119,0,254,255,119,0,253,255,119,0,252,255,119,0,251,255,119,0,250,255,119,0,249,255,25,1,1,1,33,5,1,26,120,5,192,255,135,5,103,0,0,0,0,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,23,0,1,6,46,0,138,5,4,6,232,45,1,0,236,45,1,0,240,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,228,45,1,0,8,46,1,0,12,46,1,0,16,46,1,0,20,46,1,0,24,46,1,0,228,45,1,0,228,45,1,0,228,45,1,0,28,46,1,0,119,0,15,0,119,0,2,0,119,0,1,0,1,4,1,0,134,0,0,0,120,201,0,0,1,4,0,0,121,0,8,0,119,0,14,0,119,0,250,255,119,0,249,255,119,0,248,255,119,0,247,255,119,0,246,255,119,0,245,255,25,1,1,1,1,5,26,0,50,5,5,1,56,46,1,0,1,2,9,0,119,0,2,0,119,0,184,255,32,5,2,9,121,5,5,0,1,5,1,0,134,0,0,0,196,57,1,0,5,0,0,0,135,5,104,0,139,0,0,0,140,2,9,0,0,0,0,0,1,2,0,0,2,6,0,0,0,153,9,0,27,7,0,68,3,6,6,7,41,7,1,2,3,5,6,7,82,7,5,0,1,6,3,0,1,8,49,0,138,7,6,8,92,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,96,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,124,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,128,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,132,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,84,47,1,0,136,47,1,0,1,2,3,0,119,0,13,0,119,0,1,0,2,6,0,0,64,225,10,0,82,6,6,0,38,6,6,1,120,6,7,0,1,2,3,0,119,0,5,0,119,0,249,255,119,0,248,255,119,0,247,255,119,0,246,255,32,7,2,3,121,7,54,0,26,7,0,2,1,8,3,0,135,6,1,0,8,0,0,0,3,3,7,6,1,6,0,0,15,6,6,3,1,7,0,0,125,3,6,3,7,0,0,0,34,7,3,66,1,6,66,0,125,3,7,3,6,0,0,0,26,6,1,2,1,8,3,0,135,7,1,0,8,0,0,0,3,4,6,7,1,7,0,0,15,7,7,4,1,6,0,0,125,4,7,4,6,0,0,0,34,6,4,16,1,7,16,0,125,4,6,4,7,0,0,0,2,7,0,0,208,170,9,0,27,6,3,68,3,7,7,6,41,6,4,2,94,2,7,6,33,7,2,21,121,7,18,0,2,7,0,0,0,153,9,0,27,6,3,68,3,7,7,6,41,6,4,2,94,7,7,6,120,7,11,0,33,7,2,20,33,6,2,11,82,8,5,0,33,8,8,38,20,6,6,8,19,7,7,6,121,7,4,0,134,7,0,0,196,129,0,0,0,1,3,4,139,0,0,0,140,1,6,0,0,0,0,0,136,4,0,0,0,1,4,0,136,4,0,0,25,4,4,16,137,4,0,0,25,2,1,8,0,3,1,0,135,4,45,0,2,5,0,0,30,199,6,0,135,4,42,0,5,0,0,0,2,5,0,0,36,199,6,0,135,4,0,0,5,0,0,0,2,5,0,0,69,199,6,0,135,4,42,0,5,0,0,0,2,5,0,0,79,199,6,0,135,4,0,0,5,0,0,0,2,5,0,0,99,199,6,0,135,4,0,0,5,0,0,0,2,5,0,0,160,199,6,0,135,4,0,0,5,0,0,0,2,5,0,0,224,199,6,0,135,4,0,0,5,0,0,0,2,5,0,0,17,200,6,0,135,4,0,0,5,0,0,0,85,3,0,0,2,5,0,0,74,200,6,0,135,4,2,0,5,3,0,0,2,5,0,0,121,200,6,0,135,4,0,0,5,0,0,0,28,4,0,20,85,2,4,0,2,5,0,0,186,200,6,0,135,4,2,0,5,2,0,0,2,5,0,0,232,200,6,0,135,4,0,0,5,0,0,0,2,5,0,0,32,201,6,0,135,4,0,0,5,0,0,0,2,5,0,0,94,201,6,0,135,4,0,0,5,0,0,0,135,4,14,0,2,5,0,0,27,198,6,0,135,4,0,0,5,0,0,0,2,5,0,0,202,196,6,0,135,4,42,0,5,0,0,0,2,5,0,0,208,196,6,0,135,4,0,0,5,0,0,0,134,4,0,0,168,81,1,0,33,4,4,10,121,4,6,0,135,4,43,0,134,4,0,0,168,81,1,0,33,4,4,10,120,4,252,255,137,1,0,0,1,4,1,0,139,4,0,0,140,0,4,0,0,0,0,0,135,0,14,0,2,0,0,0,208,170,9,0,2,1,0,0,72,225,10,0,82,1,1,0,27,1,1,68,3,0,0,1,2,1,0,0,76,225,10,0,82,1,1,0,41,1,1,2,94,0,0,1,1,3,10,0,1,1,73,0,138,0,3,1,100,51,1,0,80,51,1,0,112,51,1,0,80,51,1,0,80,51,1,0,124,51,1,0,136,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,148,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,28,52,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,40,52,1,0,80,51,1,0,80,51,1,0,80,51,1,0,80,51,1,0,52,52,1,0,2,1,0,0,116,223,6,0,135,3,0,0,1,0,0,0,119,0,56,0,134,1,0,0,48,139,0,0,119,0,53,0,134,1,0,0,36,167,0,0,119,0,50,0,134,1,0,0,236,82,1,0,119,0,47,0,134,1,0,0,28,83,1,0,119,0,44,0,2,1,0,0,72,225,10,0,1,2,33,0,85,1,2,0,2,2,0,0,76,225,10,0,1,1,15,0,85,2,1,0,1,2,1,0,134,1,0,0,72,29,1,0,2,0,0,0,2,1,0,0,116,215,9,0,1,2,3,0,85,1,2,0,2,2,0,0,4,162,9,0,1,1,0,0,85,2,1,0,135,1,5,0,2,2,0,0,72,225,10,0,82,2,2,0,2,3,0,0,76,225,10,0,82,3,3,0,135,1,21,0,2,3,0,0,2,1,0,0,96,225,10,0,1,3,1,0,85,1,3,0,119,0,10,0,134,3,0,0,104,209,0,0,119,0,7,0,134,3,0,0,12,146,0,0,119,0,4,0,134,3,0,0,104,253,0,0,119,0,1,0,139,0,0,0,140,1,8,0,0,0,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,25,1,5,4,0,2,5,0,37,6,0,37,121,6,47,0,135,6,26,0,120,6,45,0,134,6,0,0,180,244,0,0,1,2,0,0,82,4,1,0,82,1,2,0,2,6,0,0,0,153,9,0,27,7,4,68,3,6,6,7,41,7,1,2,3,2,6,7,82,3,2,0,120,3,6,0,2,6,0,0,108,6,7,0,135,7,0,0,6,0,0,0,119,0,27,0,135,7,9,0,4,1,0,0,135,7,31,0,0,3,0,0,120,7,15,0,135,7,53,0,3,0,0,0,1,7,0,0,85,2,7,0,2,7,0,0,112,206,9,0,27,6,4,68,3,7,7,6,41,6,1,2,3,0,7,6,82,6,0,0,38,6,6,253,85,0,6,0,119,0,8,0,2,6,0,0,132,225,10,0,85,6,4,0,2,6,0,0,136,225,10,0,85,6,1,0,119,0,1,0,137,5,0,0,139,0,0,0,140,1,5,0,0,0,0,0,2,2,0,0,81,184,2,0,121,0,10,0,1,4,151,0,135,3,1,0,4,0,0,0,34,3,3,3,121,3,5,0,1,4,8,1,134,3,0,0,164,31,1,0,4,0,0,0,2,3,0,0,160,127,9,0,1,4,1,0,85,3,4,0,2,4,0,0,68,225,10,0,82,0,4,0,120,0,3,0,1,0,0,0,119,0,39,0,34,4,0,11,121,4,19,0,1,4,5,0,135,0,1,0,4,0,0,0,26,4,0,3,2,3,0,0,68,225,10,0,82,3,3,0,3,0,4,3,34,3,0,10,1,4,10,0,125,0,3,0,4,0,0,0,1,4,1,0,15,4,4,0,1,3,1,0,125,0,4,0,3,0,0,0,119,0,19,0,1,3,3,0,135,0,1,0,3,0,0,0,26,3,0,2,2,4,0,0,68,225,10,0,82,4,4,0,3,0,3,4,34,4,0,13,1,3,13,0,125,0,4,0,3,0,0,0,1,3,11,0,15,3,3,0,1,4,11,0,125,0,3,0,4,0,0,0,119,0,1,0,1,4,65,0,135,1,1,0,4,0,0,0,2,4,0,0,72,225,10,0,85,4,1,0,1,4,15,0,135,1,1,0,4,0,0,0,2,4,0,0,76,225,10,0,85,4,1,0,2,4,0,0,68,225,10,0,82,4,4,0,46,4,4,0,120,54,1,0,134,4,0,0,72,29,1,0,0,0,0,0,135,4,13,0,135,4,5,0,2,4,0,0,96,225,10,0,1,3,1,0,85,4,3,0,139,0,0,0,140,1,8,0,0,0,0,0,2,2,0,0,83,184,2,0,2,3,0,0,82,184,2,0,2,4,0,0,112,206,9,0,1,5,101,0,135,1,1,0,5,0,0,0,34,5,1,25,121,5,34,0,1,5,0,0,1,7,4,0,135,6,1,0,7,0,0,0,47,5,5,6,0,55,1,0,1,0,0,0,135,5,71,0,25,0,0,1,1,6,4,0,135,5,1,0,6,0,0,0,54,5,0,5,228,54,1,0,2,5,0,0,72,225,10,0,82,0,5,0,2,5,0,0,76,225,10,0,82,1,5,0,2,5,0,0,208,170,9,0,27,6,0,68,3,5,5,6,41,6,1,2,1,7,79,0,97,5,6,7,27,7,0,68,3,7,4,7,41,6,1,2,1,5,0,0,97,7,6,5,119,0,33,0,32,5,0,0,34,6,1,40,19,5,5,6,121,5,24,0,1,6,45,0,134,5,0,0,132,251,0,0,6,0,0,0,2,5,0,0,72,225,10,0,82,0,5,0,2,5,0,0,76,225,10,0,82,1,5,0,2,5,0,0,208,170,9,0,27,6,0,68,3,5,5,6,41,6,1,2,1,7,81,0,97,5,6,7,27,7,0,68,3,7,4,7,41,6,1,2,1,5,0,0,97,7,6,5,119,0,6,0,2,6,0,0,83,194,6,0,135,5,0,0,6,0,0,0,119,0,1,0,139,0,0,0,140,1,5,0,0,0,0,0,136,3,0,0,0,2,3,0,136,3,0,0,25,3,3,16,137,3,0,0,0,1,2,0,135,3,45,0,135,3,0,0,0,0,0,0,1,3,0,0,135,4,16,0,47,3,3,4,180,56,1,0,2,4,0,0,148,234,6,0,135,3,0,0,4,0,0,0,135,0,16,0,85,1,0,0,2,4,0,0,226,234,6,0,135,3,2,0,4,1,0,0,2,4,0,0,45,235,6,0,135,3,0,0,4,0,0,0,2,4,0,0,124,235,6,0,135,3,0,0,4,0,0,0,135,3,14,0,2,4,0,0,27,198,6,0,135,3,0,0,4,0,0,0,2,4,0,0,178,211,6,0,135,3,42,0,4,0,0,0,2,4,0,0,47,228,6,0,135,3,0,0,4,0,0,0,134,3,0,0,168,81,1,0,33,3,3,27,121,3,6,0,135,3,43,0,134,3,0,0,168,81,1,0,33,3,3,27,120,3,252,255,135,3,5,0,119,0,8,0,2,4,0,0,180,235,6,0,135,3,0,0,4,0,0,0,134,3,0,0,212,101,0,0,135,3,5,0,137,2,0,0,139,0,0,0,140,0,7,0,0,0,0,0,2,3,0,0,144,128,9,0,1,2,0,0,2,4,0,0,172,225,10,0,1,5,0,0,85,4,5,0,1,0,2,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,41,0,1,6,3,0,138,5,4,6,40,57,1,0,36,57,1,0,44,57,1,0,119,0,4,0,119,0,1,0,25,0,0,1,119,0,1,0,25,1,1,1,33,5,1,26,120,5,242,255,135,5,103,0,0,0,0,0,1,1,0,0,41,5,1,2,94,5,3,5,1,4,41,0,1,6,3,0,138,5,4,6,112,57,1,0,108,57,1,0,116,57,1,0,119,0,7,0,119,0,1,0,1,4,1,0,134,0,0,0,120,201,0,0,1,4,0,0,120,0,8,0,25,1,1,1,1,5,26,0,50,5,5,1,160,57,1,0,1,2,9,0,119,0,2,0,119,0,235,255,32,5,2,9,121,5,5,0,1,5,1,0,134,0,0,0,196,57,1,0,5,0,0,0,135,5,104,0,139,0,0,0,140,1,5,0,0,0,0,0,1,2,0,0,2,4,0,0,194,196,6,0,135,3,0,0,4,0,0,0,2,4,0,0,34,198,6,0,135,3,42,0,4,0,0,0,33,1,0,0,121,1,14,0,2,4,0,0,163,211,6,0,135,3,0,0,4,0,0,0,2,4,0,0,178,211,6,0,135,3,42,0,4,0,0,0,2,4,0,0,182,211,6,0,135,3,0,0,4,0,0,0,119,0,5,0,2,4,0,0,208,196,6,0,135,3,0,0,4,0,0,0,134,0,0,0,168,81,1,0,1,3,27,0,1,4,6,0,138,0,3,4,108,58,1,0,104,58,1,0,104,58,1,0,104,58,1,0,104,58,1,0,116,58,1,0,119,0,6,0,1,0,1,0,119,0,19,0,1,0,0,0,1,2,11,0,119,0,16,0,121,1,13,0,135,3,105,0,0,0,0,0,121,3,3,0,135,0,106,0,0,0,0,0,32,3,0,46,26,4,0,97,35,4,4,26,20,3,3,4,121,3,3,0,1,2,11,0,119,0,3,0,135,3,43,0,119,0,225,255,139,0,0,0,140,0,4,0,0,0,0,0,1,0,0,0,135,1,14,0,2,2,0,0,225,214,6,0,135,1,0,0,2,0,0,0,2,2,0,0,191,70,7,0,135,1,42,0,2,0,0,0,2,2,0,0,167,214,6,0,135,1,0,0,2,0,0,0,2,2,0,0,7,215,6,0,135,1,42,0,2,0,0,0,2,2,0,0,9,215,6,0,135,1,0,0,2,0,0,0,2,2,0,0,178,211,6,0,135,1,42,0,2,0,0,0,2,2,0,0,14,215,6,0,135,1,0,0,2,0,0,0,134,1,0,0,168,81,1,0,1,2,27,0,1,3,95,0,138,1,2,3,212,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,216,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,220,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,224,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,208,60,1,0,232,60,1,0,119,0,8,0,119,0,9,0,119,0,2,0,119,0,3,0,1,0,4,0,119,0,5,0,1,0,3,0,119,0,3,0,135,1,43,0,119,0,147,255,32,1,0,3,121,1,4,0,134,1,0,0,248,151,0,0,119,0,5,0,32,1,0,4,121,1,3,0,134,1,0,0,40,215,0,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,45,0,2,1,0,0,30,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,114,207,6,0,135,0,0,0,1,0,0,0,2,1,0,0,69,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,152,207,6,0,135,0,0,0,1,0,0,0,2,1,0,0,159,207,6,0,135,0,0,0,1,0,0,0,2,1,0,0,224,207,6,0,135,0,0,0,1,0,0,0,2,1,0,0,31,208,6,0,135,0,0,0,1,0,0,0,2,1,0,0,96,208,6,0,135,0,0,0,1,0,0,0,2,1,0,0,156,208,6,0,135,0,0,0,1,0,0,0,2,1,0,0,219,208,6,0,135,0,0,0,1,0,0,0,2,1,0,0,27,209,6,0,135,0,0,0,1,0,0,0,2,1,0,0,91,209,6,0,135,0,0,0,1,0,0,0,2,1,0,0,158,209,6,0,135,0,0,0,1,0,0,0,2,1,0,0,220,209,6,0,135,0,0,0,1,0,0,0,135,0,14,0,2,1,0,0,27,198,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,196,6,0,135,0,42,0,1,0,0,0,2,1,0,0,208,196,6,0,135,0,0,0,1,0,0,0,134,0,0,0,168,81,1,0,33,0,0,10,121,0,6,0,135,0,43,0,134,0,0,0,168,81,1,0,33,0,0,10,120,0,252,255,1,0,1,0,139,0,0,0,140,0,7,0,0,0,0,0,2,3,0,0,144,138,7,0,1,2,0,0,27,5,2,44,3,5,3,5,25,5,5,24,2,6,0,0,80,140,7,0,135,4,46,0,5,6,0,0,120,4,28,0,1,4,0,0,27,6,2,44,94,6,3,6,47,4,4,6,12,63,1,0,27,4,2,44,3,4,3,4,25,0,4,20,82,4,0,0,121,4,18,0,1,4,0,0,85,0,4,0,134,4,0,0,60,83,1,0,27,4,2,44,3,4,3,4,106,1,4,8,0,0,1,0,28,4,0,20,47,4,4,1,252,62,1,0,3,0,0,1,119,0,252,255,119,0,1,0,134,4,0,0,104,81,1,0,0,0,0,0,25,2,2,1,33,4,2,10,120,4,219,255,139,0,0,0,140,0,6,0,0,0,0,0,2,2,0,0,230,95,2,0,1,4,100,0,135,3,1,0,4,0,0,0,34,3,3,60,121,3,20,0,2,5,0,0,68,225,10,0,82,5,5,0,25,5,5,2,135,4,7,0,5,0,0,0,25,4,4,8,134,3,0,0,132,251,0,0,4,0,0,0,2,3,0,0,152,127,9,0,2,4,0,0,152,127,9,0,82,4,4,0,1,5,196,9,3,4,4,5,85,3,4,0,119,0,36,0,1,3,101,0,135,4,1,0,3,0,0,0,34,4,4,30,121,4,26,0,2,3,0,0,131,194,6,0,135,4,0,0,3,0,0,0,2,4,0,0,72,225,10,0,82,1,4,0,2,4,0,0,76,225,10,0,82,0,4,0,2,4,0,0,112,206,9,0,27,3,1,68,3,4,4,3,41,3,0,2,1,5,0,0,97,4,3,5,2,5,0,0,208,170,9,0,27,3,1,68,3,5,5,3,41,3,0,2,1,4,0,0,97,5,3,4],eb+71680);HEAPU8.set([119,0,6,0,2,3,0,0,83,194,6,0,135,4,0,0,3,0,0,0,119,0,1,0,139,0,0,0,140,1,8,0,0,0,0,0,2,4,0,0,144,138,7,0,2,5,0,0,80,140,7,0,34,6,0,0,121,6,3,0,1,1,0,0,119,0,31,0,1,1,0,0,27,7,1,44,3,7,4,7,25,7,7,24,135,6,46,0,7,5,0,0,120,6,6,0,1,6,0,0,27,7,1,44,94,7,4,7,54,6,6,7,144,64,1,0,25,1,1,1,1,6,10,0,50,6,6,1,140,64,1,0,1,1,0,0,119,0,13,0,119,0,239,255,27,6,1,44,3,6,4,6,25,2,6,8,82,3,2,0,15,6,0,3,125,1,6,0,3,0,0,0,4,6,3,1,85,2,6,0,134,6,0,0,60,83,1,0,139,1,0,0,140,0,6,0,0,0,0,0,2,3,0,0,144,128,9,0,1,2,0,0,2,4,0,0,172,225,10,0,1,5,0,0,85,4,5,0,1,0,2,0,1,1,0,0,41,5,1,2,94,5,3,5,32,5,5,42,38,5,5,1,3,0,0,5,25,1,1,1,33,5,1,26,120,5,249,255,135,5,103,0,0,0,0,0,1,1,0,0,41,5,1,2,94,5,3,5,32,5,5,42,121,5,6,0,1,5,1,0,134,0,0,0,120,201,0,0,1,5,0,0,120,0,8,0,25,1,1,1,1,5,26,0,50,5,5,1,84,65,1,0,1,2,7,0,119,0,2,0,119,0,241,255,32,5,2,7,121,5,5,0,1,5,1,0,134,0,0,0,196,57,1,0,5,0,0,0,135,5,104,0,139,0,0,0,140,0,6,0,0,0,0,0,2,3,0,0,144,128,9,0,1,2,0,0,2,4,0,0,172,225,10,0,1,5,0,0,85,4,5,0,1,0,2,0,1,1,0,0,41,5,1,2,94,5,3,5,32,5,5,83,38,5,5,1,3,0,0,5,25,1,1,1,33,5,1,26,120,5,249,255,135,5,103,0,0,0,0,0,1,1,0,0,41,5,1,2,94,5,3,5,32,5,5,83,121,5,6,0,1,5,1,0,134,0,0,0,120,201,0,0,1,5,0,0,120,0,8,0,25,1,1,1,1,5,26,0,50,5,5,1,12,66,1,0,1,2,7,0,119,0,2,0,119,0,241,255,32,5,2,7,121,5,5,0,1,5,1,0,134,0,0,0,196,57,1,0,5,0,0,0,135,5,104,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,45,0,2,1,0,0,30,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,173,205,6,0,135,0,0,0,1,0,0,0,2,1,0,0,69,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,202,205,6,0,135,0,0,0,1,0,0,0,2,1,0,0,224,205,6,0,135,0,0,0,1,0,0,0,2,1,0,0,31,206,6,0,135,0,0,0,1,0,0,0,2,1,0,0,92,206,6,0,135,0,0,0,1,0,0,0,2,1,0,0,153,206,6,0,135,0,0,0,1,0,0,0,2,1,0,0,215,206,6,0,135,0,0,0,1,0,0,0,2,1,0,0,23,207,6,0,135,0,0,0,1,0,0,0,2,1,0,0,82,207,6,0,135,0,0,0,1,0,0,0,135,0,14,0,2,1,0,0,27,198,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,196,6,0,135,0,42,0,1,0,0,0,2,1,0,0,208,196,6,0,135,0,0,0,1,0,0,0,134,0,0,0,168,81,1,0,33,0,0,10,121,0,6,0,135,0,43,0,134,0,0,0,168,81,1,0,33,0,0,10,120,0,252,255,1,0,1,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,45,0,2,1,0,0,30,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,36,204,6,0,135,0,0,0,1,0,0,0,2,1,0,0,69,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,62,204,6,0,135,0,0,0,1,0,0,0,2,1,0,0,76,204,6,0,135,0,0,0,1,0,0,0,2,1,0,0,141,204,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,204,6,0,135,0,0,0,1,0,0,0,2,1,0,0,7,205,6,0,135,0,0,0,1,0,0,0,2,1,0,0,68,205,6,0,135,0,0,0,1,0,0,0,2,1,0,0,130,205,6,0,135,0,0,0,1,0,0,0,135,0,14,0,2,1,0,0,27,198,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,196,6,0,135,0,42,0,1,0,0,0,2,1,0,0,208,196,6,0,135,0,0,0,1,0,0,0,134,0,0,0,168,81,1,0,33,0,0,10,121,0,6,0,135,0,43,0,134,0,0,0,168,81,1,0,33,0,0,10,120,0,252,255,1,0,1,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,45,0,2,1,0,0,30,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,135,201,6,0,135,0,0,0,1,0,0,0,2,1,0,0,69,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,173,201,6,0,135,0,0,0,1,0,0,0,2,1,0,0,188,201,6,0,135,0,0,0,1,0,0,0,2,1,0,0,252,201,6,0,135,0,0,0,1,0,0,0,2,1,0,0,60,202,6,0,135,0,0,0,1,0,0,0,2,1,0,0,122,202,6,0,135,0,0,0,1,0,0,0,2,1,0,0,193,202,6,0,135,0,0,0,1,0,0,0,2,1,0,0,224,202,6,0,135,0,0,0,1,0,0,0,135,0,14,0,2,1,0,0,27,198,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,196,6,0,135,0,42,0,1,0,0,0,2,1,0,0,208,196,6,0,135,0,0,0,1,0,0,0,134,0,0,0,168,81,1,0,33,0,0,10,121,0,6,0,135,0,43,0,134,0,0,0,168,81,1,0,33,0,0,10,120,0,252,255,1,0,1,0,139,0,0,0,140,0,3,0,0,0,0,0,1,1,100,0,135,0,1,0,1,0,0,0,34,0,0,75,121,0,6,0,2,1,0,0,83,194,6,0,135,0,0,0,1,0,0,0,119,0,40,0,1,1,43,0,135,0,1,0,1,0,0,0,32,0,0,10,121,0,11,0,2,0,0,0,80,127,9,0,82,0,0,0,121,0,5,0,2,1,0,0,241,194,6,0,135,0,0,0,1,0,0,0,135,0,36,0,119,0,25,0,1,1,43,0,135,0,1,0,1,0,0,0,33,0,0,10,121,0,11,0,2,2,0,0,68,225,10,0,82,2,2,0,25,2,2,1,135,1,7,0,2,0,0,0,134,0,0,0,132,251,0,0,1,0,0,0,119,0,10,0,2,0,0,0,88,127,9,0,82,0,0,0,121,0,5,0,2,1,0,0,27,195,6,0,135,0,0,0,1,0,0,0,135,0,37,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,45,0,2,1,0,0,30,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,14,203,6,0,135,0,0,0,1,0,0,0,2,1,0,0,69,199,6,0,135,0,42,0,1,0,0,0,2,1,0,0,32,203,6,0,135,0,0,0,1,0,0,0,2,1,0,0,47,203,6,0,135,0,0,0,1,0,0,0,2,1,0,0,108,203,6,0,135,0,0,0,1,0,0,0,2,1,0,0,176,203,6,0,135,0,0,0,1,0,0,0,2,1,0,0,248,203,6,0,135,0,0,0,1,0,0,0,135,0,14,0,2,1,0,0,27,198,6,0,135,0,0,0,1,0,0,0,2,1,0,0,202,196,6,0,135,0,42,0,1,0,0,0,2,1,0,0,208,196,6,0,135,0,0,0,1,0,0,0,134,0,0,0,168,81,1,0,33,0,0,10,121,0,6,0,135,0,43,0,134,0,0,0,168,81,1,0,33,0,0,10,120,0,252,255,1,0,1,0,139,0,0,0,140,4,8,0,0,0,0,0,135,7,107,0,1,7,0,0,15,4,7,3,1,7,0,0,125,6,4,3,7,0,0,0,32,7,2,0,20,7,7,4,121,7,3,0,1,5,0,0,119,0,4,0,135,7,108,0,0,1,0,0,1,5,1,0,135,7,109,0,1,7,20,0,125,2,4,3,7,0,0,0,134,3,0,0,76,228,0,0,2,0,0,0,20,7,3,6,121,7,252,255,121,5,3,0,135,7,108,0,0,1,0,0,139,3,0,0,140,0,3,0,0,0,0,0,135,1,14,0,2,2,0,0,213,211,6,0,135,1,0,0,2,0,0,0,134,0,0,0,168,81,1,0,39,1,0,32,33,1,1,121,121,1,104,0,1,1,27,0,1,2,84,0,138,0,1,2,36,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,40,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,32,73,1,0,44,73,1,0,119,0,4,0,119,0,10,0,119,0,9,0,119,0,8,0,135,1,43,0,134,0,0,0,168,81,1,0,39,1,0,32,32,1,1,121,121,1,160,255,119,0,6,0,2,2,0,0,17,212,6,0,135,1,0,0,2,0,0,0,139,0,0,0,2,2,0,0,15,212,6,0,134,1,0,0,64,80,1,0,2,0,0,0,139,0,0,0,140,0,3,0,0,0,0,0,2,1,0,0,152,235,10,0,82,0,1,0,32,1,0,23,121,1,31,0,2,1,0,0,152,235,10,0,1,2,0,0,85,1,2,0,135,2,14,0,2,1,0,0,27,198,6,0,135,2,0,0,1,0,0,0,2,1,0,0,34,198,6,0,135,2,42,0,1,0,0,0,2,1,0,0,40,198,6,0,135,2,0,0,1,0,0,0,134,2,0,0,168,81,1,0,33,2,2,32,121,2,6,0,135,2,43,0,134,2,0,0,168,81,1,0,33,2,2,32,120,2,252,255,135,2,45,0,2,2,0,0,152,235,10,0,82,0,2,0,2,2,0,0,152,235,10,0,25,1,0,1,85,2,1,0,139,0,0,0,140,0,3,0,0,0,0,0,135,0,14,0,2,0,0,0,208,170,9,0,2,1,0,0,72,225,10,0,82,1,1,0,27,1,1,68,3,0,0,1,2,1,0,0,76,225,10,0,82,1,1,0,41,1,1,2,94,0,0,1,1,1,2,0,1,2,80,0,138,0,1,2,188,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,168,75,1,0,208,75,1,0,168,75,1,0,228,75,1,0,2,2,0,0,199,222,6,0,135,1,0,0,2,0,0,0,119,0,16,0,1,2,0,0,134,1,0,0,148,54,1,0,2,0,0,0,119,0,11,0,2,2,0,0,169,222,6,0,135,1,0,0,2,0,0,0,119,0,6,0,1,2,1,0,134,1,0,0,148,54,1,0,2,0,0,0,119,0,1,0,139,0,0,0,140,1,5,0,0,0,0,0,134,1,0,0,24,205,0,0,0,0,0,0,1,2,0,0,47,2,2,1,72,76,1,0,2,2,0,0,188,127,9,0,82,2,2,0,121,2,3,0,134,2,0,0,212,87,0,0,134,2,0,0,212,87,0,0,135,2,110,0,134,2,0,0,196,78,0,0,32,2,1,0,2,3,0,0,112,225,10,0,82,3,3,0,33,3,3,0,20,2,2,3,120,2,10,0,2,3,0,0,72,225,10,0,82,3,3,0,2,4,0,0,76,225,10,0,82,4,4,0,135,2,21,0,3,4,0,0,119,0,224,255,139,0,0,0,140,1,7,0,0,0,0,0,1,1,0,0,2,4,0,0,0,127,9,0,2,5,0,0,144,193,5,0,41,6,1,2,94,5,5,6,41,5,5,2,3,2,4,5,82,3,2,0,121,3,8,0,4,3,3,0,1,4,1,0,15,4,4,3,1,6,1,0,125,5,4,3,6,0,0,0,85,2,5,0,25,1,1,1,33,5,1,26,120,5,237,255,134,5,0,0,196,78,0,0,139,0,0,0,140,0,3,0,0,0,0,0,2,1,0,0,144,225,10,0,82,1,1,0,25,0,1,1,2,1,0,0,144,225,10,0,85,1,0,0,32,1,0,3,121,1,30,0,2,1,0,0,144,225,10,0,1,2,0,0,85,1,2,0,2,2,0,0,140,225,10,0,2,1,0,0,140,225,10,0,82,1,1,0,25,1,1,1,85,2,1,0,1,2,10,0,135,1,30,0,2,0,0,0,1,1,17,0,2,2,0,0,140,225,10,0,82,2,2,0,47,1,1,2,148,77,1,0,2,1,0,0,140,225,10,0,1,2,0,0,85,1,2,0,1,1,0,0,134,2,0,0,196,57,1,0,1,0,0,0,135,2,45,0,139,0,0,0,140,1,5,0,0,0,0,0,1,1,3,0,1,2,0,0,2,3,0,0,144,128,9,0,41,4,2,2,94,3,3,4,33,3,3,0,38,3,3,1,3,1,1,3,25,2,2,1,33,3,2,26,120,3,247,255,135,3,103,0,1,0,0,0,134,0,0,0,216,247,0,0,0,0,0,0,135,3,104,0,139,0,0,0,140,0,3,0,0,0,0,0,134,0,0,0,168,81,1,0,32,1,0,89,1,2,121,0,125,0,1,2,0,0,0,0,32,2,0,78,1,1,110,0,125,0,2,1,0,0,0,0,1,1,27,0,1,2,95,0,138,0,1,2,168,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,172,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,164,79,1,0,176,79,1,0,119,0,4,0,119,0,5,0,119,0,4,0,119,0,3,0,135,1,43,0,119,0,143,255,139,0,0,0,140,0,4,0,0,0,0,0,1,2,100,0,135,1,1,0,2,0,0,0,34,1,1,30,121,1,21,0,2,3,0,0,68,225,10,0,82,3,3,0,25,3,3,1,135,2,7,0,3,0,0,0,134,1,0,0,132,251,0,0,2,0,0,0,1,1,194,1,135,0,1,0,1,0,0,0,2,1,0,0,152,127,9,0,2,2,0,0,152,127,9,0,82,2,2,0,3,2,2,0,85,1,2,0,119,0,5,0,2,1,0,0,83,194,6,0,135,2,0,0,1,0,0,0,139,0,0,0,140,1,4,0,0,0,0,0,136,2,0,0,0,1,2,0,136,2,0,0,25,2,2,16,137,2,0,0,2,2,0,0,188,225,10,0,1,3,0,0,85,2,3,0,135,3,14,0,85,1,0,0,2,2,0,0,3,197,6,0,135,3,2,0,2,1,0,0,134,3,0,0,168,81,1,0,119,0,254,255,140,0,2,0,0,0,0,0,135,0,14,0,2,0,0,0,208,170,9,0,2,1,0,0,72,225,10,0,82,1,1,0,27,1,1,68,3,0,0,1,2,1,0,0,76,225,10,0,82,1,1,0,41,1,1,2,94,0,0,1,32,0,0,1,121,0,4,0,134,0,0,0,120,249,0,0,119,0,5,0,2,1,0,0,236,253,6,0,135,0,0,0,1,0,0,0,2,0,0,0,80,225,10,0,1,1,1,0,85,0,1,0,139,0,0,0,140,0,2,0,0,0,0,0,135,0,14,0,2,0,0,0,208,170,9,0,2,1,0,0,72,225,10,0,82,1,1,0,27,1,1,68,3,0,0,1,2,1,0,0,76,225,10,0,82,1,1,0,41,1,1,2,94,0,0,1,32,0,0,1,121,0,4,0,134,0,0,0,28,63,1,0,119,0,5,0,2,1,0,0,79,252,6,0,135,0,0,0,1,0,0,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,108,48,1,0,0,0,0,0,134,1,0,0,88,68,1,0,134,1,0,0,52,70,1,0,134,1,0,0,76,67,1,0,134,1,0,0,48,66,1,0,134,1,0,0,32,61,1,0,139,0,0,0,140,0,5,0,0,0,0,0,2,1,0,0,84,28,6,0,82,1,1,0,26,1,1,1,2,2,0,0,88,28,6,0,82,2,2,0,26,2,2,1,1,3,1,0,1,4,0,0,134,0,0,0,32,71,1,0,1,2,3,4,32,3,0,13,1,2,10,0,125,4,3,2,0,0,0,0,139,4,0,0,140,0,1,0,0,0,0,0,2,0,0,0,188,127,9,0,82,0,0,0,121,0,3,0,134,0,0,0,212,87,0,0,134,0,0,0,212,87,0,0,135,0,110,0,134,0,0,0,196,78,0,0,139,0,0,0,140,2,3,0,0,0,0,0,134,2,0,0,80,82,1,0,134,2,0,0,84,197,0,0,1,2,0,0,139,2,0,0,140,0,2,0,0,0,0,0,134,0,0,0,200,82,1,0,1,1,49,0,135,0,111,0,1,0,0,0,135,0,112,0,139,0,0,0,140,1,5,0,0,0,0,0,1,1,0,0,47,1,1,0,160,82,1,0,1,2,0,0,1,3,0,0,1,4,0,0,134,1,0,0,32,71,1,0,2,3,4,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,1,0,135,0,113,0,1,0,0,0,1,1,50,0,135,0,74,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,135,0,113,0,1,0,0,0,1,1,50,0,135,0,74,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,2,1,0,0,73,234,6,0,134,0,0,0,208,55,1,0,1,0,0,0,2,0,0,0,160,127,9,0,1,1,0,0,85,0,1,0,139,0,0,0,140,0,2,0,0,0,0,0,2,1,0,0,123,237,6,0,134,0,0,0,208,55,1,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,88,26,1,0,1,0,0,0,139,0,0,0],eb+81920);var relocations=[];relocations=relocations.concat([176,192,228,232,236,240,244,248,252,256,260,264,268,272,276,280,284,288,292,296,300,304,308,312,316,320,324,328,332,336,340,344,348,352,356,360,364,368,372,376,1020,1076,1096,1236,1772,1804,1880,1884,1888,1892,1896,1900,1904,1908,1912,1916,1920,1924,1928,1932,1936,1940,1944,1948,1952,1956,1960,2176,2196,2636,3120,3180,3276,3424,3428,3432,3436,3440,3444,3448,3452,3456,3460,3464,3468,3472,3476,3480,3484,3488,3492,3496,3500,3504,3508,3512,3516,3520,3524,3528,3532,3536,3540,3544,3548,3552,3556,3560,3564,3568,3572,3576,3580,3584,3588,3592,3596,3600,3604,3608,3612,3616,3620,3624,3628,3632,3636,3640,3644,3648,3652,3656,3660,3664,3668,3672,3676,3680,3684,3688,3692,3696,3700,3704,3708,3712,3716,3720,3724,3728,3732,3736,3740,3744,4088,4196,4384,4476,4680,4684,4688,4692,4696,4700,4704,4708,4712,4716,4720,4724,4728,4732,4736,4740,4744,4748,4752,4756,4760,4764,4768,4772,4776,4780,4784,4788,4792,4796,4800,4804,4808,4812,4816,4820,4824,4828,4832,4836,4840,4844,4848,4852,4856,4860,4864,4868,4872,4876,4880,4884,4888,4892,4896,4900,4904,4908,4912,4916,4920,4924,4928,4932,4936,4940,4944,4948,4952,4956,4960,4964,4968,4972,4976,4980,4984,4988,4992,4996,5e3,5004,5008,5012,5016,5020,5024,5028,5032,5036,5040,5044,5048,5052,5056,5060,5064,5068,5072,5076,5080,5084,5088,5092,5096,5100,5104,5108,5112,5116,5120,5124,5128,5132,5136,5140,5144,5148,5152,5156,5160,5164,5168,5172,5176,5180,5184,5188,5192,5196,5200,5204,5696,5700,5704,5708,5712,5716,5720,5724,5728,5732,5736,5740,5744,5748,5752,5756,5760,5764,5768,5772,5776,5780,5784,5788,5792,5796,5800,5804,5808,5812,5816,5820,5824,5828,5832,5836,5840,5844,5848,5852,5856,5860,5864,5868,5872,5876,5880,5884,5888,5892,5896,5900,5904,5908,5912,5916,5920,5924,5928,5932,5936,5940,5944,5948,5952,5956,5960,5964,5968,5972,5976,5980,5984,5988,5992,5996,6e3,6004,6008,6012,6016,6020,6024,6028,7380,7804,8196,8244,8288,8292,8296,8300,8304,8308,8312,8316,8320,8324,8328,8332,8336,8340,8344,8348,8352,8356,8360,8364,8368,8372,8376,8380,8384,8388,8392,8396,8400,8404,8408,8412,8416,8420,8424,8428,8432,8436,8440,8444,8448,8452,8456,8460,8464,8468,8472,8476,8480,8484,8488,8492,8496,8500,8504,8508,8512,8516,8520,8524,8528,8532,8536,8540,8544,8548,8552,8556,8560,8564,8568,8572,8612,8616,8620,8624,8628,8736,8768,9584,9588,9592,9596,9600,9604,9608,9612,9616,9620,9624,9628,9632,9636,9640,9644,9648,9652,9656,9660,9664,9668,9672,9676,9680,9684,9688,9692,9696,9700,9704,9708,9712,9716,9720,9724,9728,9732,9736,9740,9744,9748,9752,9756,9760,9764,9768,9772,9776,9780,9784,9788,9792,9796,9800,9804,9808,9812,9816,9820,9824,9828,9832,9836,9840,9844,9848,9852,9856,9860,9864,9868,9872,9876,9880,9884,9888,9892,9896,9900,9904,9908,9912,9968,9980,12056,12320,12324,12328,12332,12760,12764,12768,12772,12776,12780,12784,12788,12792,12796,12800,12804,12808,12812,12816,12820,12968,12984,13292,13504,13600,13748,13960,14104,14556,14848,15200,15380,15688,15912,15916,15920,15924,15928,15932,15936,15940,15944,15948,15952,15956,15960,15964,15968,15972,15976,15980,15984,15988,15992,16076,17176,17268,17508,17512,17516,17520,17524,17528,17532,17536,17540,17544,17548,17552,17556,17560,17564,17568,17572,17576,17580,17584,17588,17592,17596,17600,17668,17704,17788,18376,18380,18384,18388,18392,18396,18400,18404,18408,18412,18416,18420,18424,18428,18432,18436,18440,18444,18448,18452,18456,18460,18464,18468,18472,18476,18480,18484,18488,18492,18496,18500,18504,18508,18512,18516,18520,18524,18528,18532,18536,18540,18544,18548,18552,18556,18560,18564,18568,18572,18576,18580,18584,18588,18592,18596,18600,18604,18608,18612,18616,18952,19648,19652,19656,19660,19664,19668,19672,19676,19680,19684,19688,19692,19696,19700,19704,19708,19712,19716,19720,19724,19728,19732,19736,19740,19744,19748,19752,19756,19760,19764,19768,19772,19776,19780,19784,19788,19792,19796,19800,19804,19808,19812,19816,19820,19824,19828,19832,19836,19840,19844,19848,19852,19856,20292,20448,21720,21892,22028,22088,22184,22348,22412,22772,22832,22904,22964,23152,23192,23204,23304,23344,23356,23388,23448,23504,23588,23796,24108,24360,24364,24368,24372,24376,24380,24384,24388,24392,24396,24400,24404,24408,24412,24416,24420,24424,24428,24432,24436,24440,24444,24448,24452,24640,24684,24696,24900,25776,25780,26228,26232,26236,26240,26244,26248,26252,26256,26260,26264,26268,26272,26276,26280,26284,26288,26292,26296,26300,26304,26308,26312,26316,26320,26324,26328,26332,26336,26340,26344,26348,26352,26812,27028,27032,27036,27040,27044,27048,27052,27056,27060,27064,27068,27072,27076,27080,27084,27088,27092,27096,27100,27104,27108,27112,27116,27120,27124,27128,27132,27136,27140,27144,27148,27152,27156,27160,27164,27168,27172,27176,27180,27184,27188,27192,27196,27200,27204,27208,27212,27216,27220,27224,27228,27232,27236,27240,27244,27248,27252,27256,27260,27264,27268,27272,27276,27280,27284,27288,27292,27296,27300,27304,27308,27312,27316,27320,27324,27328,27332,27336,27340,27344,27348,27352,27356,27360,27364,27368,27372,27376,27380,27384,27388,27392,27396,27524,27676,27844,27848,27852,27856,27860,27864,27868,27872,27876,27880,27884,27888,27892,27896,27900,27904,28472,28740,28860,28948,28952,28956,28960,28964,28968,28972,28976,28980,28984,28988,29192,29268,29272,29276,29280,29284,29288,29292,29296,29300,29304,29308,29312,29316,29320,29324,29328,29332,29336,29340,29344,29348,29352,29356,29360,29364,29368,29372,29376,29380,29384,29388,29392,29396,29400,29404,29408,29412,29416,29420,29424,29428,29432,29436,29440,29444,29448,29452,29456,29460,29464,29468,29472,29476,29480,29484,29488,29492,29496,29500,29504,29508,29512,29548,30128,30132,30136,30140,30144,30148,30152,30156,30160,30164,30168,30172,30176,30180,30184,30188,30192,30196,30200,30204,30208,30212,30216,30220,30224,30228,30232,30660,30812,30836,30904,30936,30976,31760,32048,32080,32216,32296,32528,32560,32748,32952,32984,33080,33140,33380,33384,33388,33392,33396,33400,33404,33408,33412,33416,33420,33424,33428,33432,33436,33440,33444,33448,33452,33456,33460,33464,33468,33472,33476,33480,33484,33488,33492,33496,33500,33504,33508,33512,33516,33520,33524,33528,33532,33536,33540,33544,33548,33552,33556,33560,33564,33568,33572,33576,33580,33584,33588,33592,33596,33600,33604,33608,33612,33616,33620,33624,33628,33632,33636,33640,33644,33648,33652,33656,33660,33664,33740,33988,33992,33996,34e3,34004,34008,34012,34016,34020,34024,34028,34032,34036,34040,34044,34048,34052,34056,34060,34064,34068,34072,34076,34080,34084,34088,34092,34096,34100,34104,34108,34112,34116,34120,34124,34128,34132,34136,34140,34144,34148,34152,34156,34160,34164,34168,34172,34176,34180,34184,34188,34192,34196,34200,34204,34208,34212,34216,34220,34224,34228,34232,34236,34240,34488,34492,34496,34500,34504,34508,34512,34516,34520,34524,34528,34548,34552,34556,34560,34564,34568,34572,34576,34580,34584,34588,34592,34596,34600,34604,34608,34612,34616,34620,34624,34628,34632,34636,34640,34644,34648,34652,34656,34660,34664,34668,34672,34676,34680,34684,34688,34692,34696,34700,34704,34708,34712,34716,34720,34724,34728,34732,34736,34740,34744,34748,34752,34756,34760,34764,34904,34908,34912,34916,34920,34924,34928,34932,34936,34940,34944,34948,34952,34956,34960,34964,34968,34972,34976,34980,34984,34988,34992,34996,35e3,35004,35008,35012,35016,35020,35024,35028,35032,35036,35040,35044,35048,35052,35056,35060,35064,35068,35072,35076,35080,35084,35088,35092,35096,35100,35104,35108,35112,35116,35120,35124,35128,35132,35136,35140,35144,35148,35152,35156,35160,35164,35268,35344,35472,35476,35480,36288,36412,36416,36420,36424,36428,36432,36436,36440,37204,37696,37700,37704,37708,37712,37716,37720,37724,37728,37732,37736,37740,37744,37748,37752,37756,37760,37764,37768,37772,37776,37780,37784,37788,37792,37796,37800,37804,37808,37812,37816,37820,37824,37828,37832,37836,37840,37844,37848,37852,37856,37860,37864,37868,37872,37876,37880,37884,37888,37892,37896,37900,37904,37908,38264,38280,38432,38452,38472,38644,38680,38716,39104,39108,39112,39116,39120,39124,39128,39132,39136,39140,39144,39148,39152,39156,39160,39164,39168,39172,39176,39180,39184,39188,39192,39196,39200,39204,39208,39212,39216,39220,39224,39228,39232,39236,39240,39244,39248,39252,39256,39260,39264,39268,39272,39276,39280,39284,39288,39292,39296,39300,39304,39308,39312,39316,39320,39324,39328,39332,39336,39340,39344,39348,39352,39356,39360,39364,39368,39372,39376,39380,39384,39388,39392,39396,39400,39404,39408,39412,39416,39420,39424,39428,39432,39436,39440,39444,39448,39452,39456,39460,39464,39468,39472,39476,39480,39484,39488,39492,39496,39500,39504,39508,39512,39516,39520,39524,39528,39532,39536,39540,39544,39548,39552,39556,39560,39564,39568,39572,39576,39580,39584,39588,39592,39596,39600,39604,39608,39612,39616,39620,39624,39628,39632,39636,39640,39644,39648,39652,39656,39660,39664,39668,39672,39676,39680,39684,39688,39692,39696,39700,39704,39708,39712,39716,40400,40712,40760,40780,40804,40880,40892,40908,40964,40976,41004,41008,41328,41368,41412,41460,41500,41668,41720,41724,41972,41976,41980,41984,41988,41992,41996,42e3,42004,42008,42012,42016,42096,42100,42104,42108,42112,42116,42120,42124,42128,42132,42136,42140,42144,42148,42152,42156,42160,42164,42168,42172,42176,42180,42184,42188,42192,42196,42200,42204,42208,42212,42216,42220,42224,42228,42232,42236,42240,42244,42248,42252,42256,42260,42264,42928,43124,43396,43460,43624,43688,43692,44060,44064,44068,44072,44076,44080,44084,44088,44092,44096,44100,44104,44108,44180,44184,44188,44192,44196,44200,44204,44208,44212,44216,44220,44224,44228,44232,44236,44240,44244,44248,44252,44256,44260,44264,44664,44692,44808,44920,45092,45108,45112,45116,45120,45264,45268,45272,45276,45280,45284,45288,45292,45296,45300,45368,45556,45700,45712,45728,46036,46088,46152,46784,46788,46792,46796,46800,46804,46808,46812,46816,46820,46824,46828,46832,46836,46840,46844,46848,46852,46856,46860,46864,46868,46872,46876,46880,46884,46888,46936,46940,46944,47116,47120,47124,47128,47132,47136,47140,47144,47148,47152,47156,47160,47164,47168,47172,47176,47180,47184,47188,47192,47196,47200,47204,47208,47212,47216,47220,47224,47228,47232,47236,47240,47244,47248,47252,47256,47260,47264,47268,47272,47276,47280,47284,47288,47292,47296,47300,47304,47308,47312,47316,47320,47324,47328,47332,47336,47340,47344,47348,47352,47356,47360,47364,47368,47372,47376,47380,47384,47388,47392,47396,47400,47404,47408,47412,47416,47420,47424,47428,47432,47436,47440,47444,47448,47752,47796,47844,47848,47852,47856,47860,47864,47868,47872,47876,47880,47884,47888,47892,47896,47900,47904,47908,47912,47916,47920,47924,47928,47932,47936,48744,48748,48752,48756,48760,48764,48768,48772,48776,48780,48784,48788,48792,48796,48800,48804,48808,48812,48816,48820,48824,48828,48832,48836,48840,48844,48848,48852,48856,48860,48864,48868,48872,48876,48880,48884,48888,48892,48896,48900,48904,48908,48912,48916,48920,48924,48928,48932,48936,49044,49136,49240,49444,49456,49468,49708,49712,49716,49720,49724,49728,49732,49736,49740,49744,49748,49752,49756,49760,49764,49768,49772,49776,49780,49784,49788,49792,49796,49800,49804,49808,49812,49888,49892,49896,49900,49904,49908,49912,49916,49920,49924,49928,49932,49936,49940,49944,49948,49952,49956,49960,49964,50204,50240,50272,50308,50344,50776,51684,51688,51692,51696,51700,51704,51708,51712,51716,51720,51724,51728,51732,51736,51740,51744,51748,51752,51756,51760,51764,51768,51772,51776,51780,51784,51788,51792,51796,51800,51804,51808,51812,51816,51820,51824,51828,51832,51836,51840,51844,51848,51852,51856,51860,51864,51868,51872,51876,51880,51884,51888,51892,51896,51900,51904,51908,51912,51916,51920,51924,51928,51996,52128,52132,52340,52452,52580,52944,53028,53240,53244,53248,53252,53256,53260,53264,53268,53272,53276,53280,53284,53288,53292,53296,53300,53304,53308,53312,53316,53320,53324,53328,53332,53336,53340,53344,53348,53352,53356,53360,53364,53368,53372,53376,53380,53384,53388,53392,53396,53400,53404,53408,53412,53416,53420,53424,53428,53432,53436,53440,53444,53448,53452,53456,53460,53464,53468,53472,53476,53480,53484,53488,53492,53496,53500,53504,53508,53512,53516,53520,53524,53528,53532,53536,53540,53544,53548,53552,54116,54688,54692,54696,54700,54704,54708,54800,54948,54960,54972,55284,55368,55412,55440,55536,55572,55600,55796,55908,55912,55916,56300,56388,56704,56708,56712,56716,56780,56880,56916,57004,57008,57012,57016,57020,57024,57028,57032,57036,57040,57044,57048,57052,57056,57060,57064,57068,57072,57076,57080,57084,57088,57092,57096,57100,57104,57108,57112,57116,57120,57124,57128,57132,57136,57140,57144,57148,57152,57156,57160,57164,57168,57172,57176,57180,57184,57188,57192,57196,57360,57400,57528,57600,57740,57744,57748,57752,57756,57760,57764,57768,57772,57776,57780,57784,57788,57792,57796,57800,57804,57808,57812,57816,57820,57824,57828,57832,57836,57840,57844,57848,57852,57856,57860,57864,57868,57872,57876,57880,57884,57888,57892,57896,57900,57904,57908,57912,57916,57920,57924,57928,57932,57936,57940,57944,58164,58240,58580,58584,58588,58592,58596,58600,58604,58608,58612,58616,58620,58624,58628,58632,58636,58640,58644,58648,58652,58656,58660,58664,58668,58672,58676,58680,58684,58688,58692,58696,58700,58704,58708,58712,58716,58720,58724,58728,58732,58736,58740,58744,58748,58752,58756,58760,58764,58768,58772,58776,58780,58784,58788,58792,58796,58800,58804,58808,58812,58816,58820,58824,58828,58832,58836,58840,58844,58848,58852,58856,58860,58864,58868,58872,58876,58880,58884,58888,58892,58896,58900,58904,58908,58912,58916,58920,58924,58928,58932,58936,58940,58944,58948,58952,58956,58960,58964,58968,58972,58976,58980,58984,58988,58992,58996,59e3,59004,59008,59012,59016,59020,59024,59028,59032,59036,59040,59044,59048,59052,59056,59060,59064,59068,59072,59076,59080,59084,59088,59092,59096,59100,59104,59108,59112,59116,59120,59124,59128,59132,59136,59140,59144,59148,59152,59156,59160,59164,59168,59172,59176,59180,59184,59188,59192,59196,59200,59204,59208,59212,59216,59220,59224,59228,59232,59236,59240,59244,59248,59252,59256,59260,59264,59268,59272,59276,59280,59284,59288,59292,59296,59300,59304,59308,59312,59316,59320,59324,59328,59332,59336,59340,59344,59348,59352,59356,59360,59364,59368,59372,59376,59380,59384,59388,59392,59396,59400,59404,59408,59412,59416,59420,59424,59428,59432,59436,59440,59444,59448,59452,59456,59460,59464,59468,59472,59476,59480,59484,59488,59492,59496,59500,59504,59508,59512,59516,59520,59524,59528,59532,59536,59540,59544,59548,59552,59556,59560,59564,59568,59572,59576,59580,59584,59588,59592,59596,59600,59604,59608,59940,59944,59948,59952,59956,59960,59964,59968,59972,59976,59980,59984,59988,59992,59996,6e4,60004,60008,60012,60016,60020,60024,60028,60032,60036,60040,60044,60200,60204,60208,60212,60216,60220,60224,60228,60232,60236,60240,60244,60248,60252,60256,60260,60264,60268,60272,60276,60280,60284,60288,60292,60296,60300,60304,60308,60312,60316,60320,60324,60328,60332,60336,60340,60344,60348,60352,60356,60360,60364,60368,60372,60376,60380,60384,60388,60392,60396,60400,60404,60408,60412,60416,60420,60424,60428,60432,60436,60440,60444,60448,60452,60456,60460,60464,60468,60472,60840,60844,60848,60852,60856,60860,60864,60868,60872,60876,60880,60884,60888,60892,60896,60900,60904,60908,60912,60916,60920,60924,60928,60932,60936,60940,60944,61012,61016,61020,61024,61028,61032,61036,61040,61044,61048,61052,61056,61060,61064,61068,61072,61076,61080,61084,61228,61232,61236,61240,61244,61248,61252,61256,61260,61264,61268,61272,61276,61280,61284,61288,61292,61296,61300,61304,61308,61312,61316,61320,61324,61328,61332,61336,61340,61344,61348,61352,61356,61360,61364,61368,61372,61376,61380,61384,61388,61392,61396,61596,61964,62e3,62036,62160,62164,62168,62172,62176,62180,62184,62188,62192,62196,62200,62204,62208,62212,62216,62220,62224,62228,62232,62236,62240,62244,62248,62252,62256,62260,62264,62268,62272,62276,62280,62284,62288,62444,62468,62528,62552,62692,62696,62700,62704,62708,62712,62716,62720,62724,62728,62732,62736,62740,62744,62748,62752,62756,62760,62764,62768,62772,62776,62780,62784,62788,62792,62796,62800,62804,62808,62812,62816,62820,62824,62828,62832,62836,62840,62844,62848,62852,62856,62860,62864,62868,62872,62876,62880,62884,62888,62892,62896,62900,62904,62908,62912,62916,62920,62924,62928,62932,62936,62940,62944,62948,62952,62956,62960,62964,62968,62972,62976,62980,62984,62988,62992,62996,63e3,63004,63008,63012,63016,63020,63024,63028,63032,63036,63040,63044,63048,63052,63056,63060,63064,63068,63072,63076,63080,63608,63664,63696,63724,63984,64100,64120,64144,64456,64820,64824,64828,64832,64836,64976,65056,65200,65204,65208,65212,65216,65220,65224,65228,65232,65236,65240,65244,65248,65252,65256,65260,65264,65268,65272,65276,65280,65284,65288,65292,65296,65300,65304,65308,65312,65316,65320,65324,65328,65332,65336,65340,65344,65348,65352,65356,65360,65364,65368,65372,65376,65380,65384,65388,65392,65396,65400,65404,65408,65412,65416,65420,65424,65428,65432,65436,65440,65444,65448,65452,65456,65460,65464,65468,65472,65476,65480,65484,65488,65492,65496,65500,65504,65508,65512,65516,65520,65524,65528,65532,65536,65540,65636,65888,65912,65996,66e3,66004,66008,66012,66016,66020,66024,66028,66032,66036,66040,66044,66048,66052,66056,66060,66064,66068,66072,66076,66080,66084,66088,66092,66096,66100,66104,66108,66112,66116,66120,66124,66476,66480,66484,66488,66492,66496,66500,66504,66508,66512,66516,66520,66524,66528,66532,66536,66540,66544,66548,66552,66556,66560,66564,66568,66572,66576,66580,66584,66588,66592,66596,66600,66604,66608,66612,66616,66620,66624,66628,66632,66636,66640,66644,66648,66652,66656,66660,66680,66684,66688,66692,66696,66700,66704,66708,66712,66716,66720,66724,66728,66732,66736,66740,66744,66748,66752,67048,67052,67056,67060,67064,67068,67072,67076,67080,67084,67088,67692,67696,67700,67704,67708,67712,67716,67720,67724,67728,67732,67736,67884,67888,67892,67896,67900,67904,67908,67912,67916,67920,67924,67928,67932,67936,67940,67944,67948,67952,67956,67960,67964,67968,67972,67976,67980,67984,68296,68300,68304,68308,68312,68316,68356,68612,68956,69004,69008,69012,69016,69420,69424,69428,69432,69712,69920,69924,69928,69932,69936,69940,69944,69948,69952,69956,69960,69964,69968,69972,69976,69980,69984,69988,69992,69996,7e4,70004,70008,70012,70016,70020,70024,70028,70032,70036,70040,70044,70048,70052,70056,70060,70064,70068,70072,70076,70080,70084,70088,70092,70096,70100,70104,70108,70112,70116,70120,70188,70192,70196,70200,70204,70208,70212,70216,70220,70224,70228,70232,70236,70240,70392,70668,70672,70676,70680,70684,70688,70692,70696,70700,70704,70708,71172,71320,71428,71984,71988,71992,71996,72e3,72004,72008,72012,72016,72020,72024,72028,72032,72036,72040,72044,72048,72052,72408,72780,72956,72968,73588,73616,73672,73688,73692,73696,73700,73704,73708,73712,73716,73720,73724,74180,74184,74188,74192,74308,74312,74316,74320,74496,74500,74504,74508,74512,74516,74520,74524,74528,74532,74536,74540,74544,74548,74552,74556,74560,74564,74568,74572,74576,74580,74584,74588,74592,74596,74600,74604,74608,74612,74616,74620,74624,74628,74632,74636,74640,74644,74648,74652,74656,74660,74664,74668,74672,74676,74680,74684,74688,74692,74696,74700,74704,74708,74816,74820,74824,74828,74832,74836,74840,74844,74848,74852,74856,74860,74864,74868,74872,74876,74880,74884,74888,74892,74896,74900,74904,74908,74912,74916,74920,74924,74928,74932,74936,74940,74944,74948,74952,74956,74960,74964,74968,74972,74976,74980,74984,74988,74992,74996,75e3,75004,75008,75012,75016,75020,75024,75028,75120,75284,75288,76196,76200,76204,76208,76212,76216,76220,76224,76228,76232,76236,76240,76244,76248,76252,76256,76260,76264,76268,76272,76276,76280,76284,76288,76292,76296,76300,76304,76308,76312,76316,76320,76324,76328,76332,76336,76340,76344,76348,76352,76356,76360,76364,76368,76372,76376,76380,76384,76388,76392,76396,76400,76404,76408,76412,76416,76420,76424,76428,76432,76436,76440,76444,76448,76452,76456,76460,76464,76468,76472,76476,76480,76484,76488,76492,76496,76500,76504,76508,76512,76828,76832,76836,76840,76844,76848,76852,76856,76860,76864,76868,76872,76876,76880,76884,76888,76892,76896,76900,76904,76908,76912,76916,76920,76924,76928,76932,76936,76940,76944,76948,76952,76956,76960,76964,76968,76972,76976,76980,76984,76988,76992,76996,77e3,77004,77008,77100,77104,77108,77112,77116,77120,77124,77128,77132,77136,77140,77144,77148,77152,77156,77160,77164,77168,77172,77176,77180,77184,77188,77192,77196,77200,77204,77208,77212,77216,77220,77224,77228,77232,77236,77240,77244,77248,77252,77256,77260,77264,77268,77272,77276,77280,77356,77456,77460,77464,77468,77472,77476,77480,77484,77488,77492,77496,77500,77504,77508,77512,77516,77520,77524,77528,77532,77536,77540,77544,77548,77552,77556,77560,77564,77568,77572,77576,77580,77584,77588,77592,77596,77600,77604,77608,77612,77616,77620,77624,77628,77632,77636,77640,77644,77648,78380,78384,78388,78392,78396,78400,78404,78408,78412,78416,78420,78424,78428,78432,78436,78440,78444,78448,78452,78456,78460,78464,78468,78472,78476,78480,78484,78488,78492,78496,78500,78504,78508,78512,78516,78520,78524,78528,78532,78536,78540,78544,78548,78552,78556,78560,78564,78568,78572,78576,78580,78584,78588,78592,78596,78600,78604,78608,78612,78616,78620,78624,78628,78632,78636,78640,78644,78648,78652,78656,78660,78664,78668,79464,79580,79612,79880,80152,80156,80160,80224,80228,80232,80276,80464,80468,80472,80476,80480,80484,80724,80728,80732,80736,80740,80744,80748,80752,80756,80760,80764,80768,80772,80776,80780,80784,80788,80792,80796,80800,80804,80808,80812,80816,80820,80824,80828,80832,80836,80840,80844,80848,80852,80856,80860,80864,80868,80872,80876,80880,80884,80888,80892,80896,80900,80904,80908,80912,80916,80920,80924,80928,80932,80936,80940,80944,80948,80952,80956,80960,80964,80968,80972,80976,80980,80984,80988,80992,80996,81e3,81004,81008,81012,81016,81020,81024,81028,81032,81036,81040,81044,81048,81052,81056,81060,81064,81068,81072,81076,81080,81084,81088,81092,81096,81100,81584,81648,82032,82048,82248,82432,83920,83924,83928,83932,83936,83940,83944,83948,83952,83956,83960,83964,83968,83972,83976,83980,83984,83988,83992,83996,84e3,84004,84008,84012,84016,84020,84024,84028,84032,84036,84040,84044,84048,84052,84056,84060,84064,84068,84072,84076,84080,84084,84088,84092,84096,84100,84104,84108,84112,84116,84120,84124,84128,84132,84136,84140,84144,84148,84152,84156,84160,84164,84168,84172,84176,84180,84184,84188,84192,84196,84200,84204,84208,84212,84216,84220,84224,84228,84232,84236,84240,84244,84248,84252,84584,84588,84592,84596,84600,84604,84608,84612,84616,84620,84624,84628,84632,84636,84640,84644,84648,84652,84656,84660,84664,84668,84672,84676,84680,84684,84688,84692,84696,84700,84704,84708,84712,84716,84720,84724,84728,84732,84736,84740,84744,84748,84752,84756,84760,84764,84768,84772,84776,84780,84784,84788,84792,84796,84800,84804,84808,84812,84816,84820,84824,84828,84832,84836,84840,84844,84848,84852,84856,84860,84864,84868,84872,84876,84880,84884,84888,84892,84896,84900,85016,85356,85544,85548,85552,85556,85560,85564,85568,85572,85576,85580,85584,85588,85592,85596,85600,85604,85608,85612,85616,85620,85624,85628,85632,85636,85640,85644,85648,85652,85656,85660,85664,85668,85672,85676,85680,85684,85688,85692,85696,85700,85704,85708,85712,85716,85720,85724,85728,85732,85736,85740,85744,85748,85752,85756,85760,85764,85768,85772,85776,85780,85784,85788,85792,85796,85800,85804,85808,85812,85816,85820,85824,85828,85832,85836,85840,85844,85848,85852,85856,85860,85864,85868,85872,85876,85880,85884,85888,85892,85896,85900,85904,85908,85912,85916,85920,86660,544,668,772,828,1192,1300,1460,1520,1544,1660,2244,2304,2388,2520,2576,2592,2664,2852,2900,2956,2972,3020,3056,3072,3148,3304,3320,4540,4664,6044,6064,6084,6104,6124,6144,6164,6184,6204,6224,6244,6264,6284,6304,6324,6344,6412,6456,6512,6544,6660,6692,6748,6780,6880,6908,6940,6972,7e3,7132,7160,7188,7216,7244,7276,7324,7464,7492,7568,7760,7816,7908,7936,7964,8016,8056,8088,8896,10048,10232,10704,10884,11008,11132,11736,11820,11940,11956,12084,12100,12208,12224,12368,12384,12500,12516,12536,12564,13328,13352,13540,13564,13784,13808,13996,14020,14436,14592,14616,14732,14884,14908,14996,15236,15260,15416,15440,15624,15828,17132,17296,17312,17676,17688,18316,18860,19116,19588,22368,23432,23488,23556,23572,23804,23852,23868,24116,24164,24180,24756,24976,25012,25996,27012,27500,27552,27652,27704,27828,28e3,28288,28416,28536,28620,28652,28688,28800,29200,29824,30112,30396,30460,30480,30512,30576,30596,32200,32284,32308,32320,32404,32640,32736,32828,33064,33128,33196,33328,36212,36244,36312,36368,36528,36592,36684,36748,36812,36876,36940,37008,37072,37156,37364,37640,37948,38084,38164,38332,38536,38572,38848,38872,39088,41356,41488,41956,42388,42452,43044,43064,43292,43332,43484,43544,43584,43652,43816,43844,44756,44984,45008,45800,46260,46320,46400,46496,46512,46912,46960,46972,46984,47500,47552,47972,48048,48348,48424,48500,48576,48632,49504,49836,49856,50176,50500,50648,50656,50876,50904,50916,51260,51288,51440,51520,51560,51568,52476,52880,53168,53836,53948,53968,54e3,54028,54076,54204,54448,54468,54668,54816,55032,55188,55860,55876,56512,56804,56820,56892,56900,57436,57636,58008,58268,58284,58304,60068,60084,60968,60984,61880,62144,62676,63672,63804,63948,64020,64324,64376,64488,65184,65596,65660,65676,65736,65816,65840,66308,66936,67172,67188,67292,67676,67824,67840,68032,68048,68280,68436,68456,68812,69048,69064,69116,69232,69248,69264,69296,69612,69628,70252,70404,70532,70548,70876,70892,71020,71244,71380,71876,71968,72360,72516,72564,72624,73004,73020,73204,73532,73836,73920,73940,74088,74100,74120,74340,74396,75040,75152,75228,75780,75896,76564,76672,76736,77304,77388,77920,78264,78284,78696,78708,78720,78732,78780,78880,78892,78904,78972,79200,79472,79716,80012,80032,80072,80252,80308,80448,80708,81156,81176,81476,81496,81620,81668,81760,82104,82224,82280,82408,82464,82724,82744,82992,83012,83260,83280,83456,83704,83724,83828,83892,84280,84332,84444,84464,84932,84972,85e3,85040,85048,85060,85228,85384,85468,85496,86008,86152,86232,86348,86388,86400,86408,86416,86424,86432,86492,86548,86556,86568,86588,86596,86620,86680,86784,86832,86860]);for(var i=0;i<relocations.length;i++){HEAPU32[eb+relocations[i]>>2]=HEAPU32[eb+relocations[i]>>2]+eb}}));var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]==="string"){var line=key+"="+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var i=0;try{if(offset===0&&length===0){stream.tty.ops.flush(stream.tty)}else{while(i<length){stream.tty.ops.put_char(stream.tty,buffer[offset+i]);i++}}}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){canOwn=false;if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={"1024":flags["O_APPEND"],"64":flags["O_CREAT"],"128":flags["O_EXCL"],"0":flags["O_RDONLY"],"2":flags["O_RDWR"],"4096":flags["O_SYNC"],"512":flags["O_TRUNC"],"1":flags["O_WRONLY"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto")["randomBytes"](1)[0]})}else{random_device=(function(){abort("random_device")})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!=="undefined"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}var DLFCN={error:null,errorMsg:null,loadedLibs:{},loadedLibNames:{}};function _dlclose(handle){if(!DLFCN.loadedLibs[handle]){DLFCN.errorMsg="Tried to dlclose() unopened handle: "+handle;return 1}else{var lib_record=DLFCN.loadedLibs[handle];if(--lib_record.refcount==0){if(lib_record.module.cleanups){lib_record.module.cleanups.forEach((function(cleanup){cleanup()}))}delete DLFCN.loadedLibNames[lib_record.name];delete DLFCN.loadedLibs[handle]}return 0}}function _dlerror(){if(DLFCN.errorMsg===null){return 0}else{if(DLFCN.error)_free(DLFCN.error);var msgArr=intArrayFromString(DLFCN.errorMsg);DLFCN.error=allocate(msgArr,"i8",ALLOC_NORMAL);DLFCN.errorMsg=null;return DLFCN.error}}function _dlsym(handle,symbol){symbol=Pointer_stringify(symbol);if(!DLFCN.loadedLibs[handle]){DLFCN.errorMsg="Tried to dlsym() from an unopened handle: "+handle;return 0}else{var lib=DLFCN.loadedLibs[handle];symbol="_"+symbol;if(!lib.module.hasOwnProperty(symbol)){DLFCN.errorMsg='Tried to lookup unknown symbol "'+symbol+'" in dynamic lib: '+lib.name;return 0}else{var result=lib.module[symbol];if(typeof result==="function"){return addFunction(result)}return result}}}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}else if(mode==2){if(typeof setImmediate==="undefined"){var setImmediates=[];var emscriptenMainLoopMessageId="setimmediate";function Browser_setImmediate_messageHandler(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}}addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module["setImmediates"]===undefined)Module["setImmediates"]=[];Module["setImmediates"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,"*")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method="immediate"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module["noExitRuntime"]=true;assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!=="undefined"){browserIterationFunc=(function(){Module["dynCall_vi"](func,arg)})}else{browserIterationFunc=(function(){Module["dynCall_v"](func)})}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}if(Browser.mainLoop.method==="timeout"&&Module.ctx){err("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");Browser.mainLoop.method=""}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"SimulateInfiniteLoop"}}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}}),runIter:(function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)err("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()})},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===Module["canvas"]||document["mozPointerLockElement"]===Module["canvas"]||document["webkitPointerLockElement"]===Module["canvas"]||document["msPointerLockElement"]===Module["canvas"]}var canvas=Module["canvas"];if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||(function(){});canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",(function(ev){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;if(typeof Browser.vrDevice==="undefined")Browser.vrDevice=null;var canvas=Module["canvas"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.exitFullscreen=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["msExitFullscreen"]||document["webkitCancelFullScreen"]||(function(){});canvas.exitFullscreen=canvas.exitFullscreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullscreen);if(Module["onFullscreen"])Module["onFullscreen"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullscreenChange,false);document.addEventListener("mozfullscreenchange",fullscreenChange,false);document.addEventListener("webkitfullscreenchange",fullscreenChange,false);document.addEventListener("MSFullscreenChange",fullscreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer["requestFullscreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullscreen"]?(function(){canvasContainer["webkitRequestFullscreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null)||(canvasContainer["webkitRequestFullScreen"]?(function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null);if(vrDevice){canvasContainer.requestFullscreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullscreen()}}),requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){err("Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.");Browser.requestFullScreen=(function(lockPointer,resizeCanvas,vrDevice){return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)});return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module["noExitRuntime"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module["noExitRuntime"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)}),getMovementX:(function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0}),getMovementY:(function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail;break;case"mousewheel":delta=event.wheelDelta;break;case"wheel":delta=event["deltaY"];break;default:throw"unrecognized mouse wheel event: "+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),asyncLoad:(function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al "+url):"";Module["readAsync"](url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)}),(function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}}));if(dep)addRunDependency(dep)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,alpha:false,depth:true,stencil:true,antialias:true,stringCache:{},setErrorCode:(function(code){EGL.errorCode=code}),chooseConfig:(function(display,attribList,config,config_size,numConfigs){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(attribList){for(;;){var param=HEAP32[attribList>>2];if(param==12321){var alphaSize=HEAP32[attribList+4>>2];EGL.alpha=alphaSize>0}else if(param==12325){var depthSize=HEAP32[attribList+4>>2];EGL.depth=depthSize>0}else if(param==12326){var stencilSize=HEAP32[attribList+4>>2];EGL.stencil=stencilSize>0}else if(param==12337){var samples=HEAP32[attribList+4>>2];EGL.antialias=samples>0}else if(param==12338){var samples=HEAP32[attribList+4>>2];EGL.antialias=samples==1}else if(param==12344){break}attribList+=8}}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(12300);return 0}if(numConfigs){HEAP32[numConfigs>>2]=1}if(config&&config_size>0){HEAP32[config>>2]=62002}EGL.setErrorCode(12288);return 1})};function _eglBindAPI(api){if(api==12448){EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12300);return 0}}function _eglChooseConfig(display,attrib_list,configs,config_size,numConfigs){return EGL.chooseConfig(display,attrib_list,configs,config_size,numConfigs)}var GLUT={initTime:null,idleFunc:null,displayFunc:null,keyboardFunc:null,keyboardUpFunc:null,specialFunc:null,specialUpFunc:null,reshapeFunc:null,motionFunc:null,passiveMotionFunc:null,mouseFunc:null,buttons:0,modifiers:0,initWindowWidth:256,initWindowHeight:256,initDisplayMode:18,windowX:0,windowY:0,windowWidth:0,windowHeight:0,requestedAnimationFrame:false,saveModifiers:(function(event){GLUT.modifiers=0;if(event["shiftKey"])GLUT.modifiers+=1;if(event["ctrlKey"])GLUT.modifiers+=2;if(event["altKey"])GLUT.modifiers+=4}),onMousemove:(function(event){var lastX=Browser.mouseX;var lastY=Browser.mouseY;Browser.calculateMouseEvent(event);var newX=Browser.mouseX;var newY=Browser.mouseY;if(newX==lastX&&newY==lastY)return;if(GLUT.buttons==0&&event.target==Module["canvas"]&&GLUT.passiveMotionFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_vii"](GLUT.passiveMotionFunc,lastX,lastY)}else if(GLUT.buttons!=0&&GLUT.motionFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_vii"](GLUT.motionFunc,lastX,lastY)}}),getSpecialKey:(function(keycode){var key=null;switch(keycode){case 8:key=120;break;case 46:key=111;break;case 112:key=1;break;case 113:key=2;break;case 114:key=3;break;case 115:key=4;break;case 116:key=5;break;case 117:key=6;break;case 118:key=7;break;case 119:key=8;break;case 120:key=9;break;case 121:key=10;break;case 122:key=11;break;case 123:key=12;break;case 37:key=100;break;case 38:key=101;break;case 39:key=102;break;case 40:key=103;break;case 33:key=104;break;case 34:key=105;break;case 36:key=106;break;case 35:key=107;break;case 45:key=108;break;case 16:case 5:key=112;break;case 6:key=113;break;case 17:case 3:key=114;break;case 4:key=115;break;case 18:case 2:key=116;break;case 1:key=117;break}return key}),getASCIIKey:(function(event){if(event["ctrlKey"]||event["altKey"]||event["metaKey"])return null;var keycode=event["keyCode"];if(48<=keycode&&keycode<=57)return keycode;if(65<=keycode&&keycode<=90)return event["shiftKey"]?keycode:keycode+32;if(96<=keycode&&keycode<=105)return keycode-48;if(106<=keycode&&keycode<=111)return keycode-106+42;switch(keycode){case 9:case 13:case 27:case 32:case 61:return keycode}var s=event["shiftKey"];switch(keycode){case 186:return s?58:59;case 187:return s?43:61;case 188:return s?60:44;case 189:return s?95:45;case 190:return s?62:46;case 191:return s?63:47;case 219:return s?123:91;case 220:return s?124:47;case 221:return s?125:93;case 222:return s?34:39}return null}),onKeydown:(function(event){if(GLUT.specialFunc||GLUT.keyboardFunc){var key=GLUT.getSpecialKey(event["keyCode"]);if(key!==null){if(GLUT.specialFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.specialFunc,key,Browser.mouseX,Browser.mouseY)}}else{key=GLUT.getASCIIKey(event);if(key!==null&&GLUT.keyboardFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.keyboardFunc,key,Browser.mouseX,Browser.mouseY)}}}}),onKeyup:(function(event){if(GLUT.specialUpFunc||GLUT.keyboardUpFunc){var key=GLUT.getSpecialKey(event["keyCode"]);if(key!==null){if(GLUT.specialUpFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.specialUpFunc,key,Browser.mouseX,Browser.mouseY)}}else{key=GLUT.getASCIIKey(event);if(key!==null&&GLUT.keyboardUpFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.keyboardUpFunc,key,Browser.mouseX,Browser.mouseY)}}}}),touchHandler:(function(event){if(event.target!=Module["canvas"]){return}var touches=event.changedTouches,main=touches[0],type="";switch(event.type){case"touchstart":type="mousedown";break;case"touchmove":type="mousemove";break;case"touchend":type="mouseup";break;default:return}var simulatedEvent=document.createEvent("MouseEvent");simulatedEvent.initMouseEvent(type,true,true,window,1,main.screenX,main.screenY,main.clientX,main.clientY,false,false,false,false,0,null);main.target.dispatchEvent(simulatedEvent);event.preventDefault()}),onMouseButtonDown:(function(event){Browser.calculateMouseEvent(event);GLUT.buttons|=1<<event["button"];if(event.target==Module["canvas"]&&GLUT.mouseFunc){try{event.target.setCapture()}catch(e){}event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,event["button"],0,Browser.mouseX,Browser.mouseY)}}),onMouseButtonUp:(function(event){Browser.calculateMouseEvent(event);GLUT.buttons&=~(1<<event["button"]);if(GLUT.mouseFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,event["button"],1,Browser.mouseX,Browser.mouseY)}}),onMouseWheel:(function(event){Browser.calculateMouseEvent(event);var e=window.event||event;var delta=-Browser.getMouseWheelDelta(event);delta=delta==0?0:delta>0?Math.max(delta,1):Math.min(delta,-1);var button=3;if(delta<0){button=4}if(GLUT.mouseFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,button,0,Browser.mouseX,Browser.mouseY)}}),onFullscreenEventChange:(function(event){var width;var height;if(document["fullscreen"]||document["fullScreen"]||document["mozFullScreen"]||document["webkitIsFullScreen"]){width=screen["width"];height=screen["height"]}else{width=GLUT.windowWidth;height=GLUT.windowHeight;document.removeEventListener("fullscreenchange",GLUT.onFullscreenEventChange,true);document.removeEventListener("mozfullscreenchange",GLUT.onFullscreenEventChange,true);document.removeEventListener("webkitfullscreenchange",GLUT.onFullscreenEventChange,true)}Browser.setCanvasSize(width,height,true);if(GLUT.reshapeFunc){Module["dynCall_vii"](GLUT.reshapeFunc,width,height)}_glutPostRedisplay()}),requestFullscreen:(function(){Browser.requestFullscreen(false,false)}),requestFullScreen:(function(){err("GLUT.requestFullScreen() is deprecated. Please call GLUT.requestFullscreen instead.");GLUT.requestFullScreen=(function(){return GLUT.requestFullscreen()});return GLUT.requestFullscreen()}),exitFullscreen:(function(){var CFS=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||(function(){});CFS.apply(document,[])}),cancelFullScreen:(function(){err("GLUT.cancelFullScreen() is deprecated. Please call GLUT.exitFullscreen instead.");GLUT.cancelFullScreen=(function(){return GLUT.exitFullscreen()});return GLUT.exitFullscreen()})};function _glutInitDisplayMode(mode){GLUT.initDisplayMode=mode}function _glutCreateWindow(name){var contextAttributes={antialias:(GLUT.initDisplayMode&128)!=0,depth:(GLUT.initDisplayMode&16)!=0,stencil:(GLUT.initDisplayMode&32)!=0,alpha:(GLUT.initDisplayMode&8)!=0};Module.ctx=Browser.createContext(Module["canvas"],true,true,contextAttributes);return Module.ctx?1:0}var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},tempFixedLengthArray:[],packAlignment:4,unpackAlignment:4,init:(function(){GL.miniTempBuffer=new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);for(var i=0;i<GL.MINI_TEMP_BUFFER_SIZE;i++){GL.miniTempBufferViews[i]=GL.miniTempBuffer.subarray(0,i+1)}for(var i=0;i<32;i++){GL.tempFixedLengthArray.push(new Array(i))}}),recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:(function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret}),MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:(function(shader,count,string,length){var source="";for(var i=0;i<count;++i){var frag;if(length){var len=HEAP32[length+i*4>>2];if(len<0){frag=Pointer_stringify(HEAP32[string+i*4>>2])}else{frag=Pointer_stringify(HEAP32[string+i*4>>2],len)}}else{frag=Pointer_stringify(HEAP32[string+i*4>>2])}source+=frag}return source}),createContext:(function(canvas,webGLContextAttributes){if(typeof webGLContextAttributes["majorVersion"]==="undefined"&&typeof webGLContextAttributes["minorVersion"]==="undefined"){webGLContextAttributes["majorVersion"]=1;webGLContextAttributes["minorVersion"]=0}var ctx;var errorInfo="?";function onContextCreationError(event){errorInfo=event.statusMessage||errorInfo}try{canvas.addEventListener("webglcontextcreationerror",onContextCreationError,false);try{if(webGLContextAttributes["majorVersion"]==1&&webGLContextAttributes["minorVersion"]==0){ctx=canvas.getContext("webgl",webGLContextAttributes)||canvas.getContext("experimental-webgl",webGLContextAttributes)}else if(webGLContextAttributes["majorVersion"]==2&&webGLContextAttributes["minorVersion"]==0){ctx=canvas.getContext("webgl2",webGLContextAttributes)}else{throw"Unsupported WebGL context version "+majorVersion+"."+minorVersion+"!"}}finally{canvas.removeEventListener("webglcontextcreationerror",onContextCreationError,false)}if(!ctx)throw":("}catch(e){return 0}if(!ctx)return 0;var context=GL.registerContext(ctx,webGLContextAttributes);return context}),registerContext:(function(ctx,webGLContextAttributes){var handle=_malloc(8);HEAP32[handle>>2]=webGLContextAttributes["explicitSwapControl"];var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes["majorVersion"],GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes["enableExtensionsByDefault"]==="undefined"||webGLContextAttributes["enableExtensionsByDefault"]){GL.initExtensions(context)}return handle}),makeContextCurrent:(function(contextHandle){if(!contextHandle){GLctx=Module.ctx=GL.currentContext=null;return true}var context=GL.contexts[contextHandle];if(!context){return false}GLctx=Module.ctx=context.GLctx;GL.currentContext=context;return true}),getContext:(function(contextHandle){return GL.contexts[contextHandle]}),deleteContext:(function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents==="object")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle]);GL.contexts[contextHandle]=null}),initExtensions:(function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;if(context.version<2){var instancedArraysExt=GLctx.getExtension("ANGLE_instanced_arrays");if(instancedArraysExt){GLctx["vertexAttribDivisor"]=(function(index,divisor){instancedArraysExt["vertexAttribDivisorANGLE"](index,divisor)});GLctx["drawArraysInstanced"]=(function(mode,first,count,primcount){instancedArraysExt["drawArraysInstancedANGLE"](mode,first,count,primcount)});GLctx["drawElementsInstanced"]=(function(mode,count,type,indices,primcount){instancedArraysExt["drawElementsInstancedANGLE"](mode,count,type,indices,primcount)})}var vaoExt=GLctx.getExtension("OES_vertex_array_object");if(vaoExt){GLctx["createVertexArray"]=(function(){return vaoExt["createVertexArrayOES"]()});GLctx["deleteVertexArray"]=(function(vao){vaoExt["deleteVertexArrayOES"](vao)});GLctx["bindVertexArray"]=(function(vao){vaoExt["bindVertexArrayOES"](vao)});GLctx["isVertexArray"]=(function(vao){return vaoExt["isVertexArrayOES"](vao)})}var drawBuffersExt=GLctx.getExtension("WEBGL_draw_buffers");if(drawBuffersExt){GLctx["drawBuffers"]=(function(n,bufs){drawBuffersExt["drawBuffersWEBGL"](n,bufs)})}}GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query");var automaticallyEnabledExtensions=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2"];var exts=GLctx.getSupportedExtensions();if(exts&&exts.length>0){GLctx.getSupportedExtensions().forEach((function(ext){if(automaticallyEnabledExtensions.indexOf(ext)!=-1){GLctx.getExtension(ext)}}))}}),populateUniformTable:(function(program){var p=GL.programs[program];GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var ptable=GL.programInfos[program];var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,GLctx.ACTIVE_UNIFORMS);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.indexOf("]",name.length-1)!==-1){var ls=name.lastIndexOf("[");name=name.slice(0,ls)}var loc=GLctx.getUniformLocation(p,name);if(loc!=null){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+"["+j+"]";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}})};function _eglCreateContext(display,config,hmm,contextAttribs){if(display!=62e3){EGL.setErrorCode(12296);return 0}var glesContextVersion=1;for(;;){var param=HEAP32[contextAttribs>>2];if(param==12440){glesContextVersion=HEAP32[contextAttribs+4>>2]}else if(param==12344){break}else{EGL.setErrorCode(12292);return 0}contextAttribs+=8}if(glesContextVersion!=2){EGL.setErrorCode(12293);return 0}var displayMode=0;displayMode|=2;if(EGL.alpha)displayMode|=8;if(EGL.depth)displayMode|=16;if(EGL.stencil)displayMode|=32;if(EGL.antialias)displayMode|=128;_glutInitDisplayMode(displayMode);EGL.windowID=_glutCreateWindow();if(EGL.windowID!=0){EGL.setErrorCode(12288);return 62004}else{EGL.setErrorCode(12297);return 0}}function _eglCreateWindowSurface(display,config,win,attrib_list){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}EGL.setErrorCode(12288);return 62006}function _eglDestroyContext(display,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=62004){EGL.setErrorCode(12294);return 0}EGL.setErrorCode(12288);return 1}function _eglDestroySurface(display,surface){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(surface!=62006){EGL.setErrorCode(12301);return 1}if(EGL.currentReadSurface==surface){EGL.currentReadSurface=0}if(EGL.currentDrawSurface==surface){EGL.currentDrawSurface=0}EGL.setErrorCode(12288);return 1}function _eglGetConfigAttrib(display,config,attribute,value){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}if(!value){EGL.setErrorCode(12300);return 0}EGL.setErrorCode(12288);switch(attribute){case 12320:HEAP32[value>>2]=32;return 1;case 12321:HEAP32[value>>2]=8;return 1;case 12322:HEAP32[value>>2]=8;return 1;case 12323:HEAP32[value>>2]=8;return 1;case 12324:HEAP32[value>>2]=8;return 1;case 12325:HEAP32[value>>2]=24;return 1;case 12326:HEAP32[value>>2]=8;return 1;case 12327:HEAP32[value>>2]=12344;return 1;case 12328:HEAP32[value>>2]=62002;return 1;case 12329:HEAP32[value>>2]=0;return 1;case 12330:HEAP32[value>>2]=4096;return 1;case 12331:HEAP32[value>>2]=16777216;return 1;case 12332:HEAP32[value>>2]=4096;return 1;case 12333:HEAP32[value>>2]=0;return 1;case 12334:HEAP32[value>>2]=0;return 1;case 12335:HEAP32[value>>2]=12344;return 1;case 12337:HEAP32[value>>2]=4;return 1;case 12338:HEAP32[value>>2]=1;return 1;case 12339:HEAP32[value>>2]=4;return 1;case 12340:HEAP32[value>>2]=12344;return 1;case 12341:case 12342:case 12343:HEAP32[value>>2]=-1;return 1;case 12345:case 12346:HEAP32[value>>2]=0;return 1;case 12347:case 12348:HEAP32[value>>2]=1;return 1;case 12349:case 12350:HEAP32[value>>2]=0;return 1;case 12351:HEAP32[value>>2]=12430;return 1;case 12352:HEAP32[value>>2]=4;return 1;case 12354:HEAP32[value>>2]=0;return 1;default:EGL.setErrorCode(12292);return 0}}function _eglGetDisplay(nativeDisplayType){EGL.setErrorCode(12288);return 62e3}function _eglGetError(){return EGL.errorCode}function _eglGetProcAddress(name_){return _emscripten_GetProcAddress(name_)}function _eglInitialize(display,majorVersion,minorVersion){if(display==62e3){if(majorVersion){HEAP32[majorVersion>>2]=1}if(minorVersion){HEAP32[minorVersion>>2]=4}EGL.defaultDisplayInitialized=true;EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12296);return 0}}function _eglMakeCurrent(display,draw,read,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=0&&context!=62004){EGL.setErrorCode(12294);return 0}if(read!=0&&read!=62006||draw!=0&&draw!=62006){EGL.setErrorCode(12301);return 0}EGL.currentContext=context;EGL.currentDrawSurface=draw;EGL.currentReadSurface=read;EGL.setErrorCode(12288);return 1}function _eglQueryString(display,name){if(display!=62e3){EGL.setErrorCode(12296);return 0}EGL.setErrorCode(12288);if(EGL.stringCache[name])return EGL.stringCache[name];var ret;switch(name){case 12371:ret=allocate(intArrayFromString("Emscripten"),"i8",ALLOC_NORMAL);break;case 12372:ret=allocate(intArrayFromString("1.4 Emscripten EGL"),"i8",ALLOC_NORMAL);break;case 12373:ret=allocate(intArrayFromString(""),"i8",ALLOC_NORMAL);break;case 12429:ret=allocate(intArrayFromString("OpenGL_ES"),"i8",ALLOC_NORMAL);break;default:EGL.setErrorCode(12300);return 0}EGL.stringCache[name]=ret;return ret}function _eglSwapBuffers(){if(!EGL.defaultDisplayInitialized){EGL.setErrorCode(12289)}else if(!Module.ctx){EGL.setErrorCode(12290)}else if(Module.ctx.isContextLost()){EGL.setErrorCode(12302)}else{EGL.setErrorCode(12288);return 1}return 0}function _eglSwapInterval(display,interval){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval);EGL.setErrorCode(12288);return 1}function _eglTerminate(display){if(display!=62e3){EGL.setErrorCode(12296);return 0}EGL.currentContext=0;EGL.currentReadSurface=0;EGL.currentDrawSurface=0;EGL.defaultDisplayInitialized=false;EGL.setErrorCode(12288);return 1}function _eglWaitClient(){EGL.setErrorCode(12288);return 1}function _eglWaitGL(){return _eglWaitClient.apply(null,arguments)}function _eglWaitNative(nativeEngineId){EGL.setErrorCode(12288);return 1}function _emscripten_get_canvas_element_size(target,width,height){var canvas=JSEvents.findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height}function __get_canvas_element_size(target){var stackTop=stackSave();var w=stackAlloc(8);var h=w+4;var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);var ret=_emscripten_get_canvas_element_size(targetInt,w,h);var size=[HEAP32[w>>2],HEAP32[h>>2]];stackRestore(stackTop);return size}function _emscripten_set_canvas_element_size(target,width,height){var canvas=JSEvents.findCanvasEventTarget(target);if(!canvas)return-4;canvas.width=width;canvas.height=height;return 0}function __set_canvas_element_size(target,width,height){if(!target.controlTransferredOffscreen){target.width=width;target.height=height}else{var stackTop=stackSave();var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);_emscripten_set_canvas_element_size(targetInt,width,height);stackRestore(stackTop)}}var JSEvents={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,lastGamepadState:null,lastGamepadStateFrame:null,numGamepadsConnected:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:false,_onGamepadConnected:(function(){++JSEvents.numGamepadsConnected}),_onGamepadDisconnected:(function(){--JSEvents.numGamepadsConnected}),staticInit:(function(){if(typeof window!=="undefined"){window.addEventListener("gamepadconnected",JSEvents._onGamepadConnected);window.addEventListener("gamepaddisconnected",JSEvents._onGamepadDisconnected);var firstState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null;if(firstState){JSEvents.numGamepadsConnected=firstState.length}}}),removeAllEventListeners:(function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[];if(typeof window!=="undefined"){window.removeEventListener("gamepadconnected",JSEvents._onGamepadConnected);window.removeEventListener("gamepaddisconnected",JSEvents._onGamepadDisconnected)}}),registerRemoveEventListeners:(function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}}),findEventTarget:(function(target){try{if(!target)return window;if(typeof target==="number")target=Pointer_stringify(target);if(target==="#window")return window;else if(target==="#document")return document;else if(target==="#screen")return window.screen;else if(target==="#canvas")return Module["canvas"];return typeof target==="string"?document.getElementById(target):target}catch(e){return null}}),findCanvasEventTarget:(function(target){if(typeof target==="number")target=Pointer_stringify(target);if(!target||target==="#canvas"){if(typeof GL!=="undefined"&&GL.offscreenCanvases["canvas"])return GL.offscreenCanvases["canvas"];return Module["canvas"]}if(typeof GL!=="undefined"&&GL.offscreenCanvases[target])return GL.offscreenCanvases[target];return JSEvents.findEventTarget(target)}),deferredCalls:[],deferCall:(function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort((function(x,y){return x.precedence<y.precedence}))}),removeDeferredCalls:(function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}}),canPerformEventHandlerRequests:(function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls}),runDeferredCalls:(function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(this,call.argsList)}}),inEventHandler:0,currentEventHandler:null,eventHandlers:[],isInternetExplorer:(function(){return navigator.userAgent.indexOf("MSIE")!==-1||navigator.appVersion.indexOf("Trident/")>0}),removeAllHandlersOnTarget:(function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}}),_removeHandler:(function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)}),registerOrRemoveHandler:(function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}}),registerKeyEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.keyEvent)JSEvents.keyEvent=_malloc(164);var keyEventHandlerFunc=(function(event){var e=event||window.event;var keyEventData=JSEvents.keyEvent;stringToUTF8(e.key?e.key:"",keyEventData+0,32);stringToUTF8(e.code?e.code:"",keyEventData+32,32);HEAP32[keyEventData+64>>2]=e.location;HEAP32[keyEventData+68>>2]=e.ctrlKey;HEAP32[keyEventData+72>>2]=e.shiftKey;HEAP32[keyEventData+76>>2]=e.altKey;HEAP32[keyEventData+80>>2]=e.metaKey;HEAP32[keyEventData+84>>2]=e.repeat;stringToUTF8(e.locale?e.locale:"",keyEventData+88,32);stringToUTF8(e.char?e.char:"",keyEventData+120,32);HEAP32[keyEventData+152>>2]=e.charCode;HEAP32[keyEventData+156>>2]=e.keyCode;HEAP32[keyEventData+160>>2]=e.which;if(Module["dynCall_iiii"](callbackfunc,eventTypeId,keyEventData,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:JSEvents.isInternetExplorer()?false:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:keyEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),getBoundingClientRectOrZeros:(function(target){return target.getBoundingClientRect?target.getBoundingClientRect():{left:0,top:0}}),fillMouseEventData:(function(eventStruct,e,target){HEAPF64[eventStruct>>3]=JSEvents.tick();HEAP32[eventStruct+8>>2]=e.screenX;HEAP32[eventStruct+12>>2]=e.screenY;HEAP32[eventStruct+16>>2]=e.clientX;HEAP32[eventStruct+20>>2]=e.clientY;HEAP32[eventStruct+24>>2]=e.ctrlKey;HEAP32[eventStruct+28>>2]=e.shiftKey;HEAP32[eventStruct+32>>2]=e.altKey;HEAP32[eventStruct+36>>2]=e.metaKey;HEAP16[eventStruct+40>>1]=e.button;HEAP16[eventStruct+42>>1]=e.buttons;HEAP32[eventStruct+44>>2]=e["movementX"]||e["mozMovementX"]||e["webkitMovementX"]||e.screenX-JSEvents.previousScreenX;HEAP32[eventStruct+48>>2]=e["movementY"]||e["mozMovementY"]||e["webkitMovementY"]||e.screenY-JSEvents.previousScreenY;if(Module["canvas"]){var rect=Module["canvas"].getBoundingClientRect();HEAP32[eventStruct+60>>2]=e.clientX-rect.left;HEAP32[eventStruct+64>>2]=e.clientY-rect.top}else{HEAP32[eventStruct+60>>2]=0;HEAP32[eventStruct+64>>2]=0}if(target){var rect=JSEvents.getBoundingClientRectOrZeros(target);HEAP32[eventStruct+52>>2]=e.clientX-rect.left;HEAP32[eventStruct+56>>2]=e.clientY-rect.top}else{HEAP32[eventStruct+52>>2]=0;HEAP32[eventStruct+56>>2]=0}if(e.type!=="wheel"&&e.type!=="mousewheel"){JSEvents.previousScreenX=e.screenX;JSEvents.previousScreenY=e.screenY}}),registerMouseEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.mouseEvent)JSEvents.mouseEvent=_malloc(72);target=JSEvents.findEventTarget(target);var mouseEventHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillMouseEventData(JSEvents.mouseEvent,e,target);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.mouseEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:eventTypeString!="mousemove"&&eventTypeString!="mouseenter"&&eventTypeString!="mouseleave",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:mouseEventHandlerFunc,useCapture:useCapture};if(JSEvents.isInternetExplorer()&&eventTypeString=="mousedown")eventHandler.allowsDeferredCalls=false;JSEvents.registerOrRemoveHandler(eventHandler)}),registerWheelEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.wheelEvent)JSEvents.wheelEvent=_malloc(104);target=JSEvents.findEventTarget(target);var wheelHandlerFunc=(function(event){var e=event||window.event;var wheelEvent=JSEvents.wheelEvent;JSEvents.fillMouseEventData(wheelEvent,e,target);HEAPF64[wheelEvent+72>>3]=e["deltaX"];HEAPF64[wheelEvent+80>>3]=e["deltaY"];HEAPF64[wheelEvent+88>>3]=e["deltaZ"];HEAP32[wheelEvent+96>>2]=e["deltaMode"];if(Module["dynCall_iiii"](callbackfunc,eventTypeId,wheelEvent,userData))e.preventDefault()});var mouseWheelHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillMouseEventData(JSEvents.wheelEvent,e,target);HEAPF64[JSEvents.wheelEvent+72>>3]=e["wheelDeltaX"]||0;HEAPF64[JSEvents.wheelEvent+80>>3]=-(e["wheelDeltaY"]?e["wheelDeltaY"]:e["wheelDelta"]);HEAPF64[JSEvents.wheelEvent+88>>3]=0;HEAP32[JSEvents.wheelEvent+96>>2]=0;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.wheelEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:eventTypeString=="wheel"?wheelHandlerFunc:mouseWheelHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),pageScrollPos:(function(){if(window.pageXOffset>0||window.pageYOffset>0){return[window.pageXOffset,window.pageYOffset]}if(typeof document.documentElement.scrollLeft!=="undefined"||typeof document.documentElement.scrollTop!=="undefined"){return[document.documentElement.scrollLeft,document.documentElement.scrollTop]}return[document.body.scrollLeft|0,document.body.scrollTop|0]}),registerUiEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.uiEvent)JSEvents.uiEvent=_malloc(36);if(eventTypeString=="scroll"&&!target){target=document}else{target=JSEvents.findEventTarget(target)}var uiEventHandlerFunc=(function(event){var e=event||window.event;if(e.target!=target){return}var scrollPos=JSEvents.pageScrollPos();var uiEvent=JSEvents.uiEvent;HEAP32[uiEvent>>2]=e.detail;HEAP32[uiEvent+4>>2]=document.body.clientWidth;HEAP32[uiEvent+8>>2]=document.body.clientHeight;HEAP32[uiEvent+12>>2]=window.innerWidth;HEAP32[uiEvent+16>>2]=window.innerHeight;HEAP32[uiEvent+20>>2]=window.outerWidth;HEAP32[uiEvent+24>>2]=window.outerHeight;HEAP32[uiEvent+28>>2]=scrollPos[0];HEAP32[uiEvent+32>>2]=scrollPos[1];if(Module["dynCall_iiii"](callbackfunc,eventTypeId,uiEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:uiEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),getNodeNameForTarget:(function(target){if(!target)return"";if(target==window)return"#window";if(target==window.screen)return"#screen";return target&&target.nodeName?target.nodeName:""}),registerFocusEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.focusEvent)JSEvents.focusEvent=_malloc(256);var focusEventHandlerFunc=(function(event){var e=event||window.event;var nodeName=JSEvents.getNodeNameForTarget(e.target);var id=e.target.id?e.target.id:"";var focusEvent=JSEvents.focusEvent;stringToUTF8(nodeName,focusEvent+0,128);stringToUTF8(id,focusEvent+128,128);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,focusEvent,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:focusEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),tick:(function(){if(window["performance"]&&window["performance"]["now"])return window["performance"]["now"]();else return Date.now()}),fillDeviceOrientationEventData:(function(eventStruct,e,target){HEAPF64[eventStruct>>3]=JSEvents.tick();HEAPF64[eventStruct+8>>3]=e.alpha;HEAPF64[eventStruct+16>>3]=e.beta;HEAPF64[eventStruct+24>>3]=e.gamma;HEAP32[eventStruct+32>>2]=e.absolute}),registerDeviceOrientationEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.deviceOrientationEvent)JSEvents.deviceOrientationEvent=_malloc(40);var deviceOrientationEventHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillDeviceOrientationEventData(JSEvents.deviceOrientationEvent,e,target);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.deviceOrientationEvent,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:deviceOrientationEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),fillDeviceMotionEventData:(function(eventStruct,e,target){HEAPF64[eventStruct>>3]=JSEvents.tick();HEAPF64[eventStruct+8>>3]=e.acceleration.x;HEAPF64[eventStruct+16>>3]=e.acceleration.y;HEAPF64[eventStruct+24>>3]=e.acceleration.z;HEAPF64[eventStruct+32>>3]=e.accelerationIncludingGravity.x;HEAPF64[eventStruct+40>>3]=e.accelerationIncludingGravity.y;HEAPF64[eventStruct+48>>3]=e.accelerationIncludingGravity.z;HEAPF64[eventStruct+56>>3]=e.rotationRate.alpha;HEAPF64[eventStruct+64>>3]=e.rotationRate.beta;HEAPF64[eventStruct+72>>3]=e.rotationRate.gamma}),registerDeviceMotionEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.deviceMotionEvent)JSEvents.deviceMotionEvent=_malloc(80);var deviceMotionEventHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillDeviceMotionEventData(JSEvents.deviceMotionEvent,e,target);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.deviceMotionEvent,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:deviceMotionEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),screenOrientation:(function(){if(!window.screen)return undefined;return window.screen.orientation||window.screen.mozOrientation||window.screen.webkitOrientation||window.screen.msOrientation}),fillOrientationChangeEventData:(function(eventStruct,e){var orientations=["portrait-primary","portrait-secondary","landscape-primary","landscape-secondary"];var orientations2=["portrait","portrait","landscape","landscape"];var orientationString=JSEvents.screenOrientation();var orientation=orientations.indexOf(orientationString);if(orientation==-1){orientation=orientations2.indexOf(orientationString)}HEAP32[eventStruct>>2]=1<<orientation;HEAP32[eventStruct+4>>2]=window.orientation}),registerOrientationChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.orientationChangeEvent)JSEvents.orientationChangeEvent=_malloc(8);if(!target){target=window.screen}else{target=JSEvents.findEventTarget(target)}var orientationChangeEventHandlerFunc=(function(event){var e=event||window.event;var orientationChangeEvent=JSEvents.orientationChangeEvent;JSEvents.fillOrientationChangeEventData(orientationChangeEvent,e);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,orientationChangeEvent,userData))e.preventDefault()});if(eventTypeString=="orientationchange"&&window.screen.mozOrientation!==undefined){eventTypeString="mozorientationchange"}var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:orientationChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),fullscreenEnabled:(function(){return document.fullscreenEnabled||document.mozFullScreenEnabled||document.webkitFullscreenEnabled||document.msFullscreenEnabled}),fillFullscreenChangeEventData:(function(eventStruct,e){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;var isFullscreen=!!fullscreenElement;HEAP32[eventStruct>>2]=isFullscreen;HEAP32[eventStruct+4>>2]=JSEvents.fullscreenEnabled();var reportedElement=isFullscreen?fullscreenElement:JSEvents.previousFullscreenElement;var nodeName=JSEvents.getNodeNameForTarget(reportedElement);var id=reportedElement&&reportedElement.id?reportedElement.id:"";stringToUTF8(nodeName,eventStruct+8,128);stringToUTF8(id,eventStruct+136,128);HEAP32[eventStruct+264>>2]=reportedElement?reportedElement.clientWidth:0;HEAP32[eventStruct+268>>2]=reportedElement?reportedElement.clientHeight:0;HEAP32[eventStruct+272>>2]=screen.width;HEAP32[eventStruct+276>>2]=screen.height;if(isFullscreen){JSEvents.previousFullscreenElement=fullscreenElement}}),registerFullscreenChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.fullscreenChangeEvent)JSEvents.fullscreenChangeEvent=_malloc(280);if(!target)target=document;else target=JSEvents.findEventTarget(target);var fullscreenChangeEventhandlerFunc=(function(event){var e=event||window.event;var fullscreenChangeEvent=JSEvents.fullscreenChangeEvent;JSEvents.fillFullscreenChangeEventData(fullscreenChangeEvent,e);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,fullscreenChangeEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:fullscreenChangeEventhandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),resizeCanvasForFullscreen:(function(target,strategy){var restoreOldStyle=__registerRestoreOldStyle(target);var cssWidth=strategy.softFullscreen?window.innerWidth:screen.width;var cssHeight=strategy.softFullscreen?window.innerHeight:screen.height;var rect=target.getBoundingClientRect();var windowedCssWidth=rect.right-rect.left;var windowedCssHeight=rect.bottom-rect.top;var canvasSize=__get_canvas_element_size(target);var windowedRttWidth=canvasSize[0];var windowedRttHeight=canvasSize[1];if(strategy.scaleMode==3){__setLetterbox(target,(cssHeight-windowedCssHeight)/2,(cssWidth-windowedCssWidth)/2);cssWidth=windowedCssWidth;cssHeight=windowedCssHeight}else if(strategy.scaleMode==2){if(cssWidth*windowedRttHeight<windowedRttWidth*cssHeight){var desiredCssHeight=windowedRttHeight*cssWidth/windowedRttWidth;__setLetterbox(target,(cssHeight-desiredCssHeight)/2,0);cssHeight=desiredCssHeight}else{var desiredCssWidth=windowedRttWidth*cssHeight/windowedRttHeight;__setLetterbox(target,0,(cssWidth-desiredCssWidth)/2);cssWidth=desiredCssWidth}}if(!target.style.backgroundColor)target.style.backgroundColor="black";if(!document.body.style.backgroundColor)document.body.style.backgroundColor="black";target.style.width=cssWidth+"px";target.style.height=cssHeight+"px";if(strategy.filteringMode==1){target.style.imageRendering="optimizeSpeed";target.style.imageRendering="-moz-crisp-edges";target.style.imageRendering="-o-crisp-edges";target.style.imageRendering="-webkit-optimize-contrast";target.style.imageRendering="optimize-contrast";target.style.imageRendering="crisp-edges";target.style.imageRendering="pixelated"}var dpiScale=strategy.canvasResolutionScaleMode==2?window.devicePixelRatio:1;if(strategy.canvasResolutionScaleMode!=0){var newWidth=cssWidth*dpiScale|0;var newHeight=cssHeight*dpiScale|0;__set_canvas_element_size(target,newWidth,newHeight);if(target.GLctxObject)target.GLctxObject.GLctx.viewport(0,0,newWidth,newHeight)}return restoreOldStyle}),requestFullscreen:(function(target,strategy){if(strategy.scaleMode!=0||strategy.canvasResolutionScaleMode!=0){JSEvents.resizeCanvasForFullscreen(target,strategy)}if(target.requestFullscreen){target.requestFullscreen()}else if(target.msRequestFullscreen){target.msRequestFullscreen()}else if(target.mozRequestFullScreen){target.mozRequestFullScreen()}else if(target.mozRequestFullscreen){target.mozRequestFullscreen()}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}else{if(typeof JSEvents.fullscreenEnabled()==="undefined"){return-1}else{return-3}}if(strategy.canvasResizedCallback){Module["dynCall_iiii"](strategy.canvasResizedCallback,37,0,strategy.canvasResizedCallbackUserData)}return 0}),fillPointerlockChangeEventData:(function(eventStruct,e){var pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement||document.msPointerLockElement;var isPointerlocked=!!pointerLockElement;HEAP32[eventStruct>>2]=isPointerlocked;var nodeName=JSEvents.getNodeNameForTarget(pointerLockElement);var id=pointerLockElement&&pointerLockElement.id?pointerLockElement.id:"";stringToUTF8(nodeName,eventStruct+4,128);stringToUTF8(id,eventStruct+132,128)}),registerPointerlockChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.pointerlockChangeEvent)JSEvents.pointerlockChangeEvent=_malloc(260);if(!target)target=document;else target=JSEvents.findEventTarget(target);var pointerlockChangeEventHandlerFunc=(function(event){var e=event||window.event;var pointerlockChangeEvent=JSEvents.pointerlockChangeEvent;JSEvents.fillPointerlockChangeEventData(pointerlockChangeEvent,e);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,pointerlockChangeEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:pointerlockChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerPointerlockErrorEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!target)target=document;else target=JSEvents.findEventTarget(target);var pointerlockErrorEventHandlerFunc=(function(event){var e=event||window.event;if(Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:pointerlockErrorEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),requestPointerLock:(function(target){if(target.requestPointerLock){target.requestPointerLock()}else if(target.mozRequestPointerLock){target.mozRequestPointerLock()}else if(target.webkitRequestPointerLock){target.webkitRequestPointerLock()}else if(target.msRequestPointerLock){target.msRequestPointerLock()}else{if(document.body.requestPointerLock||document.body.mozRequestPointerLock||document.body.webkitRequestPointerLock||document.body.msRequestPointerLock){return-3}else{return-1}}return 0}),fillVisibilityChangeEventData:(function(eventStruct,e){var visibilityStates=["hidden","visible","prerender","unloaded"];var visibilityState=visibilityStates.indexOf(document.visibilityState);HEAP32[eventStruct>>2]=document.hidden;HEAP32[eventStruct+4>>2]=visibilityState}),registerVisibilityChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.visibilityChangeEvent)JSEvents.visibilityChangeEvent=_malloc(8);if(!target)target=document;else target=JSEvents.findEventTarget(target);var visibilityChangeEventHandlerFunc=(function(event){var e=event||window.event;var visibilityChangeEvent=JSEvents.visibilityChangeEvent;JSEvents.fillVisibilityChangeEventData(visibilityChangeEvent,e);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,visibilityChangeEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:visibilityChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerTouchEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.touchEvent)JSEvents.touchEvent=_malloc(1684);target=JSEvents.findEventTarget(target);var touchEventHandlerFunc=(function(event){var e=event||window.event;var touches={};for(var i=0;i<e.touches.length;++i){var touch=e.touches[i];touches[touch.identifier]=touch}for(var i=0;i<e.changedTouches.length;++i){var touch=e.changedTouches[i];touches[touch.identifier]=touch;touch.changed=true}for(var i=0;i<e.targetTouches.length;++i){var touch=e.targetTouches[i];touches[touch.identifier].onTarget=true}var touchEvent=JSEvents.touchEvent;var ptr=touchEvent;HEAP32[ptr+4>>2]=e.ctrlKey;HEAP32[ptr+8>>2]=e.shiftKey;HEAP32[ptr+12>>2]=e.altKey;HEAP32[ptr+16>>2]=e.metaKey;ptr+=20;var canvasRect=Module["canvas"]?Module["canvas"].getBoundingClientRect():undefined;var targetRect=JSEvents.getBoundingClientRectOrZeros(target);var numTouches=0;for(var i in touches){var t=touches[i];HEAP32[ptr>>2]=t.identifier;HEAP32[ptr+4>>2]=t.screenX;HEAP32[ptr+8>>2]=t.screenY;HEAP32[ptr+12>>2]=t.clientX;HEAP32[ptr+16>>2]=t.clientY;HEAP32[ptr+20>>2]=t.pageX;HEAP32[ptr+24>>2]=t.pageY;HEAP32[ptr+28>>2]=t.changed;HEAP32[ptr+32>>2]=t.onTarget;if(canvasRect){HEAP32[ptr+44>>2]=t.clientX-canvasRect.left;HEAP32[ptr+48>>2]=t.clientY-canvasRect.top}else{HEAP32[ptr+44>>2]=0;HEAP32[ptr+48>>2]=0}HEAP32[ptr+36>>2]=t.clientX-targetRect.left;HEAP32[ptr+40>>2]=t.clientY-targetRect.top;ptr+=52;if(++numTouches>=32){break}}HEAP32[touchEvent>>2]=numTouches;if(Module["dynCall_iiii"](callbackfunc,eventTypeId,touchEvent,userData))e.preventDefault()});var eventHandler={target:target,allowsDeferredCalls:eventTypeString=="touchstart"||eventTypeString=="touchend",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:touchEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),fillGamepadEventData:(function(eventStruct,e){HEAPF64[eventStruct>>3]=e.timestamp;for(var i=0;i<e.axes.length;++i){HEAPF64[eventStruct+i*8+16>>3]=e.axes[i]}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i].value}else{HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i]}}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i].pressed}else{HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i]==1}}HEAP32[eventStruct+1296>>2]=e.connected;HEAP32[eventStruct+1300>>2]=e.index;HEAP32[eventStruct+8>>2]=e.axes.length;HEAP32[eventStruct+12>>2]=e.buttons.length;stringToUTF8(e.id,eventStruct+1304,64);stringToUTF8(e.mapping,eventStruct+1368,64)}),registerGamepadEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.gamepadEvent)JSEvents.gamepadEvent=_malloc(1432);var gamepadEventHandlerFunc=(function(event){var e=event||window.event;var gamepadEvent=JSEvents.gamepadEvent;JSEvents.fillGamepadEventData(gamepadEvent,e.gamepad);if(Module["dynCall_iiii"](callbackfunc,eventTypeId,gamepadEvent,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:gamepadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerBeforeUnloadEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){var beforeUnloadEventHandlerFunc=(function(event){var e=event||window.event;var confirmationMessage=Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData);if(confirmationMessage){confirmationMessage=Pointer_stringify(confirmationMessage)}if(confirmationMessage){e.preventDefault();e.returnValue=confirmationMessage;return confirmationMessage}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:beforeUnloadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),battery:(function(){return navigator.battery||navigator.mozBattery||navigator.webkitBattery}),fillBatteryEventData:(function(eventStruct,e){HEAPF64[eventStruct>>3]=e.chargingTime;HEAPF64[eventStruct+8>>3]=e.dischargingTime;HEAPF64[eventStruct+16>>3]=e.level;HEAP32[eventStruct+24>>2]=e.charging}),registerBatteryEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.batteryEvent)JSEvents.batteryEvent=_malloc(32);var batteryEventHandlerFunc=(function(event){var e=event||window.event;var batteryEvent=JSEvents.batteryEvent;JSEvents.fillBatteryEventData(batteryEvent,JSEvents.battery());if(Module["dynCall_iiii"](callbackfunc,eventTypeId,batteryEvent,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:batteryEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerWebGlEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!target)target=Module["canvas"];var webGlEventHandlerFunc=(function(event){var e=event||window.event;if(Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData))e.preventDefault()});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:webGlEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)})};var __currentFullscreenStrategy={};function _emscripten_exit_fullscreen(){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;JSEvents.removeDeferredCalls(JSEvents.requestFullscreen);if(document.exitFullscreen){document.exitFullscreen()}else if(document.msExitFullscreen){document.msExitFullscreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.webkitExitFullscreen){document.webkitExitFullscreen()}else{return-1}if(__currentFullscreenStrategy.canvasResizedCallback){Module["dynCall_iiii"](__currentFullscreenStrategy.canvasResizedCallback,37,0,__currentFullscreenStrategy.canvasResizedCallbackUserData)}return 0}function _emscripten_exit_pointerlock(){JSEvents.removeDeferredCalls(JSEvents.requestPointerLock);if(document.exitPointerLock){document.exitPointerLock()}else if(document.msExitPointerLock){document.msExitPointerLock()}else if(document.mozExitPointerLock){document.mozExitPointerLock()}else if(document.webkitExitPointerLock){document.webkitExitPointerLock()}else{return-1}return 0}function _emscripten_get_device_pixel_ratio(){return window.devicePixelRatio||1}function _emscripten_get_element_css_size(target,width,height){if(target)target=JSEvents.findEventTarget(target);else target=Module["canvas"];if(!target)return-4;if(target.getBoundingClientRect){var rect=target.getBoundingClientRect();HEAPF64[width>>3]=rect.right-rect.left;HEAPF64[height>>3]=rect.bottom-rect.top}else{HEAPF64[width>>3]=target.clientWidth;HEAPF64[height>>3]=target.clientHeight}return 0}function __emscripten_sample_gamepad_data(){if(!JSEvents.numGamepadsConnected)return;if(Browser.mainLoop.currentFrameNumber!==JSEvents.lastGamepadStateFrame||!Browser.mainLoop.currentFrameNumber){JSEvents.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:null;JSEvents.lastGamepadStateFrame=Browser.mainLoop.currentFrameNumber}}function _emscripten_get_gamepad_status(index,gamepadState){__emscripten_sample_gamepad_data();if(!JSEvents.lastGamepadState)return-1;if(index<0||index>=JSEvents.lastGamepadState.length)return-5;if(!JSEvents.lastGamepadState[index])return-7;JSEvents.fillGamepadEventData(gamepadState,JSEvents.lastGamepadState[index]);return 0}function _emscripten_get_num_gamepads(){if(!JSEvents.numGamepadsConnected)return 0;__emscripten_sample_gamepad_data();if(!JSEvents.lastGamepadState)return-1;return JSEvents.lastGamepadState.length}function _emscripten_glAccum(){err("missing function: emscripten_glAccum");abort(-1)}function _emscripten_glActiveTexture(x0){GLctx["activeTexture"](x0)}function _emscripten_glAlphaFunc(){err("missing function: emscripten_glAlphaFunc");abort(-1)}function _emscripten_glAreTexturesResident(){err("missing function: emscripten_glAreTexturesResident");abort(-1)}function _emscripten_glArrayElement(){err("missing function: emscripten_glArrayElement");abort(-1)}function _emscripten_glAttachObjectARB(){err("missing function: emscripten_glAttachObjectARB");abort(-1)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBegin(){throw"Legacy GL function (glBegin) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glBeginConditionalRender(){err("missing function: emscripten_glBeginConditionalRender");abort(-1)}function _emscripten_glBeginQuery(){err("missing function: emscripten_glBeginQuery");abort(-1)}function _emscripten_glBeginTransformFeedback(){err("missing function: emscripten_glBeginTransformFeedback");abort(-1)}function _emscripten_glBindAttribLocation(program,index,name){name=Pointer_stringify(name);GLctx.bindAttribLocation(GL.programs[program],index,name)}function _emscripten_glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx.bindBuffer(target,bufferObj)}function _emscripten_glBindBufferBase(){err("missing function: emscripten_glBindBufferBase");abort(-1)}function _emscripten_glBindBufferRange(){err("missing function: emscripten_glBindBufferRange");abort(-1)}function _emscripten_glBindFragDataLocation(){err("missing function: emscripten_glBindFragDataLocation");abort(-1)}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _emscripten_glBindProgramARB(){err("missing function: emscripten_glBindProgramARB");abort(-1)}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _emscripten_glBindVertexArray(vao){GLctx["bindVertexArray"](GL.vaos[vao])}function _emscripten_glBitmap(){err("missing function: emscripten_glBitmap");abort(-1)}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx["blendColor"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx["blendEquation"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx["blendEquationSeparate"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx["blendFunc"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx["blendFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glBlitFramebuffer(){err("missing function: emscripten_glBlitFramebuffer");abort(-1)}function _emscripten_glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _emscripten_glBufferSubData(target,offset,size,data){GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCallList(){err("missing function: emscripten_glCallList");abort(-1)}function _emscripten_glCallLists(){err("missing function: emscripten_glCallLists");abort(-1)}function _emscripten_glCheckFramebufferStatus(x0){return GLctx["checkFramebufferStatus"](x0)}function _emscripten_glClampColor(){err("missing function: emscripten_glClampColor");abort(-1)}function _emscripten_glClear(x0){GLctx["clear"](x0)}function _emscripten_glClearAccum(){err("missing function: emscripten_glClearAccum");abort(-1)}function _emscripten_glClearBufferfi(){err("missing function: emscripten_glClearBufferfi");abort(-1)}function _emscripten_glClearBufferfv(){err("missing function: emscripten_glClearBufferfv");abort(-1)}function _emscripten_glClearBufferiv(){err("missing function: emscripten_glClearBufferiv");abort(-1)}function _emscripten_glClearBufferuiv(){err("missing function: emscripten_glClearBufferuiv");abort(-1)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _emscripten_glClearDepth(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearDepthf(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearIndex(){err("missing function: emscripten_glClearIndex");abort(-1)}function _emscripten_glClearStencil(x0){GLctx["clearStencil"](x0)}function _emscripten_glClientActiveTexture(){err("missing function: emscripten_glClientActiveTexture");abort(-1)}function _emscripten_glClipPlane(){err("missing function: emscripten_glClipPlane");abort(-1)}function _emscripten_glColor3b(){err("missing function: emscripten_glColor3b");abort(-1)}function _emscripten_glColor3bv(){err("missing function: emscripten_glColor3bv");abort(-1)}function _emscripten_glColor3d(){err("missing function: emscripten_glColor3d");abort(-1)}function _emscripten_glColor3dv(){err("missing function: emscripten_glColor3dv");abort(-1)}function _emscripten_glColor3f(){err("missing function: emscripten_glColor3f");abort(-1)}function _emscripten_glColor3fv(){err("missing function: emscripten_glColor3fv");abort(-1)}function _emscripten_glColor3i(){err("missing function: emscripten_glColor3i");abort(-1)}function _emscripten_glColor3iv(){err("missing function: emscripten_glColor3iv");abort(-1)}function _emscripten_glColor3s(){err("missing function: emscripten_glColor3s");abort(-1)}function _emscripten_glColor3sv(){err("missing function: emscripten_glColor3sv");abort(-1)}function _emscripten_glColor3ub(){err("missing function: emscripten_glColor3ub");abort(-1)}function _emscripten_glColor3ubv(){err("missing function: emscripten_glColor3ubv");abort(-1)}function _emscripten_glColor3ui(){err("missing function: emscripten_glColor3ui");abort(-1)}function _emscripten_glColor3uiv(){err("missing function: emscripten_glColor3uiv");abort(-1)}function _emscripten_glColor3us(){err("missing function: emscripten_glColor3us");abort(-1)}function _emscripten_glColor3usv(){err("missing function: emscripten_glColor3usv");abort(-1)}function _emscripten_glColor4b(){err("missing function: emscripten_glColor4b");abort(-1)}function _emscripten_glColor4bv(){err("missing function: emscripten_glColor4bv");abort(-1)}function _emscripten_glColor4d(){err("missing function: emscripten_glColor4d");abort(-1)}function _emscripten_glColor4dv(){err("missing function: emscripten_glColor4dv");abort(-1)}function _emscripten_glColor4f(){err("missing function: emscripten_glColor4f");abort(-1)}function _emscripten_glColor4fv(){err("missing function: emscripten_glColor4fv");abort(-1)}function _emscripten_glColor4i(){err("missing function: emscripten_glColor4i");abort(-1)}function _emscripten_glColor4iv(){err("missing function: emscripten_glColor4iv");abort(-1)}function _emscripten_glColor4s(){err("missing function: emscripten_glColor4s");abort(-1)}function _emscripten_glColor4sv(){err("missing function: emscripten_glColor4sv");abort(-1)}function _emscripten_glColor4ub(){err("missing function: emscripten_glColor4ub");abort(-1)}function _emscripten_glColor4ubv(){err("missing function: emscripten_glColor4ubv");abort(-1)}function _emscripten_glColor4ui(){err("missing function: emscripten_glColor4ui");abort(-1)}function _emscripten_glColor4uiv(){err("missing function: emscripten_glColor4uiv");abort(-1)}function _emscripten_glColor4us(){err("missing function: emscripten_glColor4us");abort(-1)}function _emscripten_glColor4usv(){err("missing function: emscripten_glColor4usv");abort(-1)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glColorMaski(){err("missing function: emscripten_glColorMaski");abort(-1)}function _emscripten_glColorMaterial(){err("missing function: emscripten_glColorMaterial");abort(-1)}function _emscripten_glColorPointer(){err("missing function: emscripten_glColorPointer");abort(-1)}function _emscripten_glColorSubTable(){err("missing function: emscripten_glColorSubTable");abort(-1)}function _emscripten_glColorTable(){err("missing function: emscripten_glColorTable");abort(-1)}function _emscripten_glColorTableParameterfv(){err("missing function: emscripten_glColorTableParameterfv");abort(-1)}function _emscripten_glColorTableParameteriv(){err("missing function: emscripten_glColorTableParameteriv");abort(-1)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage1D(){err("missing function: emscripten_glCompressedTexImage1D");abort(-1)}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexImage3D(){err("missing function: emscripten_glCompressedTexImage3D");abort(-1)}function _emscripten_glCompressedTexSubImage1D(){err("missing function: emscripten_glCompressedTexSubImage1D");abort(-1)}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage3D(){err("missing function: emscripten_glCompressedTexSubImage3D");abort(-1)}function _emscripten_glConvolutionFilter1D(){err("missing function: emscripten_glConvolutionFilter1D");abort(-1)}function _emscripten_glConvolutionFilter2D(){err("missing function: emscripten_glConvolutionFilter2D");abort(-1)}function _emscripten_glConvolutionParameterf(){err("missing function: emscripten_glConvolutionParameterf");abort(-1)}function _emscripten_glConvolutionParameterfv(){err("missing function: emscripten_glConvolutionParameterfv");abort(-1)}function _emscripten_glConvolutionParameteri(){err("missing function: emscripten_glConvolutionParameteri");abort(-1)}function _emscripten_glConvolutionParameteriv(){err("missing function: emscripten_glConvolutionParameteriv");abort(-1)}function _emscripten_glCopyColorSubTable(){err("missing function: emscripten_glCopyColorSubTable");abort(-1)}function _emscripten_glCopyColorTable(){err("missing function: emscripten_glCopyColorTable");abort(-1)}function _emscripten_glCopyConvolutionFilter1D(){err("missing function: emscripten_glCopyConvolutionFilter1D");abort(-1)}function _emscripten_glCopyConvolutionFilter2D(){err("missing function: emscripten_glCopyConvolutionFilter2D");abort(-1)}function _emscripten_glCopyPixels(){err("missing function: emscripten_glCopyPixels");abort(-1)}function _emscripten_glCopyTexImage1D(){err("missing function: emscripten_glCopyTexImage1D");abort(-1)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage1D(){err("missing function: emscripten_glCopyTexSubImage1D");abort(-1)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexSubImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage3D(){err("missing function: emscripten_glCopyTexSubImage3D");abort(-1)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _emscripten_glCreateProgramObjectARB(){err("missing function: emscripten_glCreateProgramObjectARB");abort(-1)}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCreateShaderObjectARB(){err("missing function: emscripten_glCreateShaderObjectARB");abort(-1)}function _emscripten_glCullFace(x0){GLctx["cullFace"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteLists(){err("missing function: emscripten_glDeleteLists");abort(-1)}function _emscripten_glDeleteObjectARB(){err("missing function: emscripten_glDeleteObjectARB");abort(-1)}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _emscripten_glDeleteProgramsARB(){err("missing function: emscripten_glDeleteProgramsARB");abort(-1)}function _emscripten_glDeleteQueries(){err("missing function: emscripten_glDeleteQueries");abort(-1)}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx["depthFunc"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRange(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDepthRangef(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDetachObjectARB(){err("missing function: emscripten_glDetachObjectARB");abort(-1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx["disable"](x0)}function _emscripten_glDisableClientState(){err("missing function: emscripten_glDisableClientState");abort(-1)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDisablei(){err("missing function: emscripten_glDisablei");abort(-1)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawBuffer(){err("missing function: emscripten_glDrawBuffer");abort(-1)}function _emscripten_glDrawBuffers(n,bufs){var bufArray=GL.tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawPixels(){err("missing function: emscripten_glDrawPixels");abort(-1)}function _emscripten_glDrawRangeElements(){err("missing function: emscripten_glDrawRangeElements");abort(-1)}function _emscripten_glEdgeFlag(){err("missing function: emscripten_glEdgeFlag");abort(-1)}function _emscripten_glEdgeFlagPointer(){err("missing function: emscripten_glEdgeFlagPointer");abort(-1)}function _emscripten_glEdgeFlagv(){err("missing function: emscripten_glEdgeFlagv");abort(-1)}function _emscripten_glEnable(x0){GLctx["enable"](x0)}function _emscripten_glEnableClientState(){err("missing function: emscripten_glEnableClientState");abort(-1)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glEnablei(){err("missing function: emscripten_glEnablei");abort(-1)}function _emscripten_glEnd(){err("missing function: emscripten_glEnd");abort(-1)}function _emscripten_glEndConditionalRender(){err("missing function: emscripten_glEndConditionalRender");abort(-1)}function _emscripten_glEndList(){err("missing function: emscripten_glEndList");abort(-1)}function _emscripten_glEndQuery(){err("missing function: emscripten_glEndQuery");abort(-1)}function _emscripten_glEndTransformFeedback(){err("missing function: emscripten_glEndTransformFeedback");abort(-1)}function _emscripten_glEvalCoord1d(){err("missing function: emscripten_glEvalCoord1d");abort(-1)}function _emscripten_glEvalCoord1dv(){err("missing function: emscripten_glEvalCoord1dv");abort(-1)}function _emscripten_glEvalCoord1f(){err("missing function: emscripten_glEvalCoord1f");abort(-1)}function _emscripten_glEvalCoord1fv(){err("missing function: emscripten_glEvalCoord1fv");abort(-1)}function _emscripten_glEvalCoord2d(){err("missing function: emscripten_glEvalCoord2d");abort(-1)}function _emscripten_glEvalCoord2dv(){err("missing function: emscripten_glEvalCoord2dv");abort(-1)}function _emscripten_glEvalCoord2f(){err("missing function: emscripten_glEvalCoord2f");abort(-1)}function _emscripten_glEvalCoord2fv(){err("missing function: emscripten_glEvalCoord2fv");abort(-1)}function _emscripten_glEvalMesh1(){err("missing function: emscripten_glEvalMesh1");abort(-1)}function _emscripten_glEvalMesh2(){err("missing function: emscripten_glEvalMesh2");abort(-1)}function _emscripten_glEvalPoint1(){err("missing function: emscripten_glEvalPoint1");abort(-1)}function _emscripten_glEvalPoint2(){err("missing function: emscripten_glEvalPoint2");abort(-1)}function _emscripten_glFeedbackBuffer(){err("missing function: emscripten_glFeedbackBuffer");abort(-1)}function _emscripten_glFinish(){GLctx["finish"]()}function _emscripten_glFlush(){GLctx["flush"]()}function _emscripten_glFogCoordPointer(){err("missing function: emscripten_glFogCoordPointer");abort(-1)}function _emscripten_glFogCoordd(){err("missing function: emscripten_glFogCoordd");abort(-1)}function _emscripten_glFogCoorddv(){err("missing function: emscripten_glFogCoorddv");abort(-1)}function _emscripten_glFogCoordf(){err("missing function: emscripten_glFogCoordf");abort(-1)}function _emscripten_glFogCoordfv(){err("missing function: emscripten_glFogCoordfv");abort(-1)}function _emscripten_glFogf(){err("missing function: emscripten_glFogf");abort(-1)}function _emscripten_glFogfv(){err("missing function: emscripten_glFogfv");abort(-1)}function _emscripten_glFogi(){err("missing function: emscripten_glFogi");abort(-1)}function _emscripten_glFogiv(){err("missing function: emscripten_glFogiv");abort(-1)}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture1D(){err("missing function: emscripten_glFramebufferTexture1D");abort(-1)}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFramebufferTexture3D(){err("missing function: emscripten_glFramebufferTexture3D");abort(-1)}function _emscripten_glFramebufferTextureLayer(){err("missing function: emscripten_glFramebufferTextureLayer");abort(-1)}function _emscripten_glFrontFace(x0){GLctx["frontFace"](x0)}function _emscripten_glFrustum(){err("missing function: emscripten_glFrustum");abort(-1)}function _emscripten_glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenLists(){err("missing function: emscripten_glGenLists");abort(-1)}function _emscripten_glGenProgramsARB(){err("missing function: emscripten_glGenProgramsARB");abort(-1)}function _emscripten_glGenQueries(){err("missing function: emscripten_glGenQueries");abort(-1)}function _emscripten_glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _emscripten_glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _emscripten_glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx["createVertexArray"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _emscripten_glGenerateMipmap(x0){GLctx["generateMipmap"](x0)}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveAttrib(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveUniform(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniformBlockName(){err("missing function: emscripten_glGetActiveUniformBlockName");abort(-1)}function _emscripten_glGetActiveUniformBlockiv(){err("missing function: emscripten_glGetActiveUniformBlockiv");abort(-1)}function _emscripten_glGetActiveUniformName(){err("missing function: emscripten_glGetActiveUniformName");abort(-1)}function _emscripten_glGetActiveUniformsiv(){err("missing function: emscripten_glGetActiveUniformsiv");abort(-1)}function _emscripten_glGetAttachedObjectsARB(){err("missing function: emscripten_glGetAttachedObjectsARB");abort(-1)}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],Pointer_stringify(name))}function _emscripten_glGetBooleani_v(){err("missing function: emscripten_glGetBooleani_v");abort(-1)}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!=="Integer"&&type!=="Integer64"){GL.recordError(1280)}return;case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats?formats.length:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(1280);return;case"object":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34068:{ret=0;break};default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case"Integer":HEAP32[p+i*4>>2]=result[i];break;case"Float":HEAPF32[p+i*4>>2]=result[i];break;case"Boolean":HEAP8[p+i>>0]=result[i]?1:0;break;default:throw"internal glGet error, bad type: "+type}}return}else{try{ret=result.name|0}catch(e){GL.recordError(1280);err("GL_INVALID_ENUM in glGet"+type+"v: Unknown object returned from WebGL getParameter("+name_+")! (error: "+e+")");return}}break;default:GL.recordError(1280);return}}switch(type){case"Integer64":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[p>>2]=tempI64[0],HEAP32[p+4>>2]=tempI64[1];break;case"Integer":HEAP32[p>>2]=ret;break;case"Float":HEAPF32[p>>2]=ret;break;case"Boolean":HEAP8[p>>0]=ret?1:0;break;default:throw"internal glGet error, bad type: "+type}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,"Boolean")}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetBufferPointerv(){err("missing function: emscripten_glGetBufferPointerv");abort(-1)}function _emscripten_glGetBufferSubData(){err("missing function: emscripten_glGetBufferSubData");abort(-1)}function _emscripten_glGetClipPlane(){err("missing function: emscripten_glGetClipPlane");abort(-1)}function _emscripten_glGetColorTable(){err("missing function: emscripten_glGetColorTable");abort(-1)}function _emscripten_glGetColorTableParameterfv(){err("missing function: emscripten_glGetColorTableParameterfv");abort(-1)}function _emscripten_glGetColorTableParameteriv(){err("missing function: emscripten_glGetColorTableParameteriv");abort(-1)}function _emscripten_glGetCompressedTexImage(){err("missing function: emscripten_glGetCompressedTexImage");abort(-1)}function _emscripten_glGetConvolutionFilter(){err("missing function: emscripten_glGetConvolutionFilter");abort(-1)}function _emscripten_glGetConvolutionParameterfv(){err("missing function: emscripten_glGetConvolutionParameterfv");abort(-1)}function _emscripten_glGetConvolutionParameteriv(){err("missing function: emscripten_glGetConvolutionParameteriv");abort(-1)}function _emscripten_glGetDoublev(){err("missing function: emscripten_glGetDoublev");abort(-1)}function _emscripten_glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,"Float")}function _emscripten_glGetFragDataLocation(){err("missing function: emscripten_glGetFragDataLocation");abort(-1)}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function _emscripten_glGetHandleARB(){err("missing function: emscripten_glGetHandleARB");abort(-1)}function _emscripten_glGetHistogram(){err("missing function: emscripten_glGetHistogram");abort(-1)}function _emscripten_glGetHistogramParameterfv(){err("missing function: emscripten_glGetHistogramParameterfv");abort(-1)}function _emscripten_glGetHistogramParameteriv(){err("missing function: emscripten_glGetHistogramParameteriv");abort(-1)}function _emscripten_glGetInfoLogARB(){err("missing function: emscripten_glGetInfoLogARB");abort(-1)}function _emscripten_glGetIntegeri_v(){err("missing function: emscripten_glGetIntegeri_v");abort(-1)}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,"Integer")}function _emscripten_glGetLightfv(){err("missing function: emscripten_glGetLightfv");abort(-1)}function _emscripten_glGetLightiv(){err("missing function: emscripten_glGetLightiv");abort(-1)}function _emscripten_glGetMapdv(){err("missing function: emscripten_glGetMapdv");abort(-1)}function _emscripten_glGetMapfv(){err("missing function: emscripten_glGetMapfv");abort(-1)}function _emscripten_glGetMapiv(){err("missing function: emscripten_glGetMapiv");abort(-1)}function _emscripten_glGetMaterialfv(){err("missing function: emscripten_glGetMaterialfv");abort(-1)}function _emscripten_glGetMaterialiv(){err("missing function: emscripten_glGetMaterialiv");abort(-1)}function _emscripten_glGetMinmax(){err("missing function: emscripten_glGetMinmax");abort(-1)}function _emscripten_glGetMinmaxParameterfv(){err("missing function: emscripten_glGetMinmaxParameterfv");abort(-1)}function _emscripten_glGetMinmaxParameteriv(){err("missing function: emscripten_glGetMinmaxParameteriv");abort(-1)}function _emscripten_glGetObjectParameterfvARB(){err("missing function: emscripten_glGetObjectParameterfvARB");abort(-1)}function _emscripten_glGetObjectParameterivARB(){err("missing function: emscripten_glGetObjectParameterivARB");abort(-1)}function _emscripten_glGetPixelMapfv(){err("missing function: emscripten_glGetPixelMapfv");abort(-1)}function _emscripten_glGetPixelMapuiv(){err("missing function: emscripten_glGetPixelMapuiv");abort(-1)}function _emscripten_glGetPixelMapusv(){err("missing function: emscripten_glGetPixelMapusv");abort(-1)}function _emscripten_glGetPointerv(){err("missing function: emscripten_glGetPointerv");abort(-1)}function _emscripten_glGetPolygonStipple(){err("missing function: emscripten_glGetPolygonStipple");abort(-1)}function _emscripten_glGetProgramEnvParameterdvARB(){err("missing function: emscripten_glGetProgramEnvParameterdvARB");abort(-1)}function _emscripten_glGetProgramEnvParameterfvARB(){err("missing function: emscripten_glGetProgramEnvParameterfvARB");abort(-1)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetProgramLocalParameterdvARB(){err("missing function: emscripten_glGetProgramLocalParameterdvARB");abort(-1)}function _emscripten_glGetProgramLocalParameterfvARB(){err("missing function: emscripten_glGetProgramLocalParameterfvARB");abort(-1)}function _emscripten_glGetProgramStringARB(){err("missing function: emscripten_glGetProgramStringARB");abort(-1)}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _emscripten_glGetQueryObjectiv(){err("missing function: emscripten_glGetQueryObjectiv");abort(-1)}function _emscripten_glGetQueryObjectuiv(){err("missing function: emscripten_glGetQueryObjectuiv");abort(-1)}function _emscripten_glGetQueryiv(){err("missing function: emscripten_glGetQueryiv");abort(-1)}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetSeparableFilter(){err("missing function: emscripten_glGetSeparableFilter");abort(-1)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;if(bufSize>0&&source){var numBytesWrittenExclNull=stringToUTF8(result,source,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _emscripten_glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push("GL_"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(" ")),"i8",ALLOC_NORMAL);break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=allocate(intArrayFromString(s),"i8",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=allocate(intArrayFromString(glVersion),"i8",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=allocate(intArrayFromString(glslVersion),"i8",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _emscripten_glGetStringi(){err("missing function: emscripten_glGetStringi");abort(-1)}function _emscripten_glGetTexEnvfv(){err("missing function: emscripten_glGetTexEnvfv");abort(-1)}function _emscripten_glGetTexEnviv(){err("missing function: emscripten_glGetTexEnviv");abort(-1)}function _emscripten_glGetTexGendv(){err("missing function: emscripten_glGetTexGendv");abort(-1)}function _emscripten_glGetTexGenfv(){err("missing function: emscripten_glGetTexGenfv");abort(-1)}function _emscripten_glGetTexGeniv(){err("missing function: emscripten_glGetTexGeniv");abort(-1)}function _emscripten_glGetTexImage(){err("missing function: emscripten_glGetTexImage");abort(-1)}function _emscripten_glGetTexLevelParameterfv(){err("missing function: emscripten_glGetTexLevelParameterfv");abort(-1)}function _emscripten_glGetTexLevelParameteriv(){err("missing function: emscripten_glGetTexLevelParameteriv");abort(-1)}function _emscripten_glGetTexParameterIiv(){err("missing function: emscripten_glGetTexParameterIiv");abort(-1)}function _emscripten_glGetTexParameterIuiv(){err("missing function: emscripten_glGetTexParameterIuiv");abort(-1)}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTransformFeedbackVarying(){err("missing function: emscripten_glGetTransformFeedbackVarying");abort(-1)}function _emscripten_glGetUniformBlockIndex(){err("missing function: emscripten_glGetUniformBlockIndex");abort(-1)}function _emscripten_glGetUniformIndices(){err("missing function: emscripten_glGetUniformIndices");abort(-1)}function _emscripten_glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf("]",name.length-1)!==-1){var ls=name.lastIndexOf("[");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getUniform(GL.programs[program],GL.uniforms[location]);if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Float")}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Integer")}function _emscripten_glGetUniformuiv(){err("missing function: emscripten_glGetUniformuiv");abort(-1)}function _emscripten_glGetVertexAttribIiv(){err("missing function: emscripten_glGetVertexAttribIiv");abort(-1)}function _emscripten_glGetVertexAttribIuiv(){err("missing function: emscripten_glGetVertexAttribIuiv");abort(-1)}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function _emscripten_glGetVertexAttribdv(){err("missing function: emscripten_glGetVertexAttribdv");abort(-1)}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data["name"]}else if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;case"FloatToInteger":HEAP32[params>>2]=Math.fround(data);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;case"FloatToInteger":HEAP32[params+i*4>>2]=Math.fround(data[i]);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}}}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"Float")}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"FloatToInteger")}function _emscripten_glHint(x0,x1){GLctx["hint"](x0,x1)}function _emscripten_glHistogram(){err("missing function: emscripten_glHistogram");abort(-1)}function _emscripten_glIndexMask(){err("missing function: emscripten_glIndexMask");abort(-1)}function _emscripten_glIndexPointer(){err("missing function: emscripten_glIndexPointer");abort(-1)}function _emscripten_glIndexd(){err("missing function: emscripten_glIndexd");abort(-1)}function _emscripten_glIndexdv(){err("missing function: emscripten_glIndexdv");abort(-1)}function _emscripten_glIndexf(){err("missing function: emscripten_glIndexf");abort(-1)}function _emscripten_glIndexfv(){err("missing function: emscripten_glIndexfv");abort(-1)}function _emscripten_glIndexi(){err("missing function: emscripten_glIndexi");abort(-1)}function _emscripten_glIndexiv(){err("missing function: emscripten_glIndexiv");abort(-1)}function _emscripten_glIndexs(){err("missing function: emscripten_glIndexs");abort(-1)}function _emscripten_glIndexsv(){err("missing function: emscripten_glIndexsv");abort(-1)}function _emscripten_glIndexub(){err("missing function: emscripten_glIndexub");abort(-1)}function _emscripten_glIndexubv(){err("missing function: emscripten_glIndexubv");abort(-1)}function _emscripten_glInitNames(){err("missing function: emscripten_glInitNames");abort(-1)}function _emscripten_glInterleavedArrays(){err("missing function: emscripten_glInterleavedArrays");abort(-1)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx["isEnabled"](x0)}function _emscripten_glIsEnabledi(){err("missing function: emscripten_glIsEnabledi");abort(-1)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsList(){err("missing function: emscripten_glIsList");abort(-1)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsQuery(){err("missing function: emscripten_glIsQuery");abort(-1)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsTexture(texture){var texture=GL.textures[texture];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx["isVertexArray"](vao)}function _emscripten_glLightModelf(){err("missing function: emscripten_glLightModelf");abort(-1)}function _emscripten_glLightModelfv(){err("missing function: emscripten_glLightModelfv");abort(-1)}function _emscripten_glLightModeli(){err("missing function: emscripten_glLightModeli");abort(-1)}function _emscripten_glLightModeliv(){err("missing function: emscripten_glLightModeliv");abort(-1)}function _emscripten_glLightf(){err("missing function: emscripten_glLightf");abort(-1)}function _emscripten_glLightfv(){err("missing function: emscripten_glLightfv");abort(-1)}function _emscripten_glLighti(){err("missing function: emscripten_glLighti");abort(-1)}function _emscripten_glLightiv(){err("missing function: emscripten_glLightiv");abort(-1)}function _emscripten_glLineStipple(){err("missing function: emscripten_glLineStipple");abort(-1)}function _emscripten_glLineWidth(x0){GLctx["lineWidth"](x0)}function _emscripten_glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _emscripten_glListBase(){err("missing function: emscripten_glListBase");abort(-1)}function _emscripten_glLoadIdentity(){throw"Legacy GL function (glLoadIdentity) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glLoadMatrixd(){err("missing function: emscripten_glLoadMatrixd");abort(-1)}function _emscripten_glLoadMatrixf(){err("missing function: emscripten_glLoadMatrixf");abort(-1)}function _emscripten_glLoadName(){err("missing function: emscripten_glLoadName");abort(-1)}function _emscripten_glLoadTransposeMatrixd(){err("missing function: emscripten_glLoadTransposeMatrixd");abort(-1)}function _emscripten_glLoadTransposeMatrixf(){err("missing function: emscripten_glLoadTransposeMatrixf");abort(-1)}function _emscripten_glLogicOp(){err("missing function: emscripten_glLogicOp");abort(-1)}function _emscripten_glMap1d(){err("missing function: emscripten_glMap1d");abort(-1)}function _emscripten_glMap1f(){err("missing function: emscripten_glMap1f");abort(-1)}function _emscripten_glMap2d(){err("missing function: emscripten_glMap2d");abort(-1)}function _emscripten_glMap2f(){err("missing function: emscripten_glMap2f");abort(-1)}function _emscripten_glMapBuffer(){err("missing function: emscripten_glMapBuffer");abort(-1)}function _emscripten_glMapGrid1d(){err("missing function: emscripten_glMapGrid1d");abort(-1)}function _emscripten_glMapGrid1f(){err("missing function: emscripten_glMapGrid1f");abort(-1)}function _emscripten_glMapGrid2d(){err("missing function: emscripten_glMapGrid2d");abort(-1)}function _emscripten_glMapGrid2f(){err("missing function: emscripten_glMapGrid2f");abort(-1)}function _emscripten_glMaterialf(){err("missing function: emscripten_glMaterialf");abort(-1)}function _emscripten_glMaterialfv(){err("missing function: emscripten_glMaterialfv");abort(-1)}function _emscripten_glMateriali(){err("missing function: emscripten_glMateriali");abort(-1)}function _emscripten_glMaterialiv(){err("missing function: emscripten_glMaterialiv");abort(-1)}function _emscripten_glMatrixMode(){throw"Legacy GL function (glMatrixMode) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glMinmax(){err("missing function: emscripten_glMinmax");abort(-1)}function _emscripten_glMultMatrixd(){err("missing function: emscripten_glMultMatrixd");abort(-1)}function _emscripten_glMultMatrixf(){err("missing function: emscripten_glMultMatrixf");abort(-1)}function _emscripten_glMultTransposeMatrixd(){err("missing function: emscripten_glMultTransposeMatrixd");abort(-1)}function _emscripten_glMultTransposeMatrixf(){err("missing function: emscripten_glMultTransposeMatrixf");abort(-1)}function _emscripten_glMultiDrawArrays(){err("missing function: emscripten_glMultiDrawArrays");abort(-1)}function _emscripten_glMultiDrawElements(){err("missing function: emscripten_glMultiDrawElements");abort(-1)}function _emscripten_glMultiTexCoord1d(){err("missing function: emscripten_glMultiTexCoord1d");abort(-1)}function _emscripten_glMultiTexCoord1dv(){err("missing function: emscripten_glMultiTexCoord1dv");abort(-1)}function _emscripten_glMultiTexCoord1f(){err("missing function: emscripten_glMultiTexCoord1f");abort(-1)}function _emscripten_glMultiTexCoord1fv(){err("missing function: emscripten_glMultiTexCoord1fv");abort(-1)}function _emscripten_glMultiTexCoord1i(){err("missing function: emscripten_glMultiTexCoord1i");abort(-1)}function _emscripten_glMultiTexCoord1iv(){err("missing function: emscripten_glMultiTexCoord1iv");abort(-1)}function _emscripten_glMultiTexCoord1s(){err("missing function: emscripten_glMultiTexCoord1s");abort(-1)}function _emscripten_glMultiTexCoord1sv(){err("missing function: emscripten_glMultiTexCoord1sv");abort(-1)}function _emscripten_glMultiTexCoord2d(){err("missing function: emscripten_glMultiTexCoord2d");abort(-1)}function _emscripten_glMultiTexCoord2dv(){err("missing function: emscripten_glMultiTexCoord2dv");abort(-1)}function _emscripten_glMultiTexCoord2f(){err("missing function: emscripten_glMultiTexCoord2f");abort(-1)}function _emscripten_glMultiTexCoord2fv(){err("missing function: emscripten_glMultiTexCoord2fv");abort(-1)}function _emscripten_glMultiTexCoord2i(){err("missing function: emscripten_glMultiTexCoord2i");abort(-1)}function _emscripten_glMultiTexCoord2iv(){err("missing function: emscripten_glMultiTexCoord2iv");abort(-1)}function _emscripten_glMultiTexCoord2s(){err("missing function: emscripten_glMultiTexCoord2s");abort(-1)}function _emscripten_glMultiTexCoord2sv(){err("missing function: emscripten_glMultiTexCoord2sv");abort(-1)}function _emscripten_glMultiTexCoord3d(){err("missing function: emscripten_glMultiTexCoord3d");abort(-1)}function _emscripten_glMultiTexCoord3dv(){err("missing function: emscripten_glMultiTexCoord3dv");abort(-1)}function _emscripten_glMultiTexCoord3f(){err("missing function: emscripten_glMultiTexCoord3f");abort(-1)}function _emscripten_glMultiTexCoord3fv(){err("missing function: emscripten_glMultiTexCoord3fv");abort(-1)}function _emscripten_glMultiTexCoord3i(){err("missing function: emscripten_glMultiTexCoord3i");abort(-1)}function _emscripten_glMultiTexCoord3iv(){err("missing function: emscripten_glMultiTexCoord3iv");abort(-1)}function _emscripten_glMultiTexCoord3s(){err("missing function: emscripten_glMultiTexCoord3s");abort(-1)}function _emscripten_glMultiTexCoord3sv(){err("missing function: emscripten_glMultiTexCoord3sv");abort(-1)}function _emscripten_glMultiTexCoord4d(){err("missing function: emscripten_glMultiTexCoord4d");abort(-1)}function _emscripten_glMultiTexCoord4dv(){err("missing function: emscripten_glMultiTexCoord4dv");abort(-1)}function _emscripten_glMultiTexCoord4f(){err("missing function: emscripten_glMultiTexCoord4f");abort(-1)}function _emscripten_glMultiTexCoord4fv(){err("missing function: emscripten_glMultiTexCoord4fv");abort(-1)}function _emscripten_glMultiTexCoord4i(){err("missing function: emscripten_glMultiTexCoord4i");abort(-1)}function _emscripten_glMultiTexCoord4iv(){err("missing function: emscripten_glMultiTexCoord4iv");abort(-1)}function _emscripten_glMultiTexCoord4s(){err("missing function: emscripten_glMultiTexCoord4s");abort(-1)}function _emscripten_glMultiTexCoord4sv(){err("missing function: emscripten_glMultiTexCoord4sv");abort(-1)}function _emscripten_glNewList(){err("missing function: emscripten_glNewList");abort(-1)}function _emscripten_glNormal3b(){err("missing function: emscripten_glNormal3b");abort(-1)}function _emscripten_glNormal3bv(){err("missing function: emscripten_glNormal3bv");abort(-1)}function _emscripten_glNormal3d(){err("missing function: emscripten_glNormal3d");abort(-1)}function _emscripten_glNormal3dv(){err("missing function: emscripten_glNormal3dv");abort(-1)}function _emscripten_glNormal3f(){err("missing function: emscripten_glNormal3f");abort(-1)}function _emscripten_glNormal3fv(){err("missing function: emscripten_glNormal3fv");abort(-1)}function _emscripten_glNormal3i(){err("missing function: emscripten_glNormal3i");abort(-1)}function _emscripten_glNormal3iv(){err("missing function: emscripten_glNormal3iv");abort(-1)}function _emscripten_glNormal3s(){err("missing function: emscripten_glNormal3s");abort(-1)}function _emscripten_glNormal3sv(){err("missing function: emscripten_glNormal3sv");abort(-1)}function _emscripten_glNormalPointer(){err("missing function: emscripten_glNormalPointer");abort(-1)}function _emscripten_glOrtho(){err("missing function: emscripten_glOrtho");abort(-1)}function _emscripten_glPassThrough(){err("missing function: emscripten_glPassThrough");abort(-1)}function _emscripten_glPixelMapfv(){err("missing function: emscripten_glPixelMapfv");abort(-1)}function _emscripten_glPixelMapuiv(){err("missing function: emscripten_glPixelMapuiv");abort(-1)}function _emscripten_glPixelMapusv(){err("missing function: emscripten_glPixelMapusv");abort(-1)}function _emscripten_glPixelStoref(){err("missing function: emscripten_glPixelStoref");abort(-1)}function _emscripten_glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPixelTransferf(){err("missing function: emscripten_glPixelTransferf");abort(-1)}function _emscripten_glPixelTransferi(){err("missing function: emscripten_glPixelTransferi");abort(-1)}function _emscripten_glPixelZoom(){err("missing function: emscripten_glPixelZoom");abort(-1)}function _emscripten_glPointParameterf(){err("missing function: emscripten_glPointParameterf");abort(-1)}function _emscripten_glPointParameterfv(){err("missing function: emscripten_glPointParameterfv");abort(-1)}function _emscripten_glPointParameteri(){err("missing function: emscripten_glPointParameteri");abort(-1)}function _emscripten_glPointParameteriv(){err("missing function: emscripten_glPointParameteriv");abort(-1)}function _emscripten_glPointSize(){err("missing function: emscripten_glPointSize");abort(-1)}function _emscripten_glPolygonMode(){err("missing function: emscripten_glPolygonMode");abort(-1)}function _emscripten_glPolygonOffset(x0,x1){GLctx["polygonOffset"](x0,x1)}function _emscripten_glPolygonStipple(){err("missing function: emscripten_glPolygonStipple");abort(-1)}function _emscripten_glPopAttrib(){err("missing function: emscripten_glPopAttrib");abort(-1)}function _emscripten_glPopClientAttrib(){err("missing function: emscripten_glPopClientAttrib");abort(-1)}function _emscripten_glPopMatrix(){err("missing function: emscripten_glPopMatrix");abort(-1)}function _emscripten_glPopName(){err("missing function: emscripten_glPopName");abort(-1)}function _emscripten_glPrimitiveRestartIndex(){err("missing function: emscripten_glPrimitiveRestartIndex");abort(-1)}function _emscripten_glPrioritizeTextures(){err("missing function: emscripten_glPrioritizeTextures");abort(-1)}function _emscripten_glProgramEnvParameter4dARB(){err("missing function: emscripten_glProgramEnvParameter4dARB");abort(-1)}function _emscripten_glProgramEnvParameter4dvARB(){err("missing function: emscripten_glProgramEnvParameter4dvARB");abort(-1)}function _emscripten_glProgramEnvParameter4fARB(){err("missing function: emscripten_glProgramEnvParameter4fARB");abort(-1)}function _emscripten_glProgramEnvParameter4fvARB(){err("missing function: emscripten_glProgramEnvParameter4fvARB");abort(-1)}function _emscripten_glProgramLocalParameter4dARB(){err("missing function: emscripten_glProgramLocalParameter4dARB");abort(-1)}function _emscripten_glProgramLocalParameter4dvARB(){err("missing function: emscripten_glProgramLocalParameter4dvARB");abort(-1)}function _emscripten_glProgramLocalParameter4fARB(){err("missing function: emscripten_glProgramLocalParameter4fARB");abort(-1)}function _emscripten_glProgramLocalParameter4fvARB(){err("missing function: emscripten_glProgramLocalParameter4fvARB");abort(-1)}function _emscripten_glProgramStringARB(){err("missing function: emscripten_glProgramStringARB");abort(-1)}function _emscripten_glPushAttrib(){err("missing function: emscripten_glPushAttrib");abort(-1)}function _emscripten_glPushClientAttrib(){err("missing function: emscripten_glPushClientAttrib");abort(-1)}function _emscripten_glPushMatrix(){err("missing function: emscripten_glPushMatrix");abort(-1)}function _emscripten_glPushName(){err("missing function: emscripten_glPushName");abort(-1)}function _emscripten_glRasterPos2d(){err("missing function: emscripten_glRasterPos2d");abort(-1)}function _emscripten_glRasterPos2dv(){err("missing function: emscripten_glRasterPos2dv");abort(-1)}function _emscripten_glRasterPos2f(){err("missing function: emscripten_glRasterPos2f");abort(-1)}function _emscripten_glRasterPos2fv(){err("missing function: emscripten_glRasterPos2fv");abort(-1)}function _emscripten_glRasterPos2i(){err("missing function: emscripten_glRasterPos2i");abort(-1)}function _emscripten_glRasterPos2iv(){err("missing function: emscripten_glRasterPos2iv");abort(-1)}function _emscripten_glRasterPos2s(){err("missing function: emscripten_glRasterPos2s");abort(-1)}function _emscripten_glRasterPos2sv(){err("missing function: emscripten_glRasterPos2sv");abort(-1)}function _emscripten_glRasterPos3d(){err("missing function: emscripten_glRasterPos3d");abort(-1)}function _emscripten_glRasterPos3dv(){err("missing function: emscripten_glRasterPos3dv");abort(-1)}function _emscripten_glRasterPos3f(){err("missing function: emscripten_glRasterPos3f");abort(-1)}function _emscripten_glRasterPos3fv(){err("missing function: emscripten_glRasterPos3fv");abort(-1)}function _emscripten_glRasterPos3i(){err("missing function: emscripten_glRasterPos3i");abort(-1)}function _emscripten_glRasterPos3iv(){err("missing function: emscripten_glRasterPos3iv");abort(-1)}function _emscripten_glRasterPos3s(){err("missing function: emscripten_glRasterPos3s");abort(-1)}function _emscripten_glRasterPos3sv(){err("missing function: emscripten_glRasterPos3sv");abort(-1)}function _emscripten_glRasterPos4d(){err("missing function: emscripten_glRasterPos4d");abort(-1)}function _emscripten_glRasterPos4dv(){err("missing function: emscripten_glRasterPos4dv");abort(-1)}function _emscripten_glRasterPos4f(){err("missing function: emscripten_glRasterPos4f");abort(-1)}function _emscripten_glRasterPos4fv(){err("missing function: emscripten_glRasterPos4fv");abort(-1)}function _emscripten_glRasterPos4i(){err("missing function: emscripten_glRasterPos4i");abort(-1)}function _emscripten_glRasterPos4iv(){err("missing function: emscripten_glRasterPos4iv");abort(-1)}function _emscripten_glRasterPos4s(){err("missing function: emscripten_glRasterPos4s");abort(-1)}function _emscripten_glRasterPos4sv(){err("missing function: emscripten_glRasterPos4sv");abort(-1)}function _emscripten_glReadBuffer(){err("missing function: emscripten_glReadBuffer");abort(-1)}function emscriptenWebGLComputeImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return Math.floor((x+y-1)/y)*y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height<=0?0:(height-1)*alignedRowSize+plainRowSize}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var sizePerPixel;var numChannels;switch(format){case 6406:case 6409:case 6402:numChannels=1;break;case 6410:numChannels=2;break;case 6407:case 35904:numChannels=3;break;case 6408:case 35906:numChannels=4;break;default:GL.recordError(1280);return null}switch(type){case 5121:sizePerPixel=numChannels*1;break;case 5123:case 36193:sizePerPixel=numChannels*2;break;case 5125:case 5126:sizePerPixel=numChannels*4;break;case 34042:sizePerPixel=4;break;case 33635:case 32819:case 32820:sizePerPixel=2;break;default:GL.recordError(1280);return null}var bytes=emscriptenWebGLComputeImageSize(width,height,sizePerPixel,GL.unpackAlignment);switch(type){case 5121:return HEAPU8.subarray(pixels,pixels+bytes);case 5126:return HEAPF32.subarray(pixels>>2,pixels+bytes>>2);case 5125:case 34042:return HEAPU32.subarray(pixels>>2,pixels+bytes>>2);case 5123:case 33635:case 32819:case 32820:case 36193:return HEAPU16.subarray(pixels>>1,pixels+bytes>>1);default:GL.recordError(1280);return null}}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glRectd(){err("missing function: emscripten_glRectd");abort(-1)}function _emscripten_glRectdv(){err("missing function: emscripten_glRectdv");abort(-1)}function _emscripten_glRectf(){err("missing function: emscripten_glRectf");abort(-1)}function _emscripten_glRectfv(){err("missing function: emscripten_glRectfv");abort(-1)}function _emscripten_glRecti(){err("missing function: emscripten_glRecti");abort(-1)}function _emscripten_glRectiv(){err("missing function: emscripten_glRectiv");abort(-1)}function _emscripten_glRects(){err("missing function: emscripten_glRects");abort(-1)}function _emscripten_glRectsv(){err("missing function: emscripten_glRectsv");abort(-1)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderMode(){err("missing function: emscripten_glRenderMode");abort(-1)}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx["renderbufferStorage"](x0,x1,x2,x3)}function _emscripten_glRenderbufferStorageMultisample(){err("missing function: emscripten_glRenderbufferStorageMultisample");abort(-1)}function _emscripten_glResetHistogram(){err("missing function: emscripten_glResetHistogram");abort(-1)}function _emscripten_glResetMinmax(){err("missing function: emscripten_glResetMinmax");abort(-1)}function _emscripten_glRotated(){err("missing function: emscripten_glRotated");abort(-1)}function _emscripten_glRotatef(){err("missing function: emscripten_glRotatef");abort(-1)}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glScaled(){err("missing function: emscripten_glScaled");abort(-1)}function _emscripten_glScalef(){err("missing function: emscripten_glScalef");abort(-1)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx["scissor"](x0,x1,x2,x3)}function _emscripten_glSecondaryColor3b(){err("missing function: emscripten_glSecondaryColor3b");abort(-1)}function _emscripten_glSecondaryColor3bv(){err("missing function: emscripten_glSecondaryColor3bv");abort(-1)}function _emscripten_glSecondaryColor3d(){err("missing function: emscripten_glSecondaryColor3d");abort(-1)}function _emscripten_glSecondaryColor3dv(){err("missing function: emscripten_glSecondaryColor3dv");abort(-1)}function _emscripten_glSecondaryColor3f(){err("missing function: emscripten_glSecondaryColor3f");abort(-1)}function _emscripten_glSecondaryColor3fv(){err("missing function: emscripten_glSecondaryColor3fv");abort(-1)}function _emscripten_glSecondaryColor3i(){err("missing function: emscripten_glSecondaryColor3i");abort(-1)}function _emscripten_glSecondaryColor3iv(){err("missing function: emscripten_glSecondaryColor3iv");abort(-1)}function _emscripten_glSecondaryColor3s(){err("missing function: emscripten_glSecondaryColor3s");abort(-1)}function _emscripten_glSecondaryColor3sv(){err("missing function: emscripten_glSecondaryColor3sv");abort(-1)}function _emscripten_glSecondaryColor3ub(){err("missing function: emscripten_glSecondaryColor3ub");abort(-1)}function _emscripten_glSecondaryColor3ubv(){err("missing function: emscripten_glSecondaryColor3ubv");abort(-1)}function _emscripten_glSecondaryColor3ui(){err("missing function: emscripten_glSecondaryColor3ui");abort(-1)}function _emscripten_glSecondaryColor3uiv(){err("missing function: emscripten_glSecondaryColor3uiv");abort(-1)}function _emscripten_glSecondaryColor3us(){err("missing function: emscripten_glSecondaryColor3us");abort(-1)}function _emscripten_glSecondaryColor3usv(){err("missing function: emscripten_glSecondaryColor3usv");abort(-1)}function _emscripten_glSecondaryColorPointer(){err("missing function: emscripten_glSecondaryColorPointer");abort(-1)}function _emscripten_glSelectBuffer(){err("missing function: emscripten_glSelectBuffer");abort(-1)}function _emscripten_glSeparableFilter2D(){err("missing function: emscripten_glSeparableFilter2D");abort(-1)}function _emscripten_glShadeModel(){err("missing function: emscripten_glShadeModel");abort(-1)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx["stencilFunc"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx["stencilFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx["stencilMask"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx["stencilMaskSeparate"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx["stencilOp"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx["stencilOpSeparate"](x0,x1,x2,x3)}function _emscripten_glTexBuffer(){err("missing function: emscripten_glTexBuffer");abort(-1)}function _emscripten_glTexCoord1d(){err("missing function: emscripten_glTexCoord1d");abort(-1)}function _emscripten_glTexCoord1dv(){err("missing function: emscripten_glTexCoord1dv");abort(-1)}function _emscripten_glTexCoord1f(){err("missing function: emscripten_glTexCoord1f");abort(-1)}function _emscripten_glTexCoord1fv(){err("missing function: emscripten_glTexCoord1fv");abort(-1)}function _emscripten_glTexCoord1i(){err("missing function: emscripten_glTexCoord1i");abort(-1)}function _emscripten_glTexCoord1iv(){err("missing function: emscripten_glTexCoord1iv");abort(-1)}function _emscripten_glTexCoord1s(){err("missing function: emscripten_glTexCoord1s");abort(-1)}function _emscripten_glTexCoord1sv(){err("missing function: emscripten_glTexCoord1sv");abort(-1)}function _emscripten_glTexCoord2d(){err("missing function: emscripten_glTexCoord2d");abort(-1)}function _emscripten_glTexCoord2dv(){err("missing function: emscripten_glTexCoord2dv");abort(-1)}function _emscripten_glTexCoord2f(){err("missing function: emscripten_glTexCoord2f");abort(-1)}function _emscripten_glTexCoord2fv(){err("missing function: emscripten_glTexCoord2fv");abort(-1)}function _emscripten_glTexCoord2i(){err("missing function: emscripten_glTexCoord2i");abort(-1)}function _emscripten_glTexCoord2iv(){err("missing function: emscripten_glTexCoord2iv");abort(-1)}function _emscripten_glTexCoord2s(){err("missing function: emscripten_glTexCoord2s");abort(-1)}function _emscripten_glTexCoord2sv(){err("missing function: emscripten_glTexCoord2sv");abort(-1)}function _emscripten_glTexCoord3d(){err("missing function: emscripten_glTexCoord3d");abort(-1)}function _emscripten_glTexCoord3dv(){err("missing function: emscripten_glTexCoord3dv");abort(-1)}function _emscripten_glTexCoord3f(){err("missing function: emscripten_glTexCoord3f");abort(-1)}function _emscripten_glTexCoord3fv(){err("missing function: emscripten_glTexCoord3fv");abort(-1)}function _emscripten_glTexCoord3i(){err("missing function: emscripten_glTexCoord3i");abort(-1)}function _emscripten_glTexCoord3iv(){err("missing function: emscripten_glTexCoord3iv");abort(-1)}function _emscripten_glTexCoord3s(){err("missing function: emscripten_glTexCoord3s");abort(-1)}function _emscripten_glTexCoord3sv(){err("missing function: emscripten_glTexCoord3sv");abort(-1)}function _emscripten_glTexCoord4d(){err("missing function: emscripten_glTexCoord4d");abort(-1)}function _emscripten_glTexCoord4dv(){err("missing function: emscripten_glTexCoord4dv");abort(-1)}function _emscripten_glTexCoord4f(){err("missing function: emscripten_glTexCoord4f");abort(-1)}function _emscripten_glTexCoord4fv(){err("missing function: emscripten_glTexCoord4fv");abort(-1)}function _emscripten_glTexCoord4i(){err("missing function: emscripten_glTexCoord4i");abort(-1)}function _emscripten_glTexCoord4iv(){err("missing function: emscripten_glTexCoord4iv");abort(-1)}function _emscripten_glTexCoord4s(){err("missing function: emscripten_glTexCoord4s");abort(-1)}function _emscripten_glTexCoord4sv(){err("missing function: emscripten_glTexCoord4sv");abort(-1)}function _emscripten_glTexCoordPointer(){err("missing function: emscripten_glTexCoordPointer");abort(-1)}function _emscripten_glTexEnvf(){err("missing function: emscripten_glTexEnvf");abort(-1)}function _emscripten_glTexEnvfv(){err("missing function: emscripten_glTexEnvfv");abort(-1)}function _emscripten_glTexEnvi(){err("missing function: emscripten_glTexEnvi");abort(-1)}function _emscripten_glTexEnviv(){err("missing function: emscripten_glTexEnviv");abort(-1)}function _emscripten_glTexGend(){err("missing function: emscripten_glTexGend");abort(-1)}function _emscripten_glTexGendv(){err("missing function: emscripten_glTexGendv");abort(-1)}function _emscripten_glTexGenf(){err("missing function: emscripten_glTexGenf");abort(-1)}function _emscripten_glTexGenfv(){err("missing function: emscripten_glTexGenfv");abort(-1)}function _emscripten_glTexGeni(){err("missing function: emscripten_glTexGeni");abort(-1)}function _emscripten_glTexGeniv(){err("missing function: emscripten_glTexGeniv");abort(-1)}function _emscripten_glTexImage1D(){err("missing function: emscripten_glTexImage1D");abort(-1)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixelData)}function _emscripten_glTexImage3D(){err("missing function: emscripten_glTexImage3D");abort(-1)}function _emscripten_glTexParameterIiv(){err("missing function: emscripten_glTexParameterIiv");abort(-1)}function _emscripten_glTexParameterIuiv(){err("missing function: emscripten_glTexParameterIuiv");abort(-1)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx["texParameterf"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexStorage2D(){err("missing function: emscripten_glTexStorage2D");abort(-1)}function _emscripten_glTexStorage3D(){err("missing function: emscripten_glTexStorage3D");abort(-1)}function _emscripten_glTexSubImage1D(){err("missing function: emscripten_glTexSubImage1D");abort(-1)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glTexSubImage3D(){err("missing function: emscripten_glTexSubImage3D");abort(-1)}function _emscripten_glTransformFeedbackVaryings(){err("missing function: emscripten_glTransformFeedbackVaryings");abort(-1)}function _emscripten_glTranslated(){err("missing function: emscripten_glTranslated");abort(-1)}function _emscripten_glTranslatef(){err("missing function: emscripten_glTranslatef");abort(-1)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _emscripten_glUniform1fv(location,count,value){var view;if(count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(GL.uniforms[location],view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _emscripten_glUniform1iv(location,count,value){GLctx.uniform1iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*4>>2))}function _emscripten_glUniform1ui(){err("missing function: emscripten_glUniform1ui");abort(-1)}function _emscripten_glUniform1uiv(){err("missing function: emscripten_glUniform1uiv");abort(-1)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2fv(location,count,value){var view;if(2*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(GL.uniforms[location],view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2iv(location,count,value){GLctx.uniform2iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*8>>2))}function _emscripten_glUniform2ui(){err("missing function: emscripten_glUniform2ui");abort(-1)}function _emscripten_glUniform2uiv(){err("missing function: emscripten_glUniform2uiv");abort(-1)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){var view;if(3*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(GL.uniforms[location],view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){GLctx.uniform3iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*12>>2))}function _emscripten_glUniform3ui(){err("missing function: emscripten_glUniform3ui");abort(-1)}function _emscripten_glUniform3uiv(){err("missing function: emscripten_glUniform3uiv");abort(-1)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(GL.uniforms[location],view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){GLctx.uniform4iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*16>>2))}function _emscripten_glUniform4ui(){err("missing function: emscripten_glUniform4ui");abort(-1)}function _emscripten_glUniform4uiv(){err("missing function: emscripten_glUniform4uiv");abort(-1)}function _emscripten_glUniformBlockBinding(){err("missing function: emscripten_glUniformBlockBinding");abort(-1)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix2x3fv(){err("missing function: emscripten_glUniformMatrix2x3fv");abort(-1)}function _emscripten_glUniformMatrix2x4fv(){err("missing function: emscripten_glUniformMatrix2x4fv");abort(-1)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){var view;if(9*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix3x2fv(){err("missing function: emscripten_glUniformMatrix3x2fv");abort(-1)}function _emscripten_glUniformMatrix3x4fv(){err("missing function: emscripten_glUniformMatrix3x4fv");abort(-1)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){var view;if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix4x2fv(){err("missing function: emscripten_glUniformMatrix4x2fv");abort(-1)}function _emscripten_glUniformMatrix4x3fv(){err("missing function: emscripten_glUniformMatrix4x3fv");abort(-1)}function _emscripten_glUnmapBuffer(){err("missing function: emscripten_glUnmapBuffer");abort(-1)}function _emscripten_glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _emscripten_glUseProgramObjectARB(){err("missing function: emscripten_glUseProgramObjectARB");abort(-1)}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertex2d(){err("missing function: emscripten_glVertex2d");abort(-1)}function _emscripten_glVertex2dv(){err("missing function: emscripten_glVertex2dv");abort(-1)}function _emscripten_glVertex2f(){err("missing function: emscripten_glVertex2f");abort(-1)}function _emscripten_glVertex2fv(){err("missing function: emscripten_glVertex2fv");abort(-1)}function _emscripten_glVertex2i(){err("missing function: emscripten_glVertex2i");abort(-1)}function _emscripten_glVertex2iv(){err("missing function: emscripten_glVertex2iv");abort(-1)}function _emscripten_glVertex2s(){err("missing function: emscripten_glVertex2s");abort(-1)}function _emscripten_glVertex2sv(){err("missing function: emscripten_glVertex2sv");abort(-1)}function _emscripten_glVertex3d(){err("missing function: emscripten_glVertex3d");abort(-1)}function _emscripten_glVertex3dv(){err("missing function: emscripten_glVertex3dv");abort(-1)}function _emscripten_glVertex3f(){err("missing function: emscripten_glVertex3f");abort(-1)}function _emscripten_glVertex3fv(){err("missing function: emscripten_glVertex3fv");abort(-1)}function _emscripten_glVertex3i(){err("missing function: emscripten_glVertex3i");abort(-1)}function _emscripten_glVertex3iv(){err("missing function: emscripten_glVertex3iv");abort(-1)}function _emscripten_glVertex3s(){err("missing function: emscripten_glVertex3s");abort(-1)}function _emscripten_glVertex3sv(){err("missing function: emscripten_glVertex3sv");abort(-1)}function _emscripten_glVertex4d(){err("missing function: emscripten_glVertex4d");abort(-1)}function _emscripten_glVertex4dv(){err("missing function: emscripten_glVertex4dv");abort(-1)}function _emscripten_glVertex4f(){err("missing function: emscripten_glVertex4f");abort(-1)}function _emscripten_glVertex4fv(){err("missing function: emscripten_glVertex4fv");abort(-1)}function _emscripten_glVertex4i(){err("missing function: emscripten_glVertex4i");abort(-1)}function _emscripten_glVertex4iv(){err("missing function: emscripten_glVertex4iv");abort(-1)}function _emscripten_glVertex4s(){err("missing function: emscripten_glVertex4s");abort(-1)}function _emscripten_glVertex4sv(){err("missing function: emscripten_glVertex4sv");abort(-1)}function _emscripten_glVertexAttrib1d(){err("missing function: emscripten_glVertexAttrib1d");abort(-1)}function _emscripten_glVertexAttrib1dv(){err("missing function: emscripten_glVertexAttrib1dv");abort(-1)}function _emscripten_glVertexAttrib1f(x0,x1){GLctx["vertexAttrib1f"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib1s(){err("missing function: emscripten_glVertexAttrib1s");abort(-1)}function _emscripten_glVertexAttrib1sv(){err("missing function: emscripten_glVertexAttrib1sv");abort(-1)}function _emscripten_glVertexAttrib2d(){err("missing function: emscripten_glVertexAttrib2d");abort(-1)}function _emscripten_glVertexAttrib2dv(){err("missing function: emscripten_glVertexAttrib2dv");abort(-1)}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx["vertexAttrib2f"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib2s(){err("missing function: emscripten_glVertexAttrib2s");abort(-1)}function _emscripten_glVertexAttrib2sv(){err("missing function: emscripten_glVertexAttrib2sv");abort(-1)}function _emscripten_glVertexAttrib3d(){err("missing function: emscripten_glVertexAttrib3d");abort(-1)}function _emscripten_glVertexAttrib3dv(){err("missing function: emscripten_glVertexAttrib3dv");abort(-1)}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx["vertexAttrib3f"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib3s(){err("missing function: emscripten_glVertexAttrib3s");abort(-1)}function _emscripten_glVertexAttrib3sv(){err("missing function: emscripten_glVertexAttrib3sv");abort(-1)}function _emscripten_glVertexAttrib4Nbv(){err("missing function: emscripten_glVertexAttrib4Nbv");abort(-1)}function _emscripten_glVertexAttrib4Niv(){err("missing function: emscripten_glVertexAttrib4Niv");abort(-1)}function _emscripten_glVertexAttrib4Nsv(){err("missing function: emscripten_glVertexAttrib4Nsv");abort(-1)}function _emscripten_glVertexAttrib4Nub(){err("missing function: emscripten_glVertexAttrib4Nub");abort(-1)}function _emscripten_glVertexAttrib4Nubv(){err("missing function: emscripten_glVertexAttrib4Nubv");abort(-1)}function _emscripten_glVertexAttrib4Nuiv(){err("missing function: emscripten_glVertexAttrib4Nuiv");abort(-1)}function _emscripten_glVertexAttrib4Nusv(){err("missing function: emscripten_glVertexAttrib4Nusv");abort(-1)}function _emscripten_glVertexAttrib4bv(){err("missing function: emscripten_glVertexAttrib4bv");abort(-1)}function _emscripten_glVertexAttrib4d(){err("missing function: emscripten_glVertexAttrib4d");abort(-1)}function _emscripten_glVertexAttrib4dv(){err("missing function: emscripten_glVertexAttrib4dv");abort(-1)}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx["vertexAttrib4f"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttrib4iv(){err("missing function: emscripten_glVertexAttrib4iv");abort(-1)}function _emscripten_glVertexAttrib4s(){err("missing function: emscripten_glVertexAttrib4s");abort(-1)}function _emscripten_glVertexAttrib4sv(){err("missing function: emscripten_glVertexAttrib4sv");abort(-1)}function _emscripten_glVertexAttrib4ubv(){err("missing function: emscripten_glVertexAttrib4ubv");abort(-1)}function _emscripten_glVertexAttrib4uiv(){err("missing function: emscripten_glVertexAttrib4uiv");abort(-1)}function _emscripten_glVertexAttrib4usv(){err("missing function: emscripten_glVertexAttrib4usv");abort(-1)}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribI1i(){err("missing function: emscripten_glVertexAttribI1i");abort(-1)}function _emscripten_glVertexAttribI1iv(){err("missing function: emscripten_glVertexAttribI1iv");abort(-1)}function _emscripten_glVertexAttribI1ui(){err("missing function: emscripten_glVertexAttribI1ui");abort(-1)}function _emscripten_glVertexAttribI1uiv(){err("missing function: emscripten_glVertexAttribI1uiv");abort(-1)}function _emscripten_glVertexAttribI2i(){err("missing function: emscripten_glVertexAttribI2i");abort(-1)}function _emscripten_glVertexAttribI2iv(){err("missing function: emscripten_glVertexAttribI2iv");abort(-1)}function _emscripten_glVertexAttribI2ui(){err("missing function: emscripten_glVertexAttribI2ui");abort(-1)}function _emscripten_glVertexAttribI2uiv(){err("missing function: emscripten_glVertexAttribI2uiv");abort(-1)}function _emscripten_glVertexAttribI3i(){err("missing function: emscripten_glVertexAttribI3i");abort(-1)}function _emscripten_glVertexAttribI3iv(){err("missing function: emscripten_glVertexAttribI3iv");abort(-1)}function _emscripten_glVertexAttribI3ui(){err("missing function: emscripten_glVertexAttribI3ui");abort(-1)}function _emscripten_glVertexAttribI3uiv(){err("missing function: emscripten_glVertexAttribI3uiv");abort(-1)}function _emscripten_glVertexAttribI4bv(){err("missing function: emscripten_glVertexAttribI4bv");abort(-1)}function _emscripten_glVertexAttribI4i(){err("missing function: emscripten_glVertexAttribI4i");abort(-1)}function _emscripten_glVertexAttribI4iv(){err("missing function: emscripten_glVertexAttribI4iv");abort(-1)}function _emscripten_glVertexAttribI4sv(){err("missing function: emscripten_glVertexAttribI4sv");abort(-1)}function _emscripten_glVertexAttribI4ubv(){err("missing function: emscripten_glVertexAttribI4ubv");abort(-1)}function _emscripten_glVertexAttribI4ui(){err("missing function: emscripten_glVertexAttribI4ui");abort(-1)}function _emscripten_glVertexAttribI4uiv(){err("missing function: emscripten_glVertexAttribI4uiv");abort(-1)}function _emscripten_glVertexAttribI4usv(){err("missing function: emscripten_glVertexAttribI4usv");abort(-1)}function _emscripten_glVertexAttribIPointer(){err("missing function: emscripten_glVertexAttribIPointer");abort(-1)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glVertexPointer(){throw"Legacy GL function (glVertexPointer) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}function _emscripten_glWindowPos2d(){err("missing function: emscripten_glWindowPos2d");abort(-1)}function _emscripten_glWindowPos2dv(){err("missing function: emscripten_glWindowPos2dv");abort(-1)}function _emscripten_glWindowPos2f(){err("missing function: emscripten_glWindowPos2f");abort(-1)}function _emscripten_glWindowPos2fv(){err("missing function: emscripten_glWindowPos2fv");abort(-1)}function _emscripten_glWindowPos2i(){err("missing function: emscripten_glWindowPos2i");abort(-1)}function _emscripten_glWindowPos2iv(){err("missing function: emscripten_glWindowPos2iv");abort(-1)}function _emscripten_glWindowPos2s(){err("missing function: emscripten_glWindowPos2s");abort(-1)}function _emscripten_glWindowPos2sv(){err("missing function: emscripten_glWindowPos2sv");abort(-1)}function _emscripten_glWindowPos3d(){err("missing function: emscripten_glWindowPos3d");abort(-1)}function _emscripten_glWindowPos3dv(){err("missing function: emscripten_glWindowPos3dv");abort(-1)}function _emscripten_glWindowPos3f(){err("missing function: emscripten_glWindowPos3f");abort(-1)}function _emscripten_glWindowPos3fv(){err("missing function: emscripten_glWindowPos3fv");abort(-1)}function _emscripten_glWindowPos3i(){err("missing function: emscripten_glWindowPos3i");abort(-1)}function _emscripten_glWindowPos3iv(){err("missing function: emscripten_glWindowPos3iv");abort(-1)}function _emscripten_glWindowPos3s(){err("missing function: emscripten_glWindowPos3s");abort(-1)}function _emscripten_glWindowPos3sv(){err("missing function: emscripten_glWindowPos3sv");abort(-1)}function __setLetterbox(element,topBottom,leftRight){if(JSEvents.isInternetExplorer()){element.style.marginLeft=element.style.marginRight=leftRight+"px";element.style.marginTop=element.style.marginBottom=topBottom+"px"}else{element.style.paddingLeft=element.style.paddingRight=leftRight+"px";element.style.paddingTop=element.style.paddingBottom=topBottom+"px"}}function __emscripten_do_request_fullscreen(target,strategy){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;if(!JSEvents.fullscreenEnabled())return-3;if(!target)target="#canvas";target=JSEvents.findEventTarget(target);if(!target)return-4;if(!target.requestFullscreen&&!target.msRequestFullscreen&&!target.mozRequestFullScreen&&!target.mozRequestFullscreen&&!target.webkitRequestFullscreen){return-3}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(strategy.deferUntilInEventHandler){JSEvents.deferCall(JSEvents.requestFullscreen,1,[target,strategy]);return 1}else{return-2}}return JSEvents.requestFullscreen(target,strategy)}function __registerRestoreOldStyle(canvas){var canvasSize=__get_canvas_element_size(canvas);var oldWidth=canvasSize[0];var oldHeight=canvasSize[1];var oldCssWidth=canvas.style.width;var oldCssHeight=canvas.style.height;var oldBackgroundColor=canvas.style.backgroundColor;var oldDocumentBackgroundColor=document.body.style.backgroundColor;var oldPaddingLeft=canvas.style.paddingLeft;var oldPaddingRight=canvas.style.paddingRight;var oldPaddingTop=canvas.style.paddingTop;var oldPaddingBottom=canvas.style.paddingBottom;var oldMarginLeft=canvas.style.marginLeft;var oldMarginRight=canvas.style.marginRight;var oldMarginTop=canvas.style.marginTop;var oldMarginBottom=canvas.style.marginBottom;var oldDocumentBodyMargin=document.body.style.margin;var oldDocumentOverflow=document.documentElement.style.overflow;var oldDocumentScroll=document.body.scroll;var oldImageRendering=canvas.style.imageRendering;function restoreOldStyle(){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;if(!fullscreenElement){document.removeEventListener("fullscreenchange",restoreOldStyle);document.removeEventListener("mozfullscreenchange",restoreOldStyle);document.removeEventListener("webkitfullscreenchange",restoreOldStyle);document.removeEventListener("MSFullscreenChange",restoreOldStyle);__set_canvas_element_size(canvas,oldWidth,oldHeight);canvas.style.width=oldCssWidth;canvas.style.height=oldCssHeight;canvas.style.backgroundColor=oldBackgroundColor;if(!oldDocumentBackgroundColor)document.body.style.backgroundColor="white";document.body.style.backgroundColor=oldDocumentBackgroundColor;canvas.style.paddingLeft=oldPaddingLeft;canvas.style.paddingRight=oldPaddingRight;canvas.style.paddingTop=oldPaddingTop;canvas.style.paddingBottom=oldPaddingBottom;canvas.style.marginLeft=oldMarginLeft;canvas.style.marginRight=oldMarginRight;canvas.style.marginTop=oldMarginTop;canvas.style.marginBottom=oldMarginBottom;document.body.style.margin=oldDocumentBodyMargin;document.documentElement.style.overflow=oldDocumentOverflow;document.body.scroll=oldDocumentScroll;canvas.style.imageRendering=oldImageRendering;if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,oldWidth,oldHeight);if(__currentFullscreenStrategy.canvasResizedCallback){Module["dynCall_iiii"](__currentFullscreenStrategy.canvasResizedCallback,37,0,__currentFullscreenStrategy.canvasResizedCallbackUserData)}}}document.addEventListener("fullscreenchange",restoreOldStyle);document.addEventListener("mozfullscreenchange",restoreOldStyle);document.addEventListener("webkitfullscreenchange",restoreOldStyle);document.addEventListener("MSFullscreenChange",restoreOldStyle);return restoreOldStyle}function _emscripten_request_fullscreen_strategy(target,deferUntilInEventHandler,fullscreenStrategy){var strategy={};strategy.scaleMode=HEAP32[fullscreenStrategy>>2];strategy.canvasResolutionScaleMode=HEAP32[fullscreenStrategy+4>>2];strategy.filteringMode=HEAP32[fullscreenStrategy+8>>2];strategy.deferUntilInEventHandler=deferUntilInEventHandler;strategy.canvasResizedCallback=HEAP32[fullscreenStrategy+12>>2];strategy.canvasResizedCallbackUserData=HEAP32[fullscreenStrategy+16>>2];__currentFullscreenStrategy=strategy;return __emscripten_do_request_fullscreen(target,strategy)}function _emscripten_request_pointerlock(target,deferUntilInEventHandler){if(!target)target="#canvas";target=JSEvents.findEventTarget(target);if(!target)return-4;if(!target.requestPointerLock&&!target.mozRequestPointerLock&&!target.webkitRequestPointerLock&&!target.msRequestPointerLock){return-1}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(deferUntilInEventHandler){JSEvents.deferCall(JSEvents.requestPointerLock,2,[target]);return 1}else{return-2}}return JSEvents.requestPointerLock(target)}function _emscripten_set_blur_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerFocusEventCallback(target,userData,useCapture,callbackfunc,12,"blur",targetThread);return 0}function _emscripten_set_canvas_size(width,height){Browser.setCanvasSize(width,height)}function _emscripten_set_element_css_size(target,width,height){if(target)target=JSEvents.findEventTarget(target);else target=Module["canvas"];if(!target)return-4;target.style.setProperty("width",width+"px");target.style.setProperty("height",height+"px");return 0}function _emscripten_set_focus_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerFocusEventCallback(target,userData,useCapture,callbackfunc,13,"focus",targetThread);return 0}function _emscripten_set_fullscreenchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;if(!target)target=document;else{target=JSEvents.findEventTarget(target);if(!target)return-4}JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"fullscreenchange",targetThread);JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"mozfullscreenchange",targetThread);JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"webkitfullscreenchange",targetThread);JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"msfullscreenchange",targetThread);return 0}function _emscripten_set_gamepadconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;JSEvents.registerGamepadEventCallback(window,userData,useCapture,callbackfunc,26,"gamepadconnected",targetThread);return 0}function _emscripten_set_gamepaddisconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;JSEvents.registerGamepadEventCallback(window,userData,useCapture,callbackfunc,27,"gamepaddisconnected",targetThread);return 0}function _emscripten_set_keydown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,2,"keydown",targetThread);return 0}function _emscripten_set_keypress_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,1,"keypress",targetThread);return 0}function _emscripten_set_keyup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,3,"keyup",targetThread);return 0}function _emscripten_set_mousedown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,5,"mousedown",targetThread);return 0}function _emscripten_set_mouseenter_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,33,"mouseenter",targetThread);return 0}function _emscripten_set_mouseleave_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,34,"mouseleave",targetThread);return 0}function _emscripten_set_mousemove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,8,"mousemove",targetThread);return 0}function _emscripten_set_mouseup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,6,"mouseup",targetThread);return 0}function _emscripten_set_pointerlockchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(!document||!document.body||!document.body.requestPointerLock&&!document.body.mozRequestPointerLock&&!document.body.webkitRequestPointerLock&&!document.body.msRequestPointerLock){return-1}if(!target)target=document;else{target=JSEvents.findEventTarget(target);if(!target)return-4}JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"pointerlockchange",targetThread);JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mozpointerlockchange",targetThread);JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"webkitpointerlockchange",targetThread);JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mspointerlockchange",targetThread);return 0}function _emscripten_set_resize_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerUiEventCallback(target,userData,useCapture,callbackfunc,10,"resize",targetThread);return 0}function _emscripten_set_touchcancel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,25,"touchcancel",targetThread);return 0}function _emscripten_set_touchend_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,23,"touchend",targetThread);return 0}function _emscripten_set_touchmove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,24,"touchmove",targetThread);return 0}function _emscripten_set_touchstart_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,22,"touchstart",targetThread);return 0}function _emscripten_set_visibilitychange_callback_on_thread(userData,useCapture,callbackfunc,targetThread){JSEvents.registerVisibilityChangeEventCallback(document,userData,useCapture,callbackfunc,21,"visibilitychange",targetThread);return 0}function _emscripten_set_wheel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){target=JSEvents.findEventTarget(target);if(typeof target.onwheel!=="undefined"){JSEvents.registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"wheel",targetThread);return 0}else if(typeof target.onmousewheel!=="undefined"){JSEvents.registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"mousewheel",targetThread);return 0}else{return-1}}var EmterpreterAsync={initted:false,state:0,saveStack:"",yieldCallbacks:[],postAsync:null,restartFunc:null,asyncFinalizers:[],ensureInit:(function(){if(this.initted)return;this.initted=true}),setState:(function(s){this.ensureInit();this.state=s;Module["setAsyncState"](s)}),handle:(function(doAsyncOp,yieldDuring){Module["noExitRuntime"]=true;if(EmterpreterAsync.state===0){var stack=new Int32Array(HEAP32.subarray(EMTSTACKTOP>>2,Module["emtStackSave"]()>>2));var resumedCallbacksForYield=false;function resumeCallbacksForYield(){if(resumedCallbacksForYield)return;resumedCallbacksForYield=true;EmterpreterAsync.yieldCallbacks.forEach((function(func){func()}));Browser.resumeAsyncCallbacks()}var callingDoAsyncOp=1;doAsyncOp(function resume(post){if(ABORT){return}if(callingDoAsyncOp){assert(callingDoAsyncOp===1);callingDoAsyncOp++;setTimeout((function(){resume(post)}),0);return}assert(EmterpreterAsync.state===1||EmterpreterAsync.state===3);EmterpreterAsync.setState(3);if(yieldDuring){resumeCallbacksForYield()}HEAP32.set(stack,EMTSTACKTOP>>2);EmterpreterAsync.setState(2);if(Browser.mainLoop.func){Browser.mainLoop.resume()}assert(!EmterpreterAsync.postAsync);EmterpreterAsync.postAsync=post||null;var asyncReturnValue;if(!EmterpreterAsync.restartFunc){Module["emterpret"](stack[0])}else{asyncReturnValue=EmterpreterAsync.restartFunc()}if(!yieldDuring&&EmterpreterAsync.state===0){Browser.resumeAsyncCallbacks()}if(EmterpreterAsync.state===0){EmterpreterAsync.restartFunc=null;var asyncFinalizers=EmterpreterAsync.asyncFinalizers;EmterpreterAsync.asyncFinalizers=[];asyncFinalizers.forEach((function(func){func(asyncReturnValue)}))}});callingDoAsyncOp=0;EmterpreterAsync.setState(1);if(Browser.mainLoop.func){Browser.mainLoop.pause()}if(yieldDuring){setTimeout((function(){resumeCallbacksForYield()}),0)}else{Browser.pauseAsyncCallbacks()}}else{assert(EmterpreterAsync.state===2);EmterpreterAsync.setState(0);if(EmterpreterAsync.postAsync){var ret=EmterpreterAsync.postAsync();EmterpreterAsync.postAsync=null;return ret}}})};function _emscripten_sleep(ms){EmterpreterAsync.handle((function(resume){setTimeout((function(){resume()}),ms)}))}function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _glClear(x0){GLctx["clear"](x0)}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _usleep(useconds){var msec=useconds/1e3;if((ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]){var start=self["performance"]["now"]();while(self["performance"]["now"]()-start<msec){}}else{var start=Date.now();while(Date.now()-start<msec){}}return 0}function _nanosleep(rqtp,rmtp){var seconds=HEAP32[rqtp>>2];var nanoseconds=HEAP32[rqtp+4>>2];if(rmtp!==0){HEAP32[rmtp>>2]=0;HEAP32[rmtp+4>>2]=0}return _usleep(seconds*1e6+nanoseconds/1e3)}function _sigaction(signum,act,oldact){return 0}var __sigalrm_handler=0;function _signal(sig,func){if(sig==14){__sigalrm_handler=func}else{}return 0}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else if(typeof self==="object"&&self["performance"]&&typeof self["performance"]["now"]==="function"){_emscripten_get_now=(function(){return self["performance"]["now"]()})}else if(typeof performance==="object"&&typeof performance["now"]==="function"){_emscripten_get_now=(function(){return performance["now"]()})}else{_emscripten_get_now=Date.now}Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){err("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.");Module["requestFullScreen"]=Module["requestFullscreen"];Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module["requestFullscreen"]=function Module_requestFullscreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};var GLctx;GL.init();JSEvents.staticInit();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["wasmTableSize"]=1786;Module["wasmMaxTableSize"]=1786;Module.asmGlobalArg={};Module.asmLibraryArg={"f":abort,"Vn":enlargeMemory,"Xl":getTotalMemory,"Vj":abortOnCannotGrowMemory,"Vh":___buildEnvironment,"Wf":___lock,"Q":___setErrNo,"Qb":___syscall140,"qa":___syscall145,"v":___syscall146,"n":___syscall221,"Kn":___syscall5,"X":___syscall54,"W":___syscall6,"u":___unlock,"t":_clock_gettime,"Mm":_dlclose,"Bm":_dlerror,"V":_dlsym,"gm":_eglBindAPI,"Wl":_eglChooseConfig,"Ll":_eglCreateContext,"Al":_eglCreateWindowSurface,"pl":_eglDestroyContext,"el":_eglDestroySurface,"Vk":_eglGetConfigAttrib,"U":_eglGetDisplay,"Ak":_eglGetError,"pk":_eglGetProcAddress,"ek":_eglInitialize,"Uj":_eglMakeCurrent,"Jj":_eglQueryString,"yj":_eglSwapBuffers,"nj":_eglSwapInterval,"cj":_eglTerminate,"Ti":_eglWaitGL,"Ii":_eglWaitNative,"h":_emscripten_asm_const_i,"m":_emscripten_asm_const_ii,"T":_emscripten_asm_const_iii,"Uh":_emscripten_asm_const_iiii,"S":_emscripten_asm_const_iiiii,"zh":_emscripten_asm_const_iiiiii,"oh":_emscripten_exit_fullscreen,"dh":_emscripten_exit_pointerlock,"s":_emscripten_get_device_pixel_ratio,"i":_emscripten_get_element_css_size,"R":_emscripten_get_gamepad_status,"qg":_emscripten_get_num_gamepads,"fg":_emscripten_glAccum,"Vf":_emscripten_glActiveTexture,"Kf":_emscripten_glAlphaFunc,"zf":_emscripten_glAreTexturesResident,"of":_emscripten_glArrayElement,"cf":_emscripten_glAttachObjectARB,"Te":_emscripten_glAttachShader,"Ie":_emscripten_glBegin,"xe":_emscripten_glBeginConditionalRender,"me":_emscripten_glBeginQuery,"be":_emscripten_glBeginTransformFeedback,"Sd":_emscripten_glBindAttribLocation,"Hd":_emscripten_glBindBuffer,"wd":_emscripten_glBindBufferBase,"ld":_emscripten_glBindBufferRange,"ad":_emscripten_glBindFragDataLocation,"Rc":_emscripten_glBindFramebuffer,"Gc":_emscripten_glBindProgramARB,"vc":_emscripten_glBindRenderbuffer,"kc":_emscripten_glBindTexture,"$b":_emscripten_glBindVertexArray,"Pb":_emscripten_glBitmap,"Eb":_emscripten_glBlendColor,"tb":_emscripten_glBlendEquation,"ib":_emscripten_glBlendEquationSeparate,"Za":_emscripten_glBlendFunc,"Oa":_emscripten_glBlendFuncSeparate,"Da":_emscripten_glBlitFramebuffer,"za":_emscripten_glBufferData,"ya":_emscripten_glBufferSubData,"va":_emscripten_glCallList,"pa":_emscripten_glCallLists,"oa":_emscripten_glCheckFramebufferStatus,"na":_emscripten_glClampColor,"ma":_emscripten_glClear,"la":_emscripten_glClearAccum,"ka":_emscripten_glClearBufferfi,"ja":_emscripten_glClearBufferfv,"ia":_emscripten_glClearBufferiv,"ha":_emscripten_glClearBufferuiv,"ga":_emscripten_glClearColor,"fa":_emscripten_glClearDepth,"ea":_emscripten_glClearDepthf,"da":_emscripten_glClearIndex,"ca":_emscripten_glClearStencil,"ba":_emscripten_glClientActiveTexture,"aa":_emscripten_glClipPlane,"$":_emscripten_glColor3b,"_":_emscripten_glColor3bv,"Z":_emscripten_glColor3d,"Y":_emscripten_glColor3dv,"Un":_emscripten_glColor3f,"Tn":_emscripten_glColor3fv,"Sn":_emscripten_glColor3i,"Rn":_emscripten_glColor3iv,"Qn":_emscripten_glColor3s,"Pn":_emscripten_glColor3sv,"On":_emscripten_glColor3ub,"Nn":_emscripten_glColor3ubv,"Mn":_emscripten_glColor3ui,"Ln":_emscripten_glColor3uiv,"Jn":_emscripten_glColor3us,"In":_emscripten_glColor3usv,"Hn":_emscripten_glColor4b,"Gn":_emscripten_glColor4bv,"Fn":_emscripten_glColor4d,"En":_emscripten_glColor4dv,"Dn":_emscripten_glColor4f,"Cn":_emscripten_glColor4fv,"Bn":_emscripten_glColor4i,"An":_emscripten_glColor4iv,"zn":_emscripten_glColor4s,"yn":_emscripten_glColor4sv,"xn":_emscripten_glColor4ub,"wn":_emscripten_glColor4ubv,"vn":_emscripten_glColor4ui,"un":_emscripten_glColor4uiv,"tn":_emscripten_glColor4us,"sn":_emscripten_glColor4usv,"rn":_emscripten_glColorMask,"qn":_emscripten_glColorMaski,"pn":_emscripten_glColorMaterial,"on":_emscripten_glColorPointer,"nn":_emscripten_glColorSubTable,"mn":_emscripten_glColorTable,"ln":_emscripten_glColorTableParameterfv,"kn":_emscripten_glColorTableParameteriv,"jn":_emscripten_glCompileShader,"hn":_emscripten_glCompressedTexImage1D,"gn":_emscripten_glCompressedTexImage2D,"fn":_emscripten_glCompressedTexImage3D,"en":_emscripten_glCompressedTexSubImage1D,"dn":_emscripten_glCompressedTexSubImage2D,"cn":_emscripten_glCompressedTexSubImage3D,"bn":_emscripten_glConvolutionFilter1D,"an":_emscripten_glConvolutionFilter2D,"$m":_emscripten_glConvolutionParameterf,"_m":_emscripten_glConvolutionParameterfv,"Zm":_emscripten_glConvolutionParameteri,"Ym":_emscripten_glConvolutionParameteriv,"Xm":_emscripten_glCopyColorSubTable,"Wm":_emscripten_glCopyColorTable,"Vm":_emscripten_glCopyConvolutionFilter1D,"Um":_emscripten_glCopyConvolutionFilter2D,"Tm":_emscripten_glCopyPixels,"Sm":_emscripten_glCopyTexImage1D,"Rm":_emscripten_glCopyTexImage2D,"Qm":_emscripten_glCopyTexSubImage1D,"Pm":_emscripten_glCopyTexSubImage2D,"Om":_emscripten_glCopyTexSubImage3D,"Nm":_emscripten_glCreateProgram,"Lm":_emscripten_glCreateProgramObjectARB,"Km":_emscripten_glCreateShader,"Jm":_emscripten_glCreateShaderObjectARB,"Im":_emscripten_glCullFace,"Hm":_emscripten_glDeleteBuffers,"Gm":_emscripten_glDeleteFramebuffers,"Fm":_emscripten_glDeleteLists,"Em":_emscripten_glDeleteObjectARB,"Dm":_emscripten_glDeleteProgram,"Cm":_emscripten_glDeleteProgramsARB,"Am":_emscripten_glDeleteQueries,"zm":_emscripten_glDeleteRenderbuffers,"ym":_emscripten_glDeleteShader,"xm":_emscripten_glDeleteTextures,"wm":_emscripten_glDeleteVertexArrays,"vm":_emscripten_glDepthFunc,"um":_emscripten_glDepthMask,"tm":_emscripten_glDepthRange,"sm":_emscripten_glDepthRangef,"rm":_emscripten_glDetachObjectARB,"qm":_emscripten_glDetachShader,"pm":_emscripten_glDisable,"om":_emscripten_glDisableClientState,"nm":_emscripten_glDisableVertexAttribArray,"mm":_emscripten_glDisablei,"lm":_emscripten_glDrawArrays,"km":_emscripten_glDrawArraysInstanced,"jm":_emscripten_glDrawBuffer,"im":_emscripten_glDrawBuffers,"hm":_emscripten_glDrawElements,"fm":_emscripten_glDrawElementsInstanced,"em":_emscripten_glDrawPixels,"dm":_emscripten_glDrawRangeElements,"cm":_emscripten_glEdgeFlag,"bm":_emscripten_glEdgeFlagPointer,"am":_emscripten_glEdgeFlagv,"$l":_emscripten_glEnable,"_l":_emscripten_glEnableClientState,"Zl":_emscripten_glEnableVertexAttribArray,"Yl":_emscripten_glEnablei,"Vl":_emscripten_glEnd,"Ul":_emscripten_glEndConditionalRender,"Tl":_emscripten_glEndList,"Sl":_emscripten_glEndQuery,"Rl":_emscripten_glEndTransformFeedback,"Ql":_emscripten_glEvalCoord1d,"Pl":_emscripten_glEvalCoord1dv,"Ol":_emscripten_glEvalCoord1f,"Nl":_emscripten_glEvalCoord1fv,"Ml":_emscripten_glEvalCoord2d,"Kl":_emscripten_glEvalCoord2dv,"Jl":_emscripten_glEvalCoord2f,"Il":_emscripten_glEvalCoord2fv,"Hl":_emscripten_glEvalMesh1,"Gl":_emscripten_glEvalMesh2,"Fl":_emscripten_glEvalPoint1,"El":_emscripten_glEvalPoint2,"Dl":_emscripten_glFeedbackBuffer,"Cl":_emscripten_glFinish,"Bl":_emscripten_glFlush,"zl":_emscripten_glFogCoordPointer,"yl":_emscripten_glFogCoordd,"xl":_emscripten_glFogCoorddv,"wl":_emscripten_glFogCoordf,"vl":_emscripten_glFogCoordfv,"ul":_emscripten_glFogf,"tl":_emscripten_glFogfv,"sl":_emscripten_glFogi,"rl":_emscripten_glFogiv,"ql":_emscripten_glFramebufferRenderbuffer,"ol":_emscripten_glFramebufferTexture1D,"nl":_emscripten_glFramebufferTexture2D,"ml":_emscripten_glFramebufferTexture3D,"ll":_emscripten_glFramebufferTextureLayer,"kl":_emscripten_glFrontFace,"jl":_emscripten_glFrustum,"il":_emscripten_glGenBuffers,"hl":_emscripten_glGenFramebuffers,"gl":_emscripten_glGenLists,"fl":_emscripten_glGenProgramsARB,"dl":_emscripten_glGenQueries,"cl":_emscripten_glGenRenderbuffers,"bl":_emscripten_glGenTextures,"al":_emscripten_glGenVertexArrays,"$k":_emscripten_glGenerateMipmap,"_k":_emscripten_glGetActiveAttrib,"Zk":_emscripten_glGetActiveUniform,"Yk":_emscripten_glGetActiveUniformBlockName,"Xk":_emscripten_glGetActiveUniformBlockiv,"Wk":_emscripten_glGetActiveUniformName,"Uk":_emscripten_glGetActiveUniformsiv,"Tk":_emscripten_glGetAttachedObjectsARB,"Sk":_emscripten_glGetAttachedShaders,"Rk":_emscripten_glGetAttribLocation,"Qk":_emscripten_glGetBooleani_v,"Pk":_emscripten_glGetBooleanv,"Ok":_emscripten_glGetBufferParameteriv,"Nk":_emscripten_glGetBufferPointerv,"Mk":_emscripten_glGetBufferSubData,"Lk":_emscripten_glGetClipPlane,"Kk":_emscripten_glGetColorTable,"Jk":_emscripten_glGetColorTableParameterfv,"Ik":_emscripten_glGetColorTableParameteriv,"Hk":_emscripten_glGetCompressedTexImage,"Gk":_emscripten_glGetConvolutionFilter,"Fk":_emscripten_glGetConvolutionParameterfv,"Ek":_emscripten_glGetConvolutionParameteriv,"Dk":_emscripten_glGetDoublev,"Ck":_emscripten_glGetError,"Bk":_emscripten_glGetFloatv,"zk":_emscripten_glGetFragDataLocation,"yk":_emscripten_glGetFramebufferAttachmentParameteriv,"xk":_emscripten_glGetHandleARB,"wk":_emscripten_glGetHistogram,"vk":_emscripten_glGetHistogramParameterfv,"uk":_emscripten_glGetHistogramParameteriv,"tk":_emscripten_glGetInfoLogARB,"sk":_emscripten_glGetIntegeri_v,"rk":_emscripten_glGetIntegerv,"qk":_emscripten_glGetLightfv,"ok":_emscripten_glGetLightiv,"nk":_emscripten_glGetMapdv,"mk":_emscripten_glGetMapfv,"lk":_emscripten_glGetMapiv,"kk":_emscripten_glGetMaterialfv,"jk":_emscripten_glGetMaterialiv,"ik":_emscripten_glGetMinmax,"hk":_emscripten_glGetMinmaxParameterfv,"gk":_emscripten_glGetMinmaxParameteriv,"fk":_emscripten_glGetObjectParameterfvARB,"dk":_emscripten_glGetObjectParameterivARB,"ck":_emscripten_glGetPixelMapfv,"bk":_emscripten_glGetPixelMapuiv,"ak":_emscripten_glGetPixelMapusv,"$j":_emscripten_glGetPointerv,"_j":_emscripten_glGetPolygonStipple,"Zj":_emscripten_glGetProgramEnvParameterdvARB,"Yj":_emscripten_glGetProgramEnvParameterfvARB,"Xj":_emscripten_glGetProgramInfoLog,"Wj":_emscripten_glGetProgramLocalParameterdvARB,"Tj":_emscripten_glGetProgramLocalParameterfvARB,"Sj":_emscripten_glGetProgramStringARB,"Rj":_emscripten_glGetProgramiv,"Qj":_emscripten_glGetQueryObjectiv,"Pj":_emscripten_glGetQueryObjectuiv,"Oj":_emscripten_glGetQueryiv,"Nj":_emscripten_glGetRenderbufferParameteriv,"Mj":_emscripten_glGetSeparableFilter,"Lj":_emscripten_glGetShaderInfoLog,"Kj":_emscripten_glGetShaderPrecisionFormat,"Ij":_emscripten_glGetShaderSource,"Hj":_emscripten_glGetShaderiv,"Gj":_emscripten_glGetString,"Fj":_emscripten_glGetStringi,"Ej":_emscripten_glGetTexEnvfv,"Dj":_emscripten_glGetTexEnviv,"Cj":_emscripten_glGetTexGendv,"Bj":_emscripten_glGetTexGenfv,"Aj":_emscripten_glGetTexGeniv,"zj":_emscripten_glGetTexImage,"xj":_emscripten_glGetTexLevelParameterfv,"wj":_emscripten_glGetTexLevelParameteriv,"vj":_emscripten_glGetTexParameterIiv,"uj":_emscripten_glGetTexParameterIuiv,"tj":_emscripten_glGetTexParameterfv,"sj":_emscripten_glGetTexParameteriv,"rj":_emscripten_glGetTransformFeedbackVarying,"qj":_emscripten_glGetUniformBlockIndex,"pj":_emscripten_glGetUniformIndices,"oj":_emscripten_glGetUniformLocation,"mj":_emscripten_glGetUniformfv,"lj":_emscripten_glGetUniformiv,"kj":_emscripten_glGetUniformuiv,"jj":_emscripten_glGetVertexAttribIiv,"ij":_emscripten_glGetVertexAttribIuiv,"hj":_emscripten_glGetVertexAttribPointerv,"gj":_emscripten_glGetVertexAttribdv,"fj":_emscripten_glGetVertexAttribfv,"ej":_emscripten_glGetVertexAttribiv,"dj":_emscripten_glHint,"bj":_emscripten_glHistogram,"aj":_emscripten_glIndexMask,"$i":_emscripten_glIndexPointer,"_i":_emscripten_glIndexd,"Zi":_emscripten_glIndexdv,"Yi":_emscripten_glIndexf,"Xi":_emscripten_glIndexfv,"Wi":_emscripten_glIndexi,"Vi":_emscripten_glIndexiv,"Ui":_emscripten_glIndexs,"Si":_emscripten_glIndexsv,"Ri":_emscripten_glIndexub,"Qi":_emscripten_glIndexubv,"Pi":_emscripten_glInitNames,"Oi":_emscripten_glInterleavedArrays,"Ni":_emscripten_glIsBuffer,"Mi":_emscripten_glIsEnabled,"Li":_emscripten_glIsEnabledi,"Ki":_emscripten_glIsFramebuffer,"Ji":_emscripten_glIsList,"Hi":_emscripten_glIsProgram,"Gi":_emscripten_glIsQuery,"Fi":_emscripten_glIsRenderbuffer,"Ei":_emscripten_glIsShader,"Di":_emscripten_glIsTexture,"Ci":_emscripten_glIsVertexArray,"Bi":_emscripten_glLightModelf,"Ai":_emscripten_glLightModelfv,"zi":_emscripten_glLightModeli,"yi":_emscripten_glLightModeliv,"xi":_emscripten_glLightf,"wi":_emscripten_glLightfv,"vi":_emscripten_glLighti,"ui":_emscripten_glLightiv,"ti":_emscripten_glLineStipple,"si":_emscripten_glLineWidth,"ri":_emscripten_glLinkProgram,"qi":_emscripten_glListBase,"pi":_emscripten_glLoadIdentity,"oi":_emscripten_glLoadMatrixd,"ni":_emscripten_glLoadMatrixf,"mi":_emscripten_glLoadName,"li":_emscripten_glLoadTransposeMatrixd,"ki":_emscripten_glLoadTransposeMatrixf,"ji":_emscripten_glLogicOp,"ii":_emscripten_glMap1d,"hi":_emscripten_glMap1f,"gi":_emscripten_glMap2d,"fi":_emscripten_glMap2f,"ei":_emscripten_glMapBuffer,"di":_emscripten_glMapGrid1d,"ci":_emscripten_glMapGrid1f,"bi":_emscripten_glMapGrid2d,"ai":_emscripten_glMapGrid2f,"$h":_emscripten_glMaterialf,"_h":_emscripten_glMaterialfv,"Zh":_emscripten_glMateriali,"Yh":_emscripten_glMaterialiv,"Xh":_emscripten_glMatrixMode,"Wh":_emscripten_glMinmax,"Th":_emscripten_glMultMatrixd,"Sh":_emscripten_glMultMatrixf,"Rh":_emscripten_glMultTransposeMatrixd,"Qh":_emscripten_glMultTransposeMatrixf,"Ph":_emscripten_glMultiDrawArrays,"Oh":_emscripten_glMultiDrawElements,"Nh":_emscripten_glMultiTexCoord1d,"Mh":_emscripten_glMultiTexCoord1dv,"Lh":_emscripten_glMultiTexCoord1f,"Kh":_emscripten_glMultiTexCoord1fv,"Jh":_emscripten_glMultiTexCoord1i,"Ih":_emscripten_glMultiTexCoord1iv,"Hh":_emscripten_glMultiTexCoord1s,"Gh":_emscripten_glMultiTexCoord1sv,"Fh":_emscripten_glMultiTexCoord2d,"Eh":_emscripten_glMultiTexCoord2dv,"Dh":_emscripten_glMultiTexCoord2f,"Ch":_emscripten_glMultiTexCoord2fv,"Bh":_emscripten_glMultiTexCoord2i,"Ah":_emscripten_glMultiTexCoord2iv,"yh":_emscripten_glMultiTexCoord2s,"xh":_emscripten_glMultiTexCoord2sv,"wh":_emscripten_glMultiTexCoord3d,"vh":_emscripten_glMultiTexCoord3dv,"uh":_emscripten_glMultiTexCoord3f,"th":_emscripten_glMultiTexCoord3fv,"sh":_emscripten_glMultiTexCoord3i,"rh":_emscripten_glMultiTexCoord3iv,"qh":_emscripten_glMultiTexCoord3s,"ph":_emscripten_glMultiTexCoord3sv,"nh":_emscripten_glMultiTexCoord4d,"mh":_emscripten_glMultiTexCoord4dv,"lh":_emscripten_glMultiTexCoord4f,"kh":_emscripten_glMultiTexCoord4fv,"jh":_emscripten_glMultiTexCoord4i,"ih":_emscripten_glMultiTexCoord4iv,"hh":_emscripten_glMultiTexCoord4s,"gh":_emscripten_glMultiTexCoord4sv,"fh":_emscripten_glNewList,"eh":_emscripten_glNormal3b,"ch":_emscripten_glNormal3bv,"bh":_emscripten_glNormal3d,"ah":_emscripten_glNormal3dv,"$g":_emscripten_glNormal3f,"_g":_emscripten_glNormal3fv,"Zg":_emscripten_glNormal3i,"Yg":_emscripten_glNormal3iv,"Xg":_emscripten_glNormal3s,"Wg":_emscripten_glNormal3sv,"Vg":_emscripten_glNormalPointer,"Ug":_emscripten_glOrtho,"Tg":_emscripten_glPassThrough,"Sg":_emscripten_glPixelMapfv,"Rg":_emscripten_glPixelMapuiv,"Qg":_emscripten_glPixelMapusv,"Pg":_emscripten_glPixelStoref,"Og":_emscripten_glPixelStorei,"Ng":_emscripten_glPixelTransferf,"Mg":_emscripten_glPixelTransferi,"Lg":_emscripten_glPixelZoom,"Kg":_emscripten_glPointParameterf,"Jg":_emscripten_glPointParameterfv,"Ig":_emscripten_glPointParameteri,"Hg":_emscripten_glPointParameteriv,"Gg":_emscripten_glPointSize,"Fg":_emscripten_glPolygonMode,"Eg":_emscripten_glPolygonOffset,"Dg":_emscripten_glPolygonStipple,"Cg":_emscripten_glPopAttrib,"Bg":_emscripten_glPopClientAttrib,"Ag":_emscripten_glPopMatrix,"zg":_emscripten_glPopName,"yg":_emscripten_glPrimitiveRestartIndex,"xg":_emscripten_glPrioritizeTextures,"wg":_emscripten_glProgramEnvParameter4dARB,"vg":_emscripten_glProgramEnvParameter4dvARB,"ug":_emscripten_glProgramEnvParameter4fARB,"tg":_emscripten_glProgramEnvParameter4fvARB,"sg":_emscripten_glProgramLocalParameter4dARB,"rg":_emscripten_glProgramLocalParameter4dvARB,"pg":_emscripten_glProgramLocalParameter4fARB,"og":_emscripten_glProgramLocalParameter4fvARB,"ng":_emscripten_glProgramStringARB,"mg":_emscripten_glPushAttrib,"lg":_emscripten_glPushClientAttrib,"kg":_emscripten_glPushMatrix,"jg":_emscripten_glPushName,"ig":_emscripten_glRasterPos2d,"hg":_emscripten_glRasterPos2dv,"gg":_emscripten_glRasterPos2f,"eg":_emscripten_glRasterPos2fv,"dg":_emscripten_glRasterPos2i,"cg":_emscripten_glRasterPos2iv,"bg":_emscripten_glRasterPos2s,"ag":_emscripten_glRasterPos2sv,"$f":_emscripten_glRasterPos3d,"_f":_emscripten_glRasterPos3dv,"Zf":_emscripten_glRasterPos3f,"Yf":_emscripten_glRasterPos3fv,"Xf":_emscripten_glRasterPos3i,"Uf":_emscripten_glRasterPos3iv,"Tf":_emscripten_glRasterPos3s,"Sf":_emscripten_glRasterPos3sv,"Rf":_emscripten_glRasterPos4d,"Qf":_emscripten_glRasterPos4dv,"Pf":_emscripten_glRasterPos4f,"Of":_emscripten_glRasterPos4fv,"Nf":_emscripten_glRasterPos4i,"Mf":_emscripten_glRasterPos4iv,"Lf":_emscripten_glRasterPos4s,"Jf":_emscripten_glRasterPos4sv,"If":_emscripten_glReadBuffer,"Hf":_emscripten_glReadPixels,"Gf":_emscripten_glRectd,"Ff":_emscripten_glRectdv,"Ef":_emscripten_glRectf,"Df":_emscripten_glRectfv,"Cf":_emscripten_glRecti,"Bf":_emscripten_glRectiv,"Af":_emscripten_glRects,"yf":_emscripten_glRectsv,"xf":_emscripten_glReleaseShaderCompiler,"wf":_emscripten_glRenderMode,"vf":_emscripten_glRenderbufferStorage,"uf":_emscripten_glRenderbufferStorageMultisample,"tf":_emscripten_glResetHistogram,"sf":_emscripten_glResetMinmax,"rf":_emscripten_glRotated,"qf":_emscripten_glRotatef,"pf":_emscripten_glSampleCoverage,"nf":_emscripten_glScaled,"mf":_emscripten_glScalef,"lf":_emscripten_glScissor,"kf":_emscripten_glSecondaryColor3b,"jf":_emscripten_glSecondaryColor3bv,"hf":_emscripten_glSecondaryColor3d,"gf":_emscripten_glSecondaryColor3dv,"ff":_emscripten_glSecondaryColor3f,"ef":_emscripten_glSecondaryColor3fv,"df":_emscripten_glSecondaryColor3i,"bf":_emscripten_glSecondaryColor3iv,"af":_emscripten_glSecondaryColor3s,"$e":_emscripten_glSecondaryColor3sv,"_e":_emscripten_glSecondaryColor3ub,"Ze":_emscripten_glSecondaryColor3ubv,"Ye":_emscripten_glSecondaryColor3ui,"Xe":_emscripten_glSecondaryColor3uiv,"We":_emscripten_glSecondaryColor3us,"Ve":_emscripten_glSecondaryColor3usv,"Ue":_emscripten_glSecondaryColorPointer,"Se":_emscripten_glSelectBuffer,"Re":_emscripten_glSeparableFilter2D,"Qe":_emscripten_glShadeModel,"Pe":_emscripten_glShaderBinary,"Oe":_emscripten_glShaderSource,"Ne":_emscripten_glStencilFunc,"Me":_emscripten_glStencilFuncSeparate,"Le":_emscripten_glStencilMask,"Ke":_emscripten_glStencilMaskSeparate,"Je":_emscripten_glStencilOp,"He":_emscripten_glStencilOpSeparate,"Ge":_emscripten_glTexBuffer,"Fe":_emscripten_glTexCoord1d,"Ee":_emscripten_glTexCoord1dv,"De":_emscripten_glTexCoord1f,"Ce":_emscripten_glTexCoord1fv,"Be":_emscripten_glTexCoord1i,"Ae":_emscripten_glTexCoord1iv,"ze":_emscripten_glTexCoord1s,"ye":_emscripten_glTexCoord1sv,"we":_emscripten_glTexCoord2d,"ve":_emscripten_glTexCoord2dv,"ue":_emscripten_glTexCoord2f,"te":_emscripten_glTexCoord2fv,"se":_emscripten_glTexCoord2i,"re":_emscripten_glTexCoord2iv,"qe":_emscripten_glTexCoord2s,"pe":_emscripten_glTexCoord2sv,"oe":_emscripten_glTexCoord3d,"ne":_emscripten_glTexCoord3dv,"le":_emscripten_glTexCoord3f,"ke":_emscripten_glTexCoord3fv,"je":_emscripten_glTexCoord3i,"ie":_emscripten_glTexCoord3iv,"he":_emscripten_glTexCoord3s,"ge":_emscripten_glTexCoord3sv,"fe":_emscripten_glTexCoord4d,"ee":_emscripten_glTexCoord4dv,"de":_emscripten_glTexCoord4f,"ce":_emscripten_glTexCoord4fv,"ae":_emscripten_glTexCoord4i,"$d":_emscripten_glTexCoord4iv,"_d":_emscripten_glTexCoord4s,"Zd":_emscripten_glTexCoord4sv,"Yd":_emscripten_glTexCoordPointer,"Xd":_emscripten_glTexEnvf,"Wd":_emscripten_glTexEnvfv,"Vd":_emscripten_glTexEnvi,"Ud":_emscripten_glTexEnviv,"Td":_emscripten_glTexGend,"Rd":_emscripten_glTexGendv,"Qd":_emscripten_glTexGenf,"Pd":_emscripten_glTexGenfv,"Od":_emscripten_glTexGeni,"Nd":_emscripten_glTexGeniv,"Md":_emscripten_glTexImage1D,"Ld":_emscripten_glTexImage2D,"Kd":_emscripten_glTexImage3D,"Jd":_emscripten_glTexParameterIiv,"Id":_emscripten_glTexParameterIuiv,"Gd":_emscripten_glTexParameterf,"Fd":_emscripten_glTexParameterfv,"Ed":_emscripten_glTexParameteri,"Dd":_emscripten_glTexParameteriv,"Cd":_emscripten_glTexStorage2D,"Bd":_emscripten_glTexStorage3D,"Ad":_emscripten_glTexSubImage1D,"zd":_emscripten_glTexSubImage2D,"yd":_emscripten_glTexSubImage3D,"xd":_emscripten_glTransformFeedbackVaryings,"vd":_emscripten_glTranslated,"ud":_emscripten_glTranslatef,"td":_emscripten_glUniform1f,"sd":_emscripten_glUniform1fv,"rd":_emscripten_glUniform1i,"qd":_emscripten_glUniform1iv,"pd":_emscripten_glUniform1ui,"od":_emscripten_glUniform1uiv,"nd":_emscripten_glUniform2f,"md":_emscripten_glUniform2fv,"kd":_emscripten_glUniform2i,"jd":_emscripten_glUniform2iv,"id":_emscripten_glUniform2ui,"hd":_emscripten_glUniform2uiv,"gd":_emscripten_glUniform3f,"fd":_emscripten_glUniform3fv,"ed":_emscripten_glUniform3i,"dd":_emscripten_glUniform3iv,"cd":_emscripten_glUniform3ui,"bd":_emscripten_glUniform3uiv,"$c":_emscripten_glUniform4f,"_c":_emscripten_glUniform4fv,"Zc":_emscripten_glUniform4i,"Yc":_emscripten_glUniform4iv,"Xc":_emscripten_glUniform4ui,"Wc":_emscripten_glUniform4uiv,"Vc":_emscripten_glUniformBlockBinding,"Uc":_emscripten_glUniformMatrix2fv,"Tc":_emscripten_glUniformMatrix2x3fv,"Sc":_emscripten_glUniformMatrix2x4fv,"Qc":_emscripten_glUniformMatrix3fv,"Pc":_emscripten_glUniformMatrix3x2fv,"Oc":_emscripten_glUniformMatrix3x4fv,"Nc":_emscripten_glUniformMatrix4fv,"Mc":_emscripten_glUniformMatrix4x2fv,"Lc":_emscripten_glUniformMatrix4x3fv,"Kc":_emscripten_glUnmapBuffer,"Jc":_emscripten_glUseProgram,"Ic":_emscripten_glUseProgramObjectARB,"Hc":_emscripten_glValidateProgram,"Fc":_emscripten_glVertex2d,"Ec":_emscripten_glVertex2dv,"Dc":_emscripten_glVertex2f,"Cc":_emscripten_glVertex2fv,"Bc":_emscripten_glVertex2i,"Ac":_emscripten_glVertex2iv,"zc":_emscripten_glVertex2s,"yc":_emscripten_glVertex2sv,"xc":_emscripten_glVertex3d,"wc":_emscripten_glVertex3dv,"uc":_emscripten_glVertex3f,"tc":_emscripten_glVertex3fv,"sc":_emscripten_glVertex3i,"rc":_emscripten_glVertex3iv,"qc":_emscripten_glVertex3s,"pc":_emscripten_glVertex3sv,"oc":_emscripten_glVertex4d,"nc":_emscripten_glVertex4dv,"mc":_emscripten_glVertex4f,"lc":_emscripten_glVertex4fv,"jc":_emscripten_glVertex4i,"ic":_emscripten_glVertex4iv,"hc":_emscripten_glVertex4s,"gc":_emscripten_glVertex4sv,"fc":_emscripten_glVertexAttrib1d,"ec":_emscripten_glVertexAttrib1dv,"dc":_emscripten_glVertexAttrib1f,"cc":_emscripten_glVertexAttrib1fv,"bc":_emscripten_glVertexAttrib1s,"ac":_emscripten_glVertexAttrib1sv,"_b":_emscripten_glVertexAttrib2d,"Zb":_emscripten_glVertexAttrib2dv,"Yb":_emscripten_glVertexAttrib2f,"Xb":_emscripten_glVertexAttrib2fv,"Wb":_emscripten_glVertexAttrib2s,"Vb":_emscripten_glVertexAttrib2sv,"Ub":_emscripten_glVertexAttrib3d,"Tb":_emscripten_glVertexAttrib3dv,"Sb":_emscripten_glVertexAttrib3f,"Rb":_emscripten_glVertexAttrib3fv,"Ob":_emscripten_glVertexAttrib3s,"Nb":_emscripten_glVertexAttrib3sv,"Mb":_emscripten_glVertexAttrib4Nbv,"Lb":_emscripten_glVertexAttrib4Niv,"Kb":_emscripten_glVertexAttrib4Nsv,"Jb":_emscripten_glVertexAttrib4Nub,"Ib":_emscripten_glVertexAttrib4Nubv,"Hb":_emscripten_glVertexAttrib4Nuiv,"Gb":_emscripten_glVertexAttrib4Nusv,"Fb":_emscripten_glVertexAttrib4bv,"Db":_emscripten_glVertexAttrib4d,"Cb":_emscripten_glVertexAttrib4dv,"Bb":_emscripten_glVertexAttrib4f,"Ab":_emscripten_glVertexAttrib4fv,"zb":_emscripten_glVertexAttrib4iv,"yb":_emscripten_glVertexAttrib4s,"xb":_emscripten_glVertexAttrib4sv,"wb":_emscripten_glVertexAttrib4ubv,"vb":_emscripten_glVertexAttrib4uiv,"ub":_emscripten_glVertexAttrib4usv,"sb":_emscripten_glVertexAttribDivisor,"rb":_emscripten_glVertexAttribI1i,"qb":_emscripten_glVertexAttribI1iv,"pb":_emscripten_glVertexAttribI1ui,"ob":_emscripten_glVertexAttribI1uiv,"nb":_emscripten_glVertexAttribI2i,"mb":_emscripten_glVertexAttribI2iv,"lb":_emscripten_glVertexAttribI2ui,"kb":_emscripten_glVertexAttribI2uiv,"jb":_emscripten_glVertexAttribI3i,"hb":_emscripten_glVertexAttribI3iv,"gb":_emscripten_glVertexAttribI3ui,"fb":_emscripten_glVertexAttribI3uiv,"eb":_emscripten_glVertexAttribI4bv,"db":_emscripten_glVertexAttribI4i,"cb":_emscripten_glVertexAttribI4iv,"bb":_emscripten_glVertexAttribI4sv,"ab":_emscripten_glVertexAttribI4ubv,"$a":_emscripten_glVertexAttribI4ui,"_a":_emscripten_glVertexAttribI4uiv,"Ya":_emscripten_glVertexAttribI4usv,"Xa":_emscripten_glVertexAttribIPointer,"Wa":_emscripten_glVertexAttribPointer,"Va":_emscripten_glVertexPointer,"Ua":_emscripten_glViewport,"Ta":_emscripten_glWindowPos2d,"Sa":_emscripten_glWindowPos2dv,"Ra":_emscripten_glWindowPos2f,"Qa":_emscripten_glWindowPos2fv,"Pa":_emscripten_glWindowPos2i,"Na":_emscripten_glWindowPos2iv,"Ma":_emscripten_glWindowPos2s,"La":_emscripten_glWindowPos2sv,"Ka":_emscripten_glWindowPos3d,"Ja":_emscripten_glWindowPos3dv,"Ia":_emscripten_glWindowPos3f,"Ha":_emscripten_glWindowPos3fv,"Ga":_emscripten_glWindowPos3i,"Fa":_emscripten_glWindowPos3iv,"Ea":_emscripten_glWindowPos3s,"Ca":_emscripten_glWindowPos3sv,"Ba":_emscripten_memcpy_big,"Aa":_emscripten_request_fullscreen_strategy,"P":_emscripten_request_pointerlock,"O":_emscripten_set_blur_callback_on_thread,"l":_emscripten_set_canvas_size,"r":_emscripten_set_element_css_size,"N":_emscripten_set_focus_callback_on_thread,"M":_emscripten_set_fullscreenchange_callback_on_thread,"q":_emscripten_set_gamepadconnected_callback_on_thread,"p":_emscripten_set_gamepaddisconnected_callback_on_thread,"L":_emscripten_set_keydown_callback_on_thread,"K":_emscripten_set_keypress_callback_on_thread,"J":_emscripten_set_keyup_callback_on_thread,"I":_emscripten_set_mousedown_callback_on_thread,"H":_emscripten_set_mouseenter_callback_on_thread,"G":_emscripten_set_mouseleave_callback_on_thread,"F":_emscripten_set_mousemove_callback_on_thread,"E":_emscripten_set_mouseup_callback_on_thread,"D":_emscripten_set_pointerlockchange_callback_on_thread,"C":_emscripten_set_resize_callback_on_thread,"B":_emscripten_set_touchcancel_callback_on_thread,"A":_emscripten_set_touchend_callback_on_thread,"z":_emscripten_set_touchmove_callback_on_thread,"y":_emscripten_set_touchstart_callback_on_thread,"x":_emscripten_set_visibilitychange_callback_on_thread,"w":_emscripten_set_wheel_callback_on_thread,"xa":_emscripten_sleep,"wa":_getenv,"o":_gettimeofday,"ua":_glClear,"k":_llvm_stackrestore,"j":_llvm_stacksave,"ta":_nanosleep,"g":_sigaction,"sa":_signal,"ra":_time,"a":DYNAMICTOP_PTR,"b":tempDoublePtr,"c":STACKTOP,"d":EMTSTACKTOP,"e":eb};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var ___emscripten_environ_constructor=Module["___emscripten_environ_constructor"]=(function(){return Module["asm"]["Wn"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["Xn"].apply(null,arguments)});var _emscripten_GetProcAddress=Module["_emscripten_GetProcAddress"]=(function(){return Module["asm"]["Yn"].apply(null,arguments)});var _emscripten_replace_memory=Module["_emscripten_replace_memory"]=(function(){return Module["asm"]["_emscripten_replace_memory"].apply(null,arguments)});var _fflush=Module["_fflush"]=(function(){return Module["asm"]["Zn"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_n"].apply(null,arguments)});var _main=Module["_main"]=(function(){return Module["asm"]["$n"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["ao"].apply(null,arguments)});var emtStackRestore=Module["emtStackRestore"]=(function(){return Module["asm"]["ap"].apply(null,arguments)});var emtStackSave=Module["emtStackSave"]=(function(){return Module["asm"]["bp"].apply(null,arguments)});var emterpret=Module["emterpret"]=(function(){return Module["asm"]["cp"].apply(null,arguments)});var setAsyncState=Module["setAsyncState"]=(function(){return Module["asm"]["dp"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["ep"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["fp"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["gp"].apply(null,arguments)});var dynCall_i=Module["dynCall_i"]=(function(){return Module["asm"]["bo"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["co"].apply(null,arguments)});var dynCall_iii=Module["dynCall_iii"]=(function(){return Module["asm"]["eo"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["fo"].apply(null,arguments)});var dynCall_iiiii=Module["dynCall_iiiii"]=(function(){return Module["asm"]["go"].apply(null,arguments)});var dynCall_iiiiidii=Module["dynCall_iiiiidii"]=(function(){return Module["asm"]["ho"].apply(null,arguments)});var dynCall_iiiiii=Module["dynCall_iiiiii"]=(function(){return Module["asm"]["io"].apply(null,arguments)});var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=(function(){return Module["asm"]["jo"].apply(null,arguments)});var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=(function(){return Module["asm"]["ko"].apply(null,arguments)});var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=(function(){return Module["asm"]["lo"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["mo"].apply(null,arguments)});var dynCall_vd=Module["dynCall_vd"]=(function(){return Module["asm"]["no"].apply(null,arguments)});var dynCall_vdd=Module["dynCall_vdd"]=(function(){return Module["asm"]["oo"].apply(null,arguments)});var dynCall_vddd=Module["dynCall_vddd"]=(function(){return Module["asm"]["po"].apply(null,arguments)});var dynCall_vdddd=Module["dynCall_vdddd"]=(function(){return Module["asm"]["qo"].apply(null,arguments)});var dynCall_vdddddd=Module["dynCall_vdddddd"]=(function(){return Module["asm"]["ro"].apply(null,arguments)});var dynCall_vf=Module["dynCall_vf"]=(function(){return Module["asm"]["so"].apply(null,arguments)});var dynCall_vff=Module["dynCall_vff"]=(function(){return Module["asm"]["to"].apply(null,arguments)});var dynCall_vfff=Module["dynCall_vfff"]=(function(){return Module["asm"]["uo"].apply(null,arguments)});var dynCall_vffff=Module["dynCall_vffff"]=(function(){return Module["asm"]["vo"].apply(null,arguments)});var dynCall_vfi=Module["dynCall_vfi"]=(function(){return Module["asm"]["wo"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["xo"].apply(null,arguments)});var dynCall_vid=Module["dynCall_vid"]=(function(){return Module["asm"]["yo"].apply(null,arguments)});var dynCall_vidd=Module["dynCall_vidd"]=(function(){return Module["asm"]["zo"].apply(null,arguments)});var dynCall_viddd=Module["dynCall_viddd"]=(function(){return Module["asm"]["Ao"].apply(null,arguments)});var dynCall_vidddd=Module["dynCall_vidddd"]=(function(){return Module["asm"]["Bo"].apply(null,arguments)});var dynCall_viddidd=Module["dynCall_viddidd"]=(function(){return Module["asm"]["Co"].apply(null,arguments)});var dynCall_viddiiddiii=Module["dynCall_viddiiddiii"]=(function(){return Module["asm"]["Do"].apply(null,arguments)});var dynCall_viddiii=Module["dynCall_viddiii"]=(function(){return Module["asm"]["Eo"].apply(null,arguments)});var dynCall_vif=Module["dynCall_vif"]=(function(){return Module["asm"]["Fo"].apply(null,arguments)});var dynCall_viff=Module["dynCall_viff"]=(function(){return Module["asm"]["Go"].apply(null,arguments)});var dynCall_vifff=Module["dynCall_vifff"]=(function(){return Module["asm"]["Ho"].apply(null,arguments)});var dynCall_viffff=Module["dynCall_viffff"]=(function(){return Module["asm"]["Io"].apply(null,arguments)});var dynCall_viffiff=Module["dynCall_viffiff"]=(function(){return Module["asm"]["Jo"].apply(null,arguments)});var dynCall_viffiiffiii=Module["dynCall_viffiiffiii"]=(function(){return Module["asm"]["Ko"].apply(null,arguments)});var dynCall_viffiii=Module["dynCall_viffiii"]=(function(){return Module["asm"]["Lo"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["Mo"].apply(null,arguments)});var dynCall_viid=Module["dynCall_viid"]=(function(){return Module["asm"]["No"].apply(null,arguments)});var dynCall_viidddd=Module["dynCall_viidddd"]=(function(){return Module["asm"]["Oo"].apply(null,arguments)});var dynCall_viif=Module["dynCall_viif"]=(function(){return Module["asm"]["Po"].apply(null,arguments)});var dynCall_viiffff=Module["dynCall_viiffff"]=(function(){return Module["asm"]["Qo"].apply(null,arguments)});var dynCall_viiffffi=Module["dynCall_viiffffi"]=(function(){return Module["asm"]["Ro"].apply(null,arguments)});var dynCall_viifi=Module["dynCall_viifi"]=(function(){return Module["asm"]["So"].apply(null,arguments)});var dynCall_viii=Module["dynCall_viii"]=(function(){return Module["asm"]["To"].apply(null,arguments)});var dynCall_viiii=Module["dynCall_viiii"]=(function(){return Module["asm"]["Uo"].apply(null,arguments)});var dynCall_viiiii=Module["dynCall_viiiii"]=(function(){return Module["asm"]["Vo"].apply(null,arguments)});var dynCall_viiiiii=Module["dynCall_viiiiii"]=(function(){return Module["asm"]["Wo"].apply(null,arguments)});var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=(function(){return Module["asm"]["Xo"].apply(null,arguments)});var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=(function(){return Module["asm"]["Yo"].apply(null,arguments)});var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=(function(){return Module["asm"]["Zo"].apply(null,arguments)});var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=(function(){return Module["asm"]["_o"].apply(null,arguments)});var dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=(function(){return Module["asm"]["$o"].apply(null,arguments)});Module["asm"]=asm;Module["ccall"]=ccall;Module["Pointer_stringify"]=Pointer_stringify;Module["addOnExit"]=addOnExit;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;var argv=stackAlloc((argc+1)*4);HEAP32[argv>>2]=allocateUTF8OnStack(Module["thisProgram"]);for(var i=1;i<argc;i++){HEAP32[(argv>>2)+i]=allocateUTF8OnStack(args[i-1])}HEAP32[(argv>>2)+argc]=0;var initialEmtStackTop=Module["emtStackSave"]();try{var ret=Module["_main"](argc,argv,0);if(typeof EmterpreterAsync==="object"&&EmterpreterAsync.state!==1){exit(ret,true)}}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;Module["emtStackRestore"](initialEmtStackTop);return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}err("exception thrown: "+toLog);Module["quit"](1,e)}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}Module["quit"](status,new ExitStatus(status))}function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info."}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run();if(typeof window==="object"&&(typeof ENVIRONMENT_IS_PTHREAD==="undefined"||!ENVIRONMENT_IS_PTHREAD)){function emrun_register_handlers(){var emrun_num_post_messages_in_flight=0;var emrun_should_close_itself=false;function postExit(msg){var http=new XMLHttpRequest;http.onreadystatechange=(function(){if(http.readyState==4){try{if(typeof window!=="undefined"&&window.close)window.close()}catch(e){}}});http.open("POST","stdio.html",true);http.send(msg)}function post(msg){var http=new XMLHttpRequest;++emrun_num_post_messages_in_flight;http.onreadystatechange=(function(){if(http.readyState==4){if(--emrun_num_post_messages_in_flight==0&&emrun_should_close_itself)postExit("^exit^"+EXITSTATUS)}});http.open("POST","stdio.html",true);http.send(msg)}if(document.URL.search("localhost")!=-1||document.URL.search(":6931/")!=-1){var emrun_http_sequence_number=1;var prevPrint=out;var prevErr=err;function emrun_exit(){if(emrun_num_post_messages_in_flight==0)postExit("^exit^"+EXITSTATUS);else emrun_should_close_itself=true}Module["addOnExit"](emrun_exit);out=function emrun_print(text){post("^out^"+emrun_http_sequence_number++ +"^"+encodeURIComponent(text));prevPrint(text)};err=function emrun_printErr(text){post("^err^"+emrun_http_sequence_number++ +"^"+encodeURIComponent(text));prevErr(text)};post("^pageload^")}}if(typeof Module!=="undefined"&&typeof document!=="undefined")emrun_register_handlers()}



